/usr/bin/env time -v /home/ljw/VTR/vtr-verilog-to-routing/build/bin/yosys -c synthesis.tcl

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.26 (git sha1 7a967625680, clang 10.0.0-4ubuntu1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `add' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `aigmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `alumacc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `anlogic_eqn' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `anlogic_fixcarry' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `assertpmux' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `async2sync' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `attrmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `attrmvcp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `autoname' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `blackbox' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `bmuxmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `bugpoint' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `bwmuxmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `check' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `chformal' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `chparam' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `chtype' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `clean' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `clean_zerowidth' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `clk2fflogic' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `clkbufmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `connect' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `connect_rpc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `connwrappers' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `coolrunner2_fixup' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `coolrunner2_sop' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `copy' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `cover' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `cutpoint' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `debug' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `delete' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `deminout' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `demuxmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `design' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dffinit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dfflegalize' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dfflibmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dffunmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `dump' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `echo' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ecp5_gsr' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `edgetypes' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `efinix_fixcarry' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_add' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_induct' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_make' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_mark' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_miter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_purge' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_remove' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_simple' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_status' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `equiv_struct' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `expose' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract_counter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract_fa' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extract_reduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `extractinv' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `flatten' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `flowmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fmcombine' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fminit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `formalff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `freduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_detect' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_expand' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_export' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_extract' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_info' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_map' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fsm_recode' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `fst2tb' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `gatemate_foldinv' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `glift' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `greenpak4_dffinv' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `help' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `hierarchy' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `hilomap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `history' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_braminit' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_dsp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ice40_wrapcarry' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `insbuf' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `iopadmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `jny' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `json' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `log' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `logger' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ls' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `ltp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `lut2mux' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `maccmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_bmux2rom' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_bram' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_collect' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_dff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_libmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_map' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_memx' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_narrow' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_nordff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_share' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `memory_unpack' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `miter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `mutate' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `muxcover' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `muxpack' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `nlutmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `onehot' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_clean' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_demorgan' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_dff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_expr' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_ffinv' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_lut' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_lut_ins' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_mem' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_mem_feedback' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_mem_priority' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_mem_widen' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_merge' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_muxtree' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_reduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `opt_share' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `paramap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `peepopt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `plugin' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `pmux2shiftx' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `pmuxtree' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `portlist' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `prep' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `printattrs' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_arst' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_clean' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_dff' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_dlatch' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_init' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_memwr' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_mux' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_prune' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_rmdead' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `proc_rom' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `qbfsat' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `qwp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_aiger' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_blif' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_ilang' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_json' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_liberty' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_rtlil' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read_verilog' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `rename' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `rmports' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `sat' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `scatter' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `scc' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `scratchpad' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `script' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `select' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `setattr' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `setparam' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `setundef' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `share' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `shell' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `show' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `shregmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `sim' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `simplemap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `splice' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `splitcells' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `splitnets' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `sta' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `stat' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `submod' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `supercover' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_achronix' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_anlogic' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_coolrunner2' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_easic' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_ecp5' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_efinix' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_fabulous' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_gatemate' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_gowin' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_greenpak4' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_ice40' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_intel' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_intel_alm' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_machxo2' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_nexus' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_quicklogic' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_sf2' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `synth_xilinx' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `tcl' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `techmap' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `tee' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `test_abcloop' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `test_autotb' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `test_cell' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `test_pmgen' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `torder' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `tribuf' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `uniquify' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `verific' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `verilog_defaults' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `verilog_defines' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `viz' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `wbflip' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `wreduce' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_aiger' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_blif' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_btor' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_cxxrtl' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_edif' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_file' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_firrtl' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_ilang' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_intersynth' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_jny' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_json' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_rtlil' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_simplec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_smt2' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_smv' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_spice' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_table' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_verilog' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `write_xaiger' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `xilinx_dffopt' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `xilinx_dsp' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `xilinx_srl' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `xprop' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `zinit' -> skip.

1. Executing Verilog-2005 frontend: /home/ljw/VTR/vtr-verilog-to-routing/build/bin/../share/yosys/parmys/vtr_primitives.v
Using parmys as partial mapper
Using Yosys read_verilog command
Parsing Verilog input from `/home/ljw/VTR/vtr-verilog-to-routing/build/bin/../share/yosys/parmys/vtr_primitives.v' to AST representation.
Generating RTLIL representation for module `\LUT_K'.
Generating RTLIL representation for module `\DFF'.
Generating RTLIL representation for module `\fpga_interconnect'.
Generating RTLIL representation for module `\mux'.
Generating RTLIL representation for module `\adder'.
Generating RTLIL representation for module `\multiply'.
Generating RTLIL representation for module `\single_port_ram'.
Generating RTLIL representation for module `\dual_port_ram'.
Successfully finished Verilog frontend.
parmys_arch pass finished.

2. Executing Verilog-2005 frontend: stereovision0.v
Parsing SystemVerilog input from `stereovision0.v' to AST representation.
Generating RTLIL representation for module `\sv_chip0_hierarchy_no_mem'.
Generating RTLIL representation for module `\combine_res'.
Generating RTLIL representation for module `\v_fltr_496'.
Generating RTLIL representation for module `\v_fltr_316'.
Generating RTLIL representation for module `\lp_fltr_v1'.
Generating RTLIL representation for module `\lp_fltr_v2'.
Generating RTLIL representation for module `\lp_fltr_v4'.
Generating RTLIL representation for module `\scaler'.
Generating RTLIL representation for module `\scl_v_fltr'.
Generating RTLIL representation for module `\scl_h_fltr'.
Generating RTLIL representation for module `\sh_reg_1'.
Generating RTLIL representation for module `\wrapper_qs_intr_10_20'.
Generating RTLIL representation for module `\wrapper_qs_intr_5_20'.
Generating RTLIL representation for module `\quadintr_10_20'.
Generating RTLIL representation for module `\quadintr_5_20'.
Generating RTLIL representation for module `\find_max'.
Generating RTLIL representation for module `\lp_fltr'.
Generating RTLIL representation for module `\port_bus_1to0_1'.
Generating RTLIL representation for module `\my_fifo_496'.
Generating RTLIL representation for module `\my_fifo_316'.
Generating RTLIL representation for module `\my_fifo_2'.
Generating RTLIL representation for module `\my_fifo_1'.
Generating RTLIL representation for module `\my_fifo_89'.
Generating RTLIL representation for module `\my_fifo_179'.
Generating RTLIL representation for module `\my_fifo_359'.
Successfully finished Verilog frontend.

3. Executing SCC pass (detecting logic loops).
Skipping module \my_fifo_359 as it contains processes (run 'proc' pass first).
Skipping module \my_fifo_179 as it contains processes (run 'proc' pass first).
Skipping module \my_fifo_89 as it contains processes (run 'proc' pass first).
Skipping module \my_fifo_1 as it contains processes (run 'proc' pass first).
Skipping module \my_fifo_2 as it contains processes (run 'proc' pass first).
Skipping module \my_fifo_316 as it contains processes (run 'proc' pass first).
Skipping module \my_fifo_496 as it contains processes (run 'proc' pass first).
Skipping module \port_bus_1to0_1 as it contains processes (run 'proc' pass first).
Skipping module \lp_fltr as it contains processes (run 'proc' pass first).
Skipping module \find_max as it contains processes (run 'proc' pass first).
Skipping module \quadintr_5_20 as it contains processes (run 'proc' pass first).
Skipping module \quadintr_10_20 as it contains processes (run 'proc' pass first).
Skipping module \wrapper_qs_intr_5_20 as it contains processes (run 'proc' pass first).
Skipping module \wrapper_qs_intr_10_20 as it contains processes (run 'proc' pass first).
Skipping module \sh_reg_1 as it contains processes (run 'proc' pass first).
Skipping module \scl_h_fltr as it contains processes (run 'proc' pass first).
Skipping module \scl_v_fltr as it contains processes (run 'proc' pass first).
Skipping module \scaler as it contains processes (run 'proc' pass first).
Skipping module \lp_fltr_v4 as it contains processes (run 'proc' pass first).
Skipping module \lp_fltr_v2 as it contains processes (run 'proc' pass first).
Skipping module \lp_fltr_v1 as it contains processes (run 'proc' pass first).
Found 0 SCCs in module v_fltr_316.
Found 0 SCCs in module v_fltr_496.
Skipping module \combine_res as it contains processes (run 'proc' pass first).
Skipping module \sv_chip0_hierarchy_no_mem as it contains processes (run 'proc' pass first).
Skipping module \dual_port_ram as it contains processes (run 'proc' pass first).
Skipping module \single_port_ram as it contains processes (run 'proc' pass first).
Found 0 SCCs in module multiply.
Found 0 SCCs in module adder.
Found 0 SCCs in module mux.
Found 0 SCCs in module fpga_interconnect.
Skipping module \DFF as it contains processes (run 'proc' pass first).
Found 0 SCCs in module LUT_K.
Found 0 SCCs.

4. Executing HIERARCHY pass (managing design hierarchy).

4.1. Finding top of design hierarchy..
root of   0 design levels: my_fifo_359         
root of   0 design levels: my_fifo_179         
root of   0 design levels: my_fifo_89          
root of   0 design levels: my_fifo_1           
root of   0 design levels: my_fifo_2           
root of   0 design levels: my_fifo_316         
root of   0 design levels: my_fifo_496         
root of   0 design levels: port_bus_1to0_1     
root of   0 design levels: lp_fltr             
root of   0 design levels: find_max            
root of   0 design levels: quadintr_5_20       
root of   0 design levels: quadintr_10_20      
root of   1 design levels: wrapper_qs_intr_5_20
root of   1 design levels: wrapper_qs_intr_10_20
root of   0 design levels: sh_reg_1            
root of   1 design levels: scl_h_fltr          
root of   1 design levels: scl_v_fltr          
root of   2 design levels: scaler              
root of   1 design levels: lp_fltr_v4          
root of   1 design levels: lp_fltr_v2          
root of   1 design levels: lp_fltr_v1          
root of   1 design levels: v_fltr_316          
root of   1 design levels: v_fltr_496          
root of   0 design levels: combine_res         
root of   3 design levels: sv_chip0_hierarchy_no_mem
root of   0 design levels: dual_port_ram       
root of   0 design levels: single_port_ram     
root of   0 design levels: multiply            
root of   0 design levels: adder               
root of   0 design levels: mux                 
root of   0 design levels: fpga_interconnect   
root of   0 design levels: DFF                 
root of   0 design levels: LUT_K               
Automatically selected sv_chip0_hierarchy_no_mem as design top module.

4.2. Analyzing design hierarchy..
Top module:  \sv_chip0_hierarchy_no_mem
Used module:     \find_max
Used module:     \combine_res
Used module:     \my_fifo_2
Used module:     \my_fifo_1
Used module:     \wrapper_qs_intr_10_20
Used module:         \quadintr_10_20
Used module:     \wrapper_qs_intr_5_20
Used module:         \quadintr_5_20
Used module:     \lp_fltr_v4
Used module:         \my_fifo_89
Used module:     \lp_fltr_v2
Used module:         \my_fifo_179
Used module:     \lp_fltr_v1
Used module:         \my_fifo_359
Used module:     \lp_fltr
Used module:     \port_bus_1to0_1
Used module:     \v_fltr_316
Used module:         \my_fifo_316
Used module:     \v_fltr_496
Used module:         \my_fifo_496
Used module:     \scaler
Used module:         \scl_h_fltr
Used module:             \sh_reg_1
Used module:         \scl_v_fltr

4.3. Analyzing design hierarchy..
Top module:  \sv_chip0_hierarchy_no_mem
Used module:     \find_max
Used module:     \combine_res
Used module:     \my_fifo_2
Used module:     \my_fifo_1
Used module:     \wrapper_qs_intr_10_20
Used module:         \quadintr_10_20
Used module:     \wrapper_qs_intr_5_20
Used module:         \quadintr_5_20
Used module:     \lp_fltr_v4
Used module:         \my_fifo_89
Used module:     \lp_fltr_v2
Used module:         \my_fifo_179
Used module:     \lp_fltr_v1
Used module:         \my_fifo_359
Used module:     \lp_fltr
Used module:     \port_bus_1to0_1
Used module:     \v_fltr_316
Used module:         \my_fifo_316
Used module:     \v_fltr_496
Used module:         \my_fifo_496
Used module:     \scaler
Used module:         \scl_h_fltr
Used module:             \sh_reg_1
Used module:         \scl_v_fltr
Removing unused module `\dual_port_ram'.
Removing unused module `\single_port_ram'.
Removing unused module `\multiply'.
Removing unused module `\adder'.
Removing unused module `\mux'.
Removing unused module `\fpga_interconnect'.
Removing unused module `\DFF'.
Removing unused module `\LUT_K'.
Removed 8 unused modules.
Mapping positional arguments of cell wrapper_qs_intr_5_20.my_inst_quadintr (quadintr_5_20).
Mapping positional arguments of cell wrapper_qs_intr_10_20.my_inst_quadintr (quadintr_10_20).
Mapping positional arguments of cell scl_h_fltr.ints_sh_reg_4_6 (sh_reg_1).
Mapping positional arguments of cell scl_h_fltr.ints_sh_reg_4_5 (sh_reg_1).
Mapping positional arguments of cell scl_h_fltr.ints_sh_reg_4_4 (sh_reg_1).
Mapping positional arguments of cell scl_h_fltr.ints_sh_reg_4_3 (sh_reg_1).
Mapping positional arguments of cell scl_h_fltr.ints_sh_reg_4_2 (sh_reg_1).
Mapping positional arguments of cell scl_h_fltr.ints_sh_reg_4_1 (sh_reg_1).
Mapping positional arguments of cell scl_h_fltr.ints_sh_reg_4_0 (sh_reg_1).
Mapping positional arguments of cell scl_h_fltr.ints_sh_reg_2_2 (sh_reg_1).
Mapping positional arguments of cell scl_h_fltr.ints_sh_reg_2_1 (sh_reg_1).
Mapping positional arguments of cell scl_h_fltr.ints_sh_reg_2_0 (sh_reg_1).
Mapping positional arguments of cell scl_v_fltr.ints_fifo_gen_6 (my_fifo_496).
Mapping positional arguments of cell scl_v_fltr.ints_fifo_gen_5 (my_fifo_496).
Mapping positional arguments of cell scl_v_fltr.ints_fifo_gen_4 (my_fifo_496).
Mapping positional arguments of cell scl_v_fltr.ints_fifo_gen_3 (my_fifo_496).
Mapping positional arguments of cell scl_v_fltr.ints_fifo_gen_2 (my_fifo_496).
Mapping positional arguments of cell scl_v_fltr.ints_fifo_gen_1 (my_fifo_496).
Mapping positional arguments of cell scl_v_fltr.ints_fifo_gen_0 (my_fifo_496).
Mapping positional arguments of cell scaler.scl_h_fltr_inst (scl_h_fltr).
Mapping positional arguments of cell scaler.scl_v_fltr_inst (scl_v_fltr).
Mapping positional arguments of cell lp_fltr_v4.ints_fifo_2 (my_fifo_89).
Mapping positional arguments of cell lp_fltr_v4.ints_fifo_1 (my_fifo_89).
Mapping positional arguments of cell lp_fltr_v2.ints_fifo_2 (my_fifo_179).
Mapping positional arguments of cell lp_fltr_v2.ints_fifo_1 (my_fifo_179).
Mapping positional arguments of cell lp_fltr_v1.ints_fifo_2 (my_fifo_359).
Mapping positional arguments of cell lp_fltr_v1.ints_fifo_1 (my_fifo_359).
Mapping positional arguments of cell v_fltr_316.more_inst (my_fifo_316).
Mapping positional arguments of cell v_fltr_316.fifo2 (my_fifo_316).
Mapping positional arguments of cell v_fltr_316.fifo1 (my_fifo_316).
Mapping positional arguments of cell v_fltr_316.fifo0 (my_fifo_316).
Mapping positional arguments of cell v_fltr_496.more_inst (my_fifo_496).
Mapping positional arguments of cell v_fltr_496.fifo10 (my_fifo_496).
Mapping positional arguments of cell v_fltr_496.fifo9 (my_fifo_496).
Mapping positional arguments of cell v_fltr_496.fifo8 (my_fifo_496).
Mapping positional arguments of cell v_fltr_496.fifo7 (my_fifo_496).
Mapping positional arguments of cell v_fltr_496.fifo6 (my_fifo_496).
Mapping positional arguments of cell v_fltr_496.fifo5 (my_fifo_496).
Mapping positional arguments of cell v_fltr_496.fifo4 (my_fifo_496).
Mapping positional arguments of cell v_fltr_496.fifo3 (my_fifo_496).
Mapping positional arguments of cell v_fltr_496.fifo2 (my_fifo_496).
Mapping positional arguments of cell v_fltr_496.fifo1 (my_fifo_496).
Mapping positional arguments of cell v_fltr_496.fifo0 (my_fifo_496).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.find_max_inst (find_max).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.combine_res_inst_20 (combine_res).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.combine_res_inst_19 (combine_res).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.combine_res_inst_18 (combine_res).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.combine_res_inst_17 (combine_res).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.combine_res_inst_16 (combine_res).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.combine_res_inst_15 (combine_res).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.combine_res_inst_14 (combine_res).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.combine_res_inst_13 (combine_res).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.combine_res_inst_12 (combine_res).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.combine_res_inst_11 (combine_res).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.combine_res_inst_10 (combine_res).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.combine_res_inst_9 (combine_res).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.combine_res_inst_8 (combine_res).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.combine_res_inst_7 (combine_res).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.combine_res_inst_6 (combine_res).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.combine_res_inst_5 (combine_res).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.combine_res_inst_4 (combine_res).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.combine_res_inst_3 (combine_res).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.combine_res_inst_2 (combine_res).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.combine_res_inst_1 (combine_res).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.combine_res_inst_0 (combine_res).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_2_gen_1_20 (my_fifo_2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_2_gen_1_19 (my_fifo_2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_2_gen_1_18 (my_fifo_2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_2_gen_1_17 (my_fifo_2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_2_gen_1_16 (my_fifo_2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_2_gen_1_15 (my_fifo_2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_2_gen_1_14 (my_fifo_2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_2_gen_1_13 (my_fifo_2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_2_gen_1_12 (my_fifo_2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_2_gen_1_11 (my_fifo_2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_2_gen_1_10 (my_fifo_2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_2_gen_1_9 (my_fifo_2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_2_gen_1_8 (my_fifo_2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_2_gen_1_7 (my_fifo_2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_2_gen_1_6 (my_fifo_2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_2_gen_1_5 (my_fifo_2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_2_gen_1_4 (my_fifo_2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_2_gen_1_3 (my_fifo_2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_2_gen_1_2 (my_fifo_2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_2_gen_1_1 (my_fifo_2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_2_gen_1_0 (my_fifo_2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_1_gen_1_20 (my_fifo_1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_1_gen_1_19 (my_fifo_1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_1_gen_1_18 (my_fifo_1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_1_gen_1_17 (my_fifo_1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_1_gen_1_16 (my_fifo_1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_1_gen_1_15 (my_fifo_1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_1_gen_1_14 (my_fifo_1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_1_gen_1_13 (my_fifo_1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_1_gen_1_12 (my_fifo_1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_1_gen_1_11 (my_fifo_1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_1_gen_1_10 (my_fifo_1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_1_gen_1_9 (my_fifo_1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_1_gen_1_8 (my_fifo_1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_1_gen_1_7 (my_fifo_1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_1_gen_1_6 (my_fifo_1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_1_gen_1_5 (my_fifo_1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_1_gen_1_4 (my_fifo_1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_1_gen_1_3 (my_fifo_1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_1_gen_1_2 (my_fifo_1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_1_gen_1_1 (my_fifo_1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.ints_fifo_1_gen_1_0 (my_fifo_1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.wrapper_qs_intr_inst_10_more (wrapper_qs_intr_10_20).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.wrapper_qs_intr_inst_5_more (wrapper_qs_intr_5_20).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.wrapper_qs_intr_inst_10 (wrapper_qs_intr_10_20).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.wrapper_qs_intr_inst_5 (wrapper_qs_intr_5_20).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v4_5 (lp_fltr_v4).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v4_4 (lp_fltr_v4).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v4_3 (lp_fltr_v4).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v4_2 (lp_fltr_v4).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v4_1 (lp_fltr_v4).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v4_0 (lp_fltr_v4).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v2_10 (lp_fltr_v2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v2_9 (lp_fltr_v2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v2_8 (lp_fltr_v2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v2_7 (lp_fltr_v2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v2_6 (lp_fltr_v2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v2_5 (lp_fltr_v2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v2_4 (lp_fltr_v2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v2_3 (lp_fltr_v2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v2_2 (lp_fltr_v2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v2_1 (lp_fltr_v2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v2_0 (lp_fltr_v2).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v1_20 (lp_fltr_v1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v1_19 (lp_fltr_v1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v1_18 (lp_fltr_v1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v1_17 (lp_fltr_v1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v1_16 (lp_fltr_v1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v1_15 (lp_fltr_v1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v1_14 (lp_fltr_v1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v1_13 (lp_fltr_v1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v1_12 (lp_fltr_v1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v1_11 (lp_fltr_v1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v1_10 (lp_fltr_v1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v1_9 (lp_fltr_v1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v1_8 (lp_fltr_v1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v1_7 (lp_fltr_v1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v1_6 (lp_fltr_v1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v1_5 (lp_fltr_v1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v1_4 (lp_fltr_v1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v1_3 (lp_fltr_v1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v1_2 (lp_fltr_v1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v1_1 (lp_fltr_v1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_v1_0 (lp_fltr_v1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_4_5 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_4_4 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_4_3 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_4_2 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_4_1 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_4_0 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_2_10 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_2_9 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_2_8 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_2_7 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_2_6 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_2_5 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_2_4 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_2_3 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_2_2 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_2_1 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_2_0 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_1_20 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_1_19 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_1_18 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_1_17 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_1_16 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_1_15 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_1_14 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_1_13 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_1_12 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_1_11 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_1_10 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_1_9 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_1_8 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_1_7 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_1_6 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_1_5 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_1_4 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_1_3 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_1_2 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_1_1 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.inst_fir_1_0 (lp_fltr).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.port_bus_1to0_1_inst (port_bus_1to0_1).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.v_fltr_316_r_inst (v_fltr_316).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.v_fltr_316_l_inst (v_fltr_316).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.v_fltr_496_r_inst (v_fltr_496).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.v_fltr_496_l_inst (v_fltr_496).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.scaler_inst_right (scaler).
Mapping positional arguments of cell sv_chip0_hierarchy_no_mem.scaler_inst_left (scaler).

5. Executing OPT_EXPR pass (perform const folding).
Optimizing module lp_fltr.
<suppressed ~1 debug messages>
Optimizing module find_max.
<suppressed ~1 debug messages>
Optimizing module quadintr_5_20.
<suppressed ~1 debug messages>
Optimizing module quadintr_10_20.
<suppressed ~1 debug messages>
Optimizing module wrapper_qs_intr_5_20.
<suppressed ~1 debug messages>
Optimizing module wrapper_qs_intr_10_20.
<suppressed ~1 debug messages>
Optimizing module sh_reg_1.
<suppressed ~1 debug messages>
Optimizing module scl_h_fltr.
<suppressed ~1 debug messages>
Optimizing module scl_v_fltr.
<suppressed ~1 debug messages>
Optimizing module scaler.
<suppressed ~5 debug messages>
Optimizing module lp_fltr_v4.
<suppressed ~1 debug messages>
Optimizing module lp_fltr_v2.
<suppressed ~1 debug messages>
Optimizing module lp_fltr_v1.
<suppressed ~1 debug messages>
Optimizing module v_fltr_316.
Optimizing module v_fltr_496.
Optimizing module combine_res.
<suppressed ~1 debug messages>
Optimizing module sv_chip0_hierarchy_no_mem.
<suppressed ~5 debug messages>
Optimizing module my_fifo_359.
<suppressed ~1 debug messages>
Optimizing module my_fifo_179.
<suppressed ~1 debug messages>
Optimizing module my_fifo_89.
<suppressed ~1 debug messages>
Optimizing module my_fifo_1.
<suppressed ~1 debug messages>
Optimizing module my_fifo_2.
<suppressed ~1 debug messages>
Optimizing module my_fifo_316.
<suppressed ~1 debug messages>
Optimizing module my_fifo_496.
<suppressed ~1 debug messages>
Optimizing module port_bus_1to0_1.
<suppressed ~5 debug messages>

6. Executing OPT_CLEAN pass (remove unused cells and wires).
Warning: Ignoring module lp_fltr because it contains processes (run 'proc' command first).
Warning: Ignoring module find_max because it contains processes (run 'proc' command first).
Warning: Ignoring module quadintr_5_20 because it contains processes (run 'proc' command first).
Warning: Ignoring module quadintr_10_20 because it contains processes (run 'proc' command first).
Warning: Ignoring module wrapper_qs_intr_5_20 because it contains processes (run 'proc' command first).
Warning: Ignoring module wrapper_qs_intr_10_20 because it contains processes (run 'proc' command first).
Warning: Ignoring module sh_reg_1 because it contains processes (run 'proc' command first).
Warning: Ignoring module scl_h_fltr because it contains processes (run 'proc' command first).
Warning: Ignoring module scl_v_fltr because it contains processes (run 'proc' command first).
Warning: Ignoring module scaler because it contains processes (run 'proc' command first).
Warning: Ignoring module lp_fltr_v4 because it contains processes (run 'proc' command first).
Warning: Ignoring module lp_fltr_v2 because it contains processes (run 'proc' command first).
Warning: Ignoring module lp_fltr_v1 because it contains processes (run 'proc' command first).
Finding unused cells or wires in module \v_fltr_316..
Finding unused cells or wires in module \v_fltr_496..
Warning: Ignoring module combine_res because it contains processes (run 'proc' command first).
Warning: Ignoring module sv_chip0_hierarchy_no_mem because it contains processes (run 'proc' command first).
Warning: Ignoring module my_fifo_359 because it contains processes (run 'proc' command first).
Warning: Ignoring module my_fifo_179 because it contains processes (run 'proc' command first).
Warning: Ignoring module my_fifo_89 because it contains processes (run 'proc' command first).
Warning: Ignoring module my_fifo_1 because it contains processes (run 'proc' command first).
Warning: Ignoring module my_fifo_2 because it contains processes (run 'proc' command first).
Warning: Ignoring module my_fifo_316 because it contains processes (run 'proc' command first).
Warning: Ignoring module my_fifo_496 because it contains processes (run 'proc' command first).
Warning: Ignoring module port_bus_1to0_1 because it contains processes (run 'proc' command first).

7. Executing CHECK pass (checking for obvious problems).
Checking module combine_res...
Checking module find_max...
Checking module lp_fltr...
Checking module lp_fltr_v1...
Checking module lp_fltr_v2...
Checking module lp_fltr_v4...
Checking module my_fifo_1...
Checking module my_fifo_179...
Checking module my_fifo_2...
Checking module my_fifo_316...
Checking module my_fifo_359...
Checking module my_fifo_496...
Checking module my_fifo_89...
Checking module port_bus_1to0_1...
Checking module quadintr_10_20...
Checking module quadintr_5_20...
Checking module scaler...
Checking module scl_h_fltr...
Checking module scl_v_fltr...
Checking module sh_reg_1...
Checking module sv_chip0_hierarchy_no_mem...
Checking module v_fltr_316...
Checking module v_fltr_496...
Checking module wrapper_qs_intr_10_20...
Checking module wrapper_qs_intr_5_20...
Found and reported 0 problems.

8. Executing OPT pass (performing simple optimizations).

8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module combine_res.
Optimizing module find_max.
Optimizing module lp_fltr.
Optimizing module lp_fltr_v1.
Optimizing module lp_fltr_v2.
Optimizing module lp_fltr_v4.
Optimizing module my_fifo_1.
Optimizing module my_fifo_179.
Optimizing module my_fifo_2.
Optimizing module my_fifo_316.
Optimizing module my_fifo_359.
Optimizing module my_fifo_496.
Optimizing module my_fifo_89.
Optimizing module port_bus_1to0_1.
Optimizing module quadintr_10_20.
Optimizing module quadintr_5_20.
Optimizing module scaler.
Optimizing module scl_h_fltr.
Optimizing module scl_v_fltr.
Optimizing module sh_reg_1.
Optimizing module sv_chip0_hierarchy_no_mem.
Optimizing module v_fltr_316.
Optimizing module v_fltr_496.
Optimizing module wrapper_qs_intr_10_20.
Optimizing module wrapper_qs_intr_5_20.

8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\combine_res'.
Finding identical cells in module `\find_max'.
Finding identical cells in module `\lp_fltr'.
Finding identical cells in module `\lp_fltr_v1'.
Finding identical cells in module `\lp_fltr_v2'.
Finding identical cells in module `\lp_fltr_v4'.
Finding identical cells in module `\my_fifo_1'.
Finding identical cells in module `\my_fifo_179'.
Finding identical cells in module `\my_fifo_2'.
Finding identical cells in module `\my_fifo_316'.
Finding identical cells in module `\my_fifo_359'.
Finding identical cells in module `\my_fifo_496'.
Finding identical cells in module `\my_fifo_89'.
Finding identical cells in module `\port_bus_1to0_1'.
Finding identical cells in module `\quadintr_10_20'.
<suppressed ~3 debug messages>
Finding identical cells in module `\quadintr_5_20'.
<suppressed ~6 debug messages>
Finding identical cells in module `\scaler'.
Finding identical cells in module `\scl_h_fltr'.
Finding identical cells in module `\scl_v_fltr'.
Finding identical cells in module `\sh_reg_1'.
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
<suppressed ~153 debug messages>
Finding identical cells in module `\v_fltr_316'.
Finding identical cells in module `\v_fltr_496'.
Finding identical cells in module `\wrapper_qs_intr_10_20'.
Finding identical cells in module `\wrapper_qs_intr_5_20'.
Removed a total of 54 cells.

8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Warning: Ignoring module combine_res because it contains processes (run 'proc' command first).
Warning: Ignoring module find_max because it contains processes (run 'proc' command first).
Warning: Ignoring module lp_fltr because it contains processes (run 'proc' command first).
Warning: Ignoring module lp_fltr_v1 because it contains processes (run 'proc' command first).
Warning: Ignoring module lp_fltr_v2 because it contains processes (run 'proc' command first).
Warning: Ignoring module lp_fltr_v4 because it contains processes (run 'proc' command first).
Warning: Ignoring module my_fifo_1 because it contains processes (run 'proc' command first).
Warning: Ignoring module my_fifo_179 because it contains processes (run 'proc' command first).
Warning: Ignoring module my_fifo_2 because it contains processes (run 'proc' command first).
Warning: Ignoring module my_fifo_316 because it contains processes (run 'proc' command first).
Warning: Ignoring module my_fifo_359 because it contains processes (run 'proc' command first).
Warning: Ignoring module my_fifo_496 because it contains processes (run 'proc' command first).
Warning: Ignoring module my_fifo_89 because it contains processes (run 'proc' command first).
Warning: Ignoring module port_bus_1to0_1 because it contains processes (run 'proc' command first).
Warning: Ignoring module quadintr_10_20 because it contains processes (run 'proc' command first).
Warning: Ignoring module quadintr_5_20 because it contains processes (run 'proc' command first).
Warning: Ignoring module scaler because it contains processes (run 'proc' command first).
Warning: Ignoring module scl_h_fltr because it contains processes (run 'proc' command first).
Warning: Ignoring module scl_v_fltr because it contains processes (run 'proc' command first).
Warning: Ignoring module sh_reg_1 because it contains processes (run 'proc' command first).
Warning: Ignoring module sv_chip0_hierarchy_no_mem because it contains processes (run 'proc' command first).
Running muxtree optimizer on module \v_fltr_316..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \v_fltr_496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Warning: Ignoring module wrapper_qs_intr_10_20 because it contains processes (run 'proc' command first).
Warning: Ignoring module wrapper_qs_intr_5_20 because it contains processes (run 'proc' command first).
Removed 0 multiplexer ports.

8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \combine_res.
  Optimizing cells in module \find_max.
  Optimizing cells in module \lp_fltr.
  Optimizing cells in module \lp_fltr_v1.
  Optimizing cells in module \lp_fltr_v2.
  Optimizing cells in module \lp_fltr_v4.
  Optimizing cells in module \my_fifo_1.
  Optimizing cells in module \my_fifo_179.
  Optimizing cells in module \my_fifo_2.
  Optimizing cells in module \my_fifo_316.
  Optimizing cells in module \my_fifo_359.
  Optimizing cells in module \my_fifo_496.
  Optimizing cells in module \my_fifo_89.
  Optimizing cells in module \port_bus_1to0_1.
  Optimizing cells in module \quadintr_10_20.
  Optimizing cells in module \quadintr_5_20.
  Optimizing cells in module \scaler.
  Optimizing cells in module \scl_h_fltr.
  Optimizing cells in module \scl_v_fltr.
  Optimizing cells in module \sh_reg_1.
  Optimizing cells in module \sv_chip0_hierarchy_no_mem.
  Optimizing cells in module \v_fltr_316.
  Optimizing cells in module \v_fltr_496.
  Optimizing cells in module \wrapper_qs_intr_10_20.
  Optimizing cells in module \wrapper_qs_intr_5_20.
Performed a total of 0 changes.

8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\combine_res'.
Finding identical cells in module `\find_max'.
Finding identical cells in module `\lp_fltr'.
Finding identical cells in module `\lp_fltr_v1'.
Finding identical cells in module `\lp_fltr_v2'.
Finding identical cells in module `\lp_fltr_v4'.
Finding identical cells in module `\my_fifo_1'.
Finding identical cells in module `\my_fifo_179'.
Finding identical cells in module `\my_fifo_2'.
Finding identical cells in module `\my_fifo_316'.
Finding identical cells in module `\my_fifo_359'.
Finding identical cells in module `\my_fifo_496'.
Finding identical cells in module `\my_fifo_89'.
Finding identical cells in module `\port_bus_1to0_1'.
Finding identical cells in module `\quadintr_10_20'.
Finding identical cells in module `\quadintr_5_20'.
Finding identical cells in module `\scaler'.
Finding identical cells in module `\scl_h_fltr'.
Finding identical cells in module `\scl_v_fltr'.
Finding identical cells in module `\sh_reg_1'.
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
Finding identical cells in module `\v_fltr_316'.
Finding identical cells in module `\v_fltr_496'.
Finding identical cells in module `\wrapper_qs_intr_10_20'.
Finding identical cells in module `\wrapper_qs_intr_5_20'.
Removed a total of 0 cells.

8.6. Executing OPT_DFF pass (perform DFF optimizations).

8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Warning: Ignoring module combine_res because it contains processes (run 'proc' command first).
Warning: Ignoring module find_max because it contains processes (run 'proc' command first).
Warning: Ignoring module lp_fltr because it contains processes (run 'proc' command first).
Warning: Ignoring module lp_fltr_v1 because it contains processes (run 'proc' command first).
Warning: Ignoring module lp_fltr_v2 because it contains processes (run 'proc' command first).
Warning: Ignoring module lp_fltr_v4 because it contains processes (run 'proc' command first).
Warning: Ignoring module my_fifo_1 because it contains processes (run 'proc' command first).
Warning: Ignoring module my_fifo_179 because it contains processes (run 'proc' command first).
Warning: Ignoring module my_fifo_2 because it contains processes (run 'proc' command first).
Warning: Ignoring module my_fifo_316 because it contains processes (run 'proc' command first).
Warning: Ignoring module my_fifo_359 because it contains processes (run 'proc' command first).
Warning: Ignoring module my_fifo_496 because it contains processes (run 'proc' command first).
Warning: Ignoring module my_fifo_89 because it contains processes (run 'proc' command first).
Warning: Ignoring module port_bus_1to0_1 because it contains processes (run 'proc' command first).
Warning: Ignoring module quadintr_10_20 because it contains processes (run 'proc' command first).
Warning: Ignoring module quadintr_5_20 because it contains processes (run 'proc' command first).
Warning: Ignoring module scaler because it contains processes (run 'proc' command first).
Warning: Ignoring module scl_h_fltr because it contains processes (run 'proc' command first).
Warning: Ignoring module scl_v_fltr because it contains processes (run 'proc' command first).
Warning: Ignoring module sh_reg_1 because it contains processes (run 'proc' command first).
Warning: Ignoring module sv_chip0_hierarchy_no_mem because it contains processes (run 'proc' command first).
Finding unused cells or wires in module \v_fltr_316..
Finding unused cells or wires in module \v_fltr_496..
Warning: Ignoring module wrapper_qs_intr_10_20 because it contains processes (run 'proc' command first).
Warning: Ignoring module wrapper_qs_intr_5_20 because it contains processes (run 'proc' command first).

8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module combine_res.
Optimizing module find_max.
Optimizing module lp_fltr.
Optimizing module lp_fltr_v1.
Optimizing module lp_fltr_v2.
Optimizing module lp_fltr_v4.
Optimizing module my_fifo_1.
Optimizing module my_fifo_179.
Optimizing module my_fifo_2.
Optimizing module my_fifo_316.
Optimizing module my_fifo_359.
Optimizing module my_fifo_496.
Optimizing module my_fifo_89.
Optimizing module port_bus_1to0_1.
Optimizing module quadintr_10_20.
Optimizing module quadintr_5_20.
Optimizing module scaler.
Optimizing module scl_h_fltr.
Optimizing module scl_v_fltr.
Optimizing module sh_reg_1.
Optimizing module sv_chip0_hierarchy_no_mem.
Optimizing module v_fltr_316.
Optimizing module v_fltr_496.
Optimizing module wrapper_qs_intr_10_20.
Optimizing module wrapper_qs_intr_5_20.

8.9. Finished OPT passes. (There is nothing left to do.)

9. Executing PROC pass (convert processes to netlists).

9.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

9.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 20 switch rules as full_case in process $proc$stereovision0.v:3097$280 in module find_max.
Marked 1 switch rules as full_case in process $proc$stereovision0.v:3564$306 in module port_bus_1to0_1.
Marked 4 switch rules as full_case in process $proc$stereovision0.v:3652$308 in module port_bus_1to0_1.
Marked 3 switch rules as full_case in process $proc$stereovision0.v:1434$138 in module scaler.
Marked 1 switch rules as full_case in process $proc$stereovision0.v:782$38 in module sv_chip0_hierarchy_no_mem.
Marked 17 switch rules as full_case in process $proc$stereovision0.v:830$47 in module sv_chip0_hierarchy_no_mem.
Removed a total of 0 dead cases.

9.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 50 redundant assignments.
Promoted 225 assignments to connections.

9.4. Executing PROC_INIT pass (extract init attributes).

9.5. Executing PROC_ARST pass (detect async resets in processes).

9.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\combine_res.$proc$stereovision0.v:1191$122'.
     1/4: $0\din_3_reg[8:0]
     2/4: $0\din_2_reg[8:0]
     3/4: $0\din_1_reg[8:0]
     4/4: $0\dout[10:0]
Creating decoders for process `\find_max.$proc$stereovision0.v:3097$280'.
     1/63: $0\indx_5_1[4:0]
     2/63: $0\res_5_1[10:0]
     3/63: $0\indx_4_1[4:0]
     4/63: $0\res_4_1[10:0]
     5/63: $0\indx_3_3[4:0]
     6/63: $0\res_3_3[10:0]
     7/63: $0\indx_3_2[4:0]
     8/63: $0\res_3_2[10:0]
     9/63: $0\indx_3_1[4:0]
    10/63: $0\res_3_1[10:0]
    11/63: $0\indx_2_5[4:0]
    12/63: $0\res_2_5[10:0]
    13/63: $0\indx_2_4[4:0]
    14/63: $0\res_2_4[10:0]
    15/63: $0\indx_2_3[4:0]
    16/63: $0\res_2_3[10:0]
    17/63: $0\indx_2_2[4:0]
    18/63: $0\res_2_2[10:0]
    19/63: $0\indx_2_1[4:0]
    20/63: $0\res_2_1[10:0]
    21/63: $0\indx_1_10[4:0]
    22/63: $0\res_1_10[10:0]
    23/63: $0\indx_1_9[4:0]
    24/63: $0\res_1_9[10:0]
    25/63: $0\indx_1_8[4:0]
    26/63: $0\res_1_8[10:0]
    27/63: $0\indx_1_7[4:0]
    28/63: $0\res_1_7[10:0]
    29/63: $0\indx_1_6[4:0]
    30/63: $0\res_1_6[10:0]
    31/63: $0\indx_1_5[4:0]
    32/63: $0\res_1_5[10:0]
    33/63: $0\indx_1_4[4:0]
    34/63: $0\res_1_4[10:0]
    35/63: $0\indx_1_3[4:0]
    36/63: $0\res_1_3[10:0]
    37/63: $0\indx_1_2[4:0]
    38/63: $0\res_1_2[10:0]
    39/63: $0\indx_1_1[4:0]
    40/63: $0\res_1_1[10:0]
    41/63: $0\indx_out[4:0]
    42/63: $0\d_out[7:0]
    43/63: $0\d_in_tmp20[10:0]
    44/63: $0\d_in_tmp19[10:0]
    45/63: $0\d_in_tmp18[10:0]
    46/63: $0\d_in_tmp17[10:0]
    47/63: $0\d_in_tmp16[10:0]
    48/63: $0\d_in_tmp15[10:0]
    49/63: $0\d_in_tmp14[10:0]
    50/63: $0\d_in_tmp13[10:0]
    51/63: $0\d_in_tmp12[10:0]
    52/63: $0\d_in_tmp11[10:0]
    53/63: $0\d_in_tmp10[10:0]
    54/63: $0\d_in_tmp9[10:0]
    55/63: $0\d_in_tmp8[10:0]
    56/63: $0\d_in_tmp7[10:0]
    57/63: $0\d_in_tmp6[10:0]
    58/63: $0\d_in_tmp5[10:0]
    59/63: $0\d_in_tmp4[10:0]
    60/63: $0\d_in_tmp3[10:0]
    61/63: $0\d_in_tmp2[10:0]
    62/63: $0\d_in_tmp1[10:0]
    63/63: $0\d_in_tmp0[10:0]
Creating decoders for process `\lp_fltr.$proc$stereovision0.v:3353$302'.
     1/4: $0\din_tmp_3[7:0]
     2/4: $0\din_tmp_2[7:0]
     3/4: $0\din_tmp_1[7:0]
     4/4: $0\dout[7:0]
Creating decoders for process `\lp_fltr_v1.$proc$stereovision0.v:1302$126'.
     1/5: $0\dout_2[7:0]
     2/5: $0\dout_1[7:0]
     3/5: $0\din_3_reg[7:0]
     4/5: $0\din_2_reg[7:0]
     5/5: $0\din_1_reg[7:0]
Creating decoders for process `\lp_fltr_v2.$proc$stereovision0.v:1344$130'.
     1/5: $0\dout_2[7:0]
     2/5: $0\dout_1[7:0]
     3/5: $0\din_3_reg[7:0]
     4/5: $0\din_2_reg[7:0]
     5/5: $0\din_1_reg[7:0]
Creating decoders for process `\lp_fltr_v4.$proc$stereovision0.v:1380$134'.
     1/5: $0\dout_2[7:0]
     2/5: $0\dout_1[7:0]
     3/5: $0\din_3_reg[7:0]
     4/5: $0\din_2_reg[7:0]
     5/5: $0\din_1_reg[7:0]
Creating decoders for process `\my_fifo_1.$proc$stereovision0.v:3822$323'.
     1/3: $0\buff2[7:0]
     2/3: $0\buff1[7:0]
     3/3: $0\dout[7:0]
Creating decoders for process `\my_fifo_179.$proc$stereovision0.v:3870$327'.
     1/3: $0\buff2[7:0]
     2/3: $0\buff1[7:0]
     3/3: $0\dout[7:0]
Creating decoders for process `\my_fifo_2.$proc$stereovision0.v:3797$321'.
     1/3: $0\buff2[8:0]
     2/3: $0\buff1[8:0]
     3/3: $0\dout[8:0]
Creating decoders for process `\my_fifo_316.$proc$stereovision0.v:3772$319'.
     1/3: $0\buff2[7:0]
     2/3: $0\buff1[7:0]
     3/3: $0\dout[7:0]
Creating decoders for process `\my_fifo_359.$proc$stereovision0.v:3895$329'.
     1/3: $0\buff2[7:0]
     2/3: $0\buff1[7:0]
     3/3: $0\dout[7:0]
Creating decoders for process `\my_fifo_496.$proc$stereovision0.v:3748$317'.
     1/3: $0\buff2[7:0]
     2/3: $0\buff1[7:0]
     3/3: $0\dout[7:0]
Creating decoders for process `\my_fifo_89.$proc$stereovision0.v:3846$325'.
     1/3: $0\buff2[7:0]
     2/3: $0\buff1[7:0]
     3/3: $0\dout[7:0]
Creating decoders for process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
     1/42: $0\vidin_addr_reg_tmp[18:0] [18:16]
     2/42: $0\vidin_addr_reg_tmp[18:0] [15:8]
     3/42: $0\vidin_addr_reg_tmp[18:0] [7:0]
     4/42: $0\v_corr_5_tmp4[7:0]
     5/42: $0\v_corr_5_tmp3[7:0]
     6/42: $0\v_corr_5_tmp2[7:0]
     7/42: $0\v_corr_5_tmp1[7:0]
     8/42: $0\v_corr_5_tmp0[7:0]
     9/42: $0\v_corr_10_tmp10[7:0]
    10/42: $0\v_corr_10_tmp9[7:0]
    11/42: $0\v_corr_10_tmp8[7:0]
    12/42: $0\v_corr_10_tmp7[7:0]
    13/42: $0\v_corr_10_tmp6[7:0]
    14/42: $0\v_corr_10_tmp5[7:0]
    15/42: $0\v_corr_10_tmp4[7:0]
    16/42: $0\v_corr_10_tmp3[7:0]
    17/42: $0\v_corr_10_tmp2[7:0]
    18/42: $0\v_corr_10_tmp1[7:0]
    19/42: $0\v_corr_10_tmp0[7:0]
    20/42: $0\v_corr_20_tmp20[7:0]
    21/42: $0\v_corr_20_tmp19[7:0]
    22/42: $0\v_corr_20_tmp18[7:0]
    23/42: $0\v_corr_20_tmp17[7:0]
    24/42: $0\v_corr_20_tmp16[7:0]
    25/42: $0\v_corr_20_tmp15[7:0]
    26/42: $0\v_corr_20_tmp14[7:0]
    27/42: $0\v_corr_20_tmp13[7:0]
    28/42: $0\v_corr_20_tmp12[7:0]
    29/42: $0\v_corr_20_tmp11[7:0]
    30/42: $0\v_corr_20_tmp10[7:0]
    31/42: $0\v_corr_20_tmp9[7:0]
    32/42: $0\v_corr_20_tmp8[7:0]
    33/42: $0\v_corr_20_tmp7[7:0]
    34/42: $0\v_corr_20_tmp6[7:0]
    35/42: $0\v_corr_20_tmp5[7:0]
    36/42: $0\v_corr_20_tmp4[7:0]
    37/42: $0\v_corr_20_tmp3[7:0]
    38/42: $0\v_corr_20_tmp2[7:0]
    39/42: $0\v_corr_20_tmp1[7:0]
    40/42: $0\v_corr_20_tmp0[7:0]
    41/42: $0\svid_comp_switch_tmp[0:0]
    42/42: $0\v_corr_5_tmp5[7:0]
Creating decoders for process `\port_bus_1to0_1.$proc$stereovision0.v:3641$307'.
Creating decoders for process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
     1/43: $0\vidin_new_data_scld_4_1to0[0:0]
     2/43: $0\vidin_new_data_scld_2_1to0[0:0]
     3/43: $0\vidin_new_data_scld_1_1to0[0:0]
     4/43: $0\svid_comp_switch[0:0]
     5/43: $0\v_corr_55[7:0]
     6/43: $0\v_corr_54[7:0]
     7/43: $0\v_corr_53[7:0]
     8/43: $0\v_corr_52[7:0]
     9/43: $0\v_corr_51[7:0]
    10/43: $0\v_corr_50[7:0]
    11/43: $0\v_corr_1010[7:0]
    12/43: $0\v_corr_109[7:0]
    13/43: $0\v_corr_108[7:0]
    14/43: $0\v_corr_107[7:0]
    15/43: $0\v_corr_106[7:0]
    16/43: $0\v_corr_105[7:0]
    17/43: $0\v_corr_104[7:0]
    18/43: $0\v_corr_103[7:0]
    19/43: $0\v_corr_102[7:0]
    20/43: $0\v_corr_101[7:0]
    21/43: $0\v_corr_100[7:0]
    22/43: $0\v_corr_2020[7:0]
    23/43: $0\v_corr_2019[7:0]
    24/43: $0\v_corr_2018[7:0]
    25/43: $0\v_corr_2017[7:0]
    26/43: $0\v_corr_2016[7:0]
    27/43: $0\v_corr_2015[7:0]
    28/43: $0\v_corr_2014[7:0]
    29/43: $0\v_corr_2013[7:0]
    30/43: $0\v_corr_2012[7:0]
    31/43: $0\v_corr_2011[7:0]
    32/43: $0\v_corr_2010[7:0]
    33/43: $0\v_corr_209[7:0]
    34/43: $0\v_corr_208[7:0]
    35/43: $0\v_corr_207[7:0]
    36/43: $0\v_corr_206[7:0]
    37/43: $0\v_corr_205[7:0]
    38/43: $0\v_corr_204[7:0]
    39/43: $0\v_corr_203[7:0]
    40/43: $0\v_corr_202[7:0]
    41/43: $0\v_corr_201[7:0]
    42/43: $0\v_corr_200[7:0]
    43/43: $0\vidin_addr_reg[18:0]
Creating decoders for process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
     1/53: $0\dout20[15:0] [15:9]
     2/53: $0\dout20[15:0] [8:0]
     3/53: $0\dout19[15:0] [8:0]
     4/53: $0\dout18[15:0] [8:0]
     5/53: $0\dout17[15:0] [8:0]
     6/53: $0\dout16[15:0] [8:0]
     7/53: $0\dout15[15:0] [8:0]
     8/53: $0\dout14[15:0] [8:0]
     9/53: $0\dout13[15:0] [8:0]
    10/53: $0\dout12[15:0] [8:0]
    11/53: $0\dout11[15:0] [8:0]
    12/53: $0\dout10[15:0] [8:0]
    13/53: $0\dout9[15:0] [8:0]
    14/53: $0\dout8[15:0] [8:0]
    15/53: $0\dout7[15:0] [8:0]
    16/53: $0\dout6[15:0] [8:0]
    17/53: $0\dout5[15:0] [8:0]
    18/53: $0\dout4[15:0] [8:0]
    19/53: $0\dout3[15:0] [8:0]
    20/53: $0\dout2[15:0] [8:0]
    21/53: $0\dout1[15:0] [8:0]
    22/53: $0\dout0[15:0] [8:0]
    23/53: $0\dinr9[7:0]
    24/53: $0\dinr8[7:0]
    25/53: $0\dinr7[7:0]
    26/53: $0\dinr6[7:0]
    27/53: $0\dinr5[7:0]
    28/53: $0\dinr4[7:0]
    29/53: $0\dinr3[7:0]
    30/53: $0\dinr2[7:0]
    31/53: $0\dinr1[7:0]
    32/53: $0\dinr0[7:0]
    33/53: $0\dout19[15:0] [15:9]
    34/53: $0\dout18[15:0] [15:9]
    35/53: $0\dout17[15:0] [15:9]
    36/53: $0\dout16[15:0] [15:9]
    37/53: $0\dout15[15:0] [15:9]
    38/53: $0\dout14[15:0] [15:9]
    39/53: $0\dout13[15:0] [15:9]
    40/53: $0\dout12[15:0] [15:9]
    41/53: $0\dout11[15:0] [15:9]
    42/53: $0\dout10[15:0] [15:9]
    43/53: $0\dout9[15:0] [15:9]
    44/53: $0\dout8[15:0] [15:9]
    45/53: $0\dout7[15:0] [15:9]
    46/53: $0\dout6[15:0] [15:9]
    47/53: $0\dout5[15:0] [15:9]
    48/53: $0\dout4[15:0] [15:9]
    49/53: $0\dout3[15:0] [15:9]
    50/53: $0\dout2[15:0] [15:9]
    51/53: $0\dout1[15:0] [15:9]
    52/53: $0\dout0[15:0] [15:9]
    53/53: $0\dinr10[7:0]
Creating decoders for process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
     1/48: $0\dout20[15:0] [15:9]
     2/48: $0\dout20[15:0] [8:0]
     3/48: $0\dout19[15:0] [8:0]
     4/48: $0\dout18[15:0] [8:0]
     5/48: $0\dout17[15:0] [8:0]
     6/48: $0\dout16[15:0] [8:0]
     7/48: $0\dout15[15:0] [8:0]
     8/48: $0\dout14[15:0] [8:0]
     9/48: $0\dout13[15:0] [8:0]
    10/48: $0\dout12[15:0] [8:0]
    11/48: $0\dout11[15:0] [8:0]
    12/48: $0\dout10[15:0] [8:0]
    13/48: $0\dout9[15:0] [8:0]
    14/48: $0\dout8[15:0] [8:0]
    15/48: $0\dout7[15:0] [8:0]
    16/48: $0\dout6[15:0] [8:0]
    17/48: $0\dout5[15:0] [8:0]
    18/48: $0\dout4[15:0] [8:0]
    19/48: $0\dout3[15:0] [8:0]
    20/48: $0\dout2[15:0] [8:0]
    21/48: $0\dout1[15:0] [8:0]
    22/48: $0\dout0[15:0] [8:0]
    23/48: $0\dinr4[7:0]
    24/48: $0\dinr3[7:0]
    25/48: $0\dinr2[7:0]
    26/48: $0\dinr1[7:0]
    27/48: $0\dinr0[7:0]
    28/48: $0\dout19[15:0] [15:9]
    29/48: $0\dout18[15:0] [15:9]
    30/48: $0\dout17[15:0] [15:9]
    31/48: $0\dout16[15:0] [15:9]
    32/48: $0\dout15[15:0] [15:9]
    33/48: $0\dout14[15:0] [15:9]
    34/48: $0\dout13[15:0] [15:9]
    35/48: $0\dout12[15:0] [15:9]
    36/48: $0\dout11[15:0] [15:9]
    37/48: $0\dout10[15:0] [15:9]
    38/48: $0\dout9[15:0] [15:9]
    39/48: $0\dout8[15:0] [15:9]
    40/48: $0\dout7[15:0] [15:9]
    41/48: $0\dout6[15:0] [15:9]
    42/48: $0\dout5[15:0] [15:9]
    43/48: $0\dout4[15:0] [15:9]
    44/48: $0\dout3[15:0] [15:9]
    45/48: $0\dout2[15:0] [15:9]
    46/48: $0\dout1[15:0] [15:9]
    47/48: $0\dout0[15:0] [15:9]
    48/48: $0\dinr5[7:0]
Creating decoders for process `\scaler.$proc$stereovision0.v:1434$138'.
     1/5: $0\vidin_new_data_scld_4[0:0]
     2/5: $0\vidin_new_data_scld_2[0:0]
     3/5: $0\vidin_gray_scld_4[7:0]
     4/5: $0\vidin_gray_scld_2[7:0]
     5/5: $0\vidin_gray_scld_1[7:0]
Creating decoders for process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
     1/13: $0\buff_out_reg_47[7:0]
     2/13: $0\buff_out_reg_46[7:0]
     3/13: $0\buff_out_reg_45[7:0]
     4/13: $0\buff_out_reg_44[7:0]
     5/13: $0\buff_out_reg_43[7:0]
     6/13: $0\buff_out_reg_42[7:0]
     7/13: $0\buff_out_reg_41[7:0]
     8/13: $0\buff_out_reg_23[7:0]
     9/13: $0\buff_out_reg_22[7:0]
    10/13: $0\buff_out_reg_21[7:0]
    11/13: $0\d_out_4[7:0]
    12/13: $0\d_out_2[7:0]
    13/13: $0\d_out_1[7:0]
Creating decoders for process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
     1/10: $0\buff_out_reg7[7:0]
     2/10: $0\buff_out_reg6[7:0]
     3/10: $0\buff_out_reg5[7:0]
     4/10: $0\buff_out_reg4[7:0]
     5/10: $0\buff_out_reg3[7:0]
     6/10: $0\buff_out_reg2[7:0]
     7/10: $0\buff_out_reg1[7:0]
     8/10: $0\d_out_4[7:0]
     9/10: $0\d_out_2[7:0]
    10/10: $0\d_out_1[7:0]
Creating decoders for process `\sh_reg_1.$proc$stereovision0.v:1663$170'.
     1/1: $0\dout_1[7:0]
Creating decoders for process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:782$38'.
     1/1: $0\vidin_addr_reg_2to3_reg[18:0]
Creating decoders for process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:804$42'.
     1/6: $0\v_d_reg_s4_right_2to0[7:0]
     2/6: $0\v_d_reg_s2_right_2to0[7:0]
     3/6: $0\v_d_reg_s1_right_2to0[7:0]
     4/6: $0\v_d_reg_s4_left_2to0[7:0]
     5/6: $0\v_d_reg_s2_left_2to0[7:0]
     6/6: $0\v_d_reg_s1_left_2to0[7:0]
Creating decoders for process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
     1/42: $0\vidin_data_buf_2_sc_4[55:0] [55:48]
     2/42: $0\vidin_data_buf_2_sc_4[55:0] [47:40]
     3/42: $0\vidin_data_buf_2_sc_2[55:0] [47:40]
     4/42: $0\vidin_data_buf_2_sc_1[55:0] [47:40]
     5/42: $0\vidin_data_buf_2_sc_4[55:0] [39:32]
     6/42: $0\vidin_data_buf_2_sc_2[55:0] [39:32]
     7/42: $0\vidin_data_buf_2_sc_1[55:0] [39:32]
     8/42: $0\vidin_data_buf_2_sc_4[55:0] [31:24]
     9/42: $0\vidin_data_buf_2_sc_2[55:0] [31:24]
    10/42: $0\vidin_data_buf_2_sc_1[55:0] [31:24]
    11/42: $0\vidin_data_buf_2_sc_4[55:0] [23:16]
    12/42: $0\vidin_data_buf_2_sc_2[55:0] [23:16]
    13/42: $0\vidin_data_buf_2_sc_1[55:0] [23:16]
    14/42: $0\vidin_data_buf_2_sc_4[55:0] [15:8]
    15/42: $0\vidin_data_buf_2_sc_2[55:0] [15:8]
    16/42: $0\vidin_data_buf_2_sc_1[55:0] [15:8]
    17/42: $0\vidin_data_buf_2_sc_4[55:0] [7:0]
    18/42: $0\vidin_data_buf_2_sc_2[55:0] [7:0]
    19/42: $0\vidin_data_buf_2_sc_1[55:0] [7:0]
    20/42: $0\tm3_sram_data_xhdl0[63:0]
    21/42: $0\tm3_sram_we[7:0]
    22/42: $0\tm3_sram_adsp[0:0]
    23/42: $0\vidin_addr_buf_sc_4[18:0]
    24/42: $0\vidin_data_buf_2_sc_1[55:0] [55:48]
    25/42: $0\vidin_data_buf_sc_4[63:0]
    26/42: $0\vidin_addr_buf_sc_2[18:0]
    27/42: $0\vidin_data_buf_2_sc_2[55:0] [55:48]
    28/42: $0\vidin_data_buf_sc_2[63:0]
    29/42: $0\vidout_buf[63:0]
    30/42: $0\vidin_addr_buf_sc_1[18:0]
    31/42: $0\tm3_sram_oe[1:0]
    32/42: $0\vidin_data_buf_sc_1[63:0]
    33/42: $0\vert[9:0]
    34/42: $0\horiz[9:0]
    35/42: $0\depth_out_reg[7:0]
    36/42: $0\tm3_vidout_blank[0:0]
    37/42: $0\tm3_vidout_vsync[0:0]
    38/42: $0\tm3_vidout_hsync[0:0]
    39/42: $0\tm3_vidout_blue[9:0]
    40/42: $0\tm3_vidout_green[9:0]
    41/42: $0\tm3_vidout_red[9:0]
    42/42: $0\tm3_sram_addr[18:0]
Creating decoders for process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
     1/42: $0\my_ram20[15:0]
     2/42: $0\my_ram19[15:0]
     3/42: $0\my_ram18[15:0]
     4/42: $0\my_ram17[15:0]
     5/42: $0\my_ram16[15:0]
     6/42: $0\my_ram15[15:0]
     7/42: $0\my_ram14[15:0]
     8/42: $0\my_ram13[15:0]
     9/42: $0\my_ram12[15:0]
    10/42: $0\my_ram11[15:0]
    11/42: $0\my_ram10[15:0]
    12/42: $0\my_ram9[15:0]
    13/42: $0\my_ram8[15:0]
    14/42: $0\my_ram7[15:0]
    15/42: $0\my_ram6[15:0]
    16/42: $0\my_ram5[15:0]
    17/42: $0\my_ram4[15:0]
    18/42: $0\my_ram3[15:0]
    19/42: $0\my_ram2[15:0]
    20/42: $0\my_ram1[15:0]
    21/42: $0\my_ram0[15:0]
    22/42: $0\tmy_ram20[15:0]
    23/42: $0\tmy_ram19[15:0]
    24/42: $0\tmy_ram18[15:0]
    25/42: $0\tmy_ram17[15:0]
    26/42: $0\tmy_ram16[15:0]
    27/42: $0\tmy_ram15[15:0]
    28/42: $0\tmy_ram14[15:0]
    29/42: $0\tmy_ram13[15:0]
    30/42: $0\tmy_ram12[15:0]
    31/42: $0\tmy_ram11[15:0]
    32/42: $0\tmy_ram10[15:0]
    33/42: $0\tmy_ram9[15:0]
    34/42: $0\tmy_ram8[15:0]
    35/42: $0\tmy_ram7[15:0]
    36/42: $0\tmy_ram6[15:0]
    37/42: $0\tmy_ram5[15:0]
    38/42: $0\tmy_ram4[15:0]
    39/42: $0\tmy_ram3[15:0]
    40/42: $0\tmy_ram2[15:0]
    41/42: $0\tmy_ram1[15:0]
    42/42: $0\tmy_ram0[15:0]
Creating decoders for process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
     1/42: $0\my_ram20[15:0]
     2/42: $0\my_ram19[15:0]
     3/42: $0\my_ram18[15:0]
     4/42: $0\my_ram17[15:0]
     5/42: $0\my_ram16[15:0]
     6/42: $0\my_ram15[15:0]
     7/42: $0\my_ram14[15:0]
     8/42: $0\my_ram13[15:0]
     9/42: $0\my_ram12[15:0]
    10/42: $0\my_ram11[15:0]
    11/42: $0\my_ram10[15:0]
    12/42: $0\my_ram9[15:0]
    13/42: $0\my_ram8[15:0]
    14/42: $0\my_ram7[15:0]
    15/42: $0\my_ram6[15:0]
    16/42: $0\my_ram5[15:0]
    17/42: $0\my_ram4[15:0]
    18/42: $0\my_ram3[15:0]
    19/42: $0\my_ram2[15:0]
    20/42: $0\my_ram1[15:0]
    21/42: $0\my_ram0[15:0]
    22/42: $0\tmy_ram20[15:0]
    23/42: $0\tmy_ram19[15:0]
    24/42: $0\tmy_ram18[15:0]
    25/42: $0\tmy_ram17[15:0]
    26/42: $0\tmy_ram16[15:0]
    27/42: $0\tmy_ram15[15:0]
    28/42: $0\tmy_ram14[15:0]
    29/42: $0\tmy_ram13[15:0]
    30/42: $0\tmy_ram12[15:0]
    31/42: $0\tmy_ram11[15:0]
    32/42: $0\tmy_ram10[15:0]
    33/42: $0\tmy_ram9[15:0]
    34/42: $0\tmy_ram8[15:0]
    35/42: $0\tmy_ram7[15:0]
    36/42: $0\tmy_ram6[15:0]
    37/42: $0\tmy_ram5[15:0]
    38/42: $0\tmy_ram4[15:0]
    39/42: $0\tmy_ram3[15:0]
    40/42: $0\tmy_ram2[15:0]
    41/42: $0\tmy_ram1[15:0]
    42/42: $0\tmy_ram0[15:0]

9.7. Executing PROC_DLATCH pass (convert process syncs to latches).

9.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\combine_res.\dout' using process `\combine_res.$proc$stereovision0.v:1191$122'.
  created $dff cell `$procdff$1933' with positive edge clock.
Creating register for signal `\combine_res.\din_1_reg' using process `\combine_res.$proc$stereovision0.v:1191$122'.
  created $dff cell `$procdff$1934' with positive edge clock.
Creating register for signal `\combine_res.\din_2_reg' using process `\combine_res.$proc$stereovision0.v:1191$122'.
  created $dff cell `$procdff$1935' with positive edge clock.
Creating register for signal `\combine_res.\din_3_reg' using process `\combine_res.$proc$stereovision0.v:1191$122'.
  created $dff cell `$procdff$1936' with positive edge clock.
Creating register for signal `\combine_res.\add_tmp' using process `\combine_res.$proc$stereovision0.v:1191$122'.
  created $dff cell `$procdff$1937' with positive edge clock.
Creating register for signal `\combine_res.\dout_reg' using process `\combine_res.$proc$stereovision0.v:1191$122'.
  created $dff cell `$procdff$1938' with positive edge clock.
Creating register for signal `\find_max.\d_in_tmp0' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1939' with positive edge clock.
Creating register for signal `\find_max.\d_in_tmp1' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1940' with positive edge clock.
Creating register for signal `\find_max.\d_in_tmp2' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1941' with positive edge clock.
Creating register for signal `\find_max.\d_in_tmp3' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1942' with positive edge clock.
Creating register for signal `\find_max.\d_in_tmp4' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1943' with positive edge clock.
Creating register for signal `\find_max.\d_in_tmp5' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1944' with positive edge clock.
Creating register for signal `\find_max.\d_in_tmp6' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1945' with positive edge clock.
Creating register for signal `\find_max.\d_in_tmp7' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1946' with positive edge clock.
Creating register for signal `\find_max.\d_in_tmp8' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1947' with positive edge clock.
Creating register for signal `\find_max.\d_in_tmp9' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1948' with positive edge clock.
Creating register for signal `\find_max.\d_in_tmp10' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1949' with positive edge clock.
Creating register for signal `\find_max.\d_in_tmp11' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1950' with positive edge clock.
Creating register for signal `\find_max.\d_in_tmp12' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1951' with positive edge clock.
Creating register for signal `\find_max.\d_in_tmp13' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1952' with positive edge clock.
Creating register for signal `\find_max.\d_in_tmp14' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1953' with positive edge clock.
Creating register for signal `\find_max.\d_in_tmp15' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1954' with positive edge clock.
Creating register for signal `\find_max.\d_in_tmp16' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1955' with positive edge clock.
Creating register for signal `\find_max.\d_in_tmp17' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1956' with positive edge clock.
Creating register for signal `\find_max.\d_in_tmp18' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1957' with positive edge clock.
Creating register for signal `\find_max.\d_in_tmp19' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1958' with positive edge clock.
Creating register for signal `\find_max.\d_in_tmp20' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1959' with positive edge clock.
Creating register for signal `\find_max.\d_out' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1960' with positive edge clock.
Creating register for signal `\find_max.\indx_out' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1961' with positive edge clock.
Creating register for signal `\find_max.\res_1_1' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1962' with positive edge clock.
Creating register for signal `\find_max.\res_1_2' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1963' with positive edge clock.
Creating register for signal `\find_max.\res_1_3' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1964' with positive edge clock.
Creating register for signal `\find_max.\res_1_4' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1965' with positive edge clock.
Creating register for signal `\find_max.\res_1_5' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1966' with positive edge clock.
Creating register for signal `\find_max.\res_1_6' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1967' with positive edge clock.
Creating register for signal `\find_max.\res_1_7' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1968' with positive edge clock.
Creating register for signal `\find_max.\res_1_8' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1969' with positive edge clock.
Creating register for signal `\find_max.\res_1_9' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1970' with positive edge clock.
Creating register for signal `\find_max.\res_1_10' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1971' with positive edge clock.
Creating register for signal `\find_max.\res_1_11' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1972' with positive edge clock.
Creating register for signal `\find_max.\res_2_1' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1973' with positive edge clock.
Creating register for signal `\find_max.\res_2_2' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1974' with positive edge clock.
Creating register for signal `\find_max.\res_2_3' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1975' with positive edge clock.
Creating register for signal `\find_max.\res_2_4' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1976' with positive edge clock.
Creating register for signal `\find_max.\res_2_5' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1977' with positive edge clock.
Creating register for signal `\find_max.\res_2_6' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1978' with positive edge clock.
Creating register for signal `\find_max.\res_3_1' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1979' with positive edge clock.
Creating register for signal `\find_max.\res_3_2' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1980' with positive edge clock.
Creating register for signal `\find_max.\res_3_3' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1981' with positive edge clock.
Creating register for signal `\find_max.\res_4_1' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1982' with positive edge clock.
Creating register for signal `\find_max.\res_4_2' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1983' with positive edge clock.
Creating register for signal `\find_max.\res_5_1' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1984' with positive edge clock.
Creating register for signal `\find_max.\indx_1_1' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1985' with positive edge clock.
Creating register for signal `\find_max.\indx_1_2' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1986' with positive edge clock.
Creating register for signal `\find_max.\indx_1_3' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1987' with positive edge clock.
Creating register for signal `\find_max.\indx_1_4' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1988' with positive edge clock.
Creating register for signal `\find_max.\indx_1_5' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1989' with positive edge clock.
Creating register for signal `\find_max.\indx_1_6' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1990' with positive edge clock.
Creating register for signal `\find_max.\indx_1_7' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1991' with positive edge clock.
Creating register for signal `\find_max.\indx_1_8' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1992' with positive edge clock.
Creating register for signal `\find_max.\indx_1_9' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1993' with positive edge clock.
Creating register for signal `\find_max.\indx_1_10' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1994' with positive edge clock.
Creating register for signal `\find_max.\indx_1_11' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1995' with positive edge clock.
Creating register for signal `\find_max.\indx_2_1' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1996' with positive edge clock.
Creating register for signal `\find_max.\indx_2_2' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1997' with positive edge clock.
Creating register for signal `\find_max.\indx_2_3' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1998' with positive edge clock.
Creating register for signal `\find_max.\indx_2_4' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$1999' with positive edge clock.
Creating register for signal `\find_max.\indx_2_5' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$2000' with positive edge clock.
Creating register for signal `\find_max.\indx_2_6' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$2001' with positive edge clock.
Creating register for signal `\find_max.\indx_3_1' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$2002' with positive edge clock.
Creating register for signal `\find_max.\indx_3_2' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$2003' with positive edge clock.
Creating register for signal `\find_max.\indx_3_3' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$2004' with positive edge clock.
Creating register for signal `\find_max.\indx_4_1' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$2005' with positive edge clock.
Creating register for signal `\find_max.\indx_4_2' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$2006' with positive edge clock.
Creating register for signal `\find_max.\indx_5_1' using process `\find_max.$proc$stereovision0.v:3097$280'.
  created $dff cell `$procdff$2007' with positive edge clock.
Creating register for signal `\lp_fltr.\dout' using process `\lp_fltr.$proc$stereovision0.v:3353$302'.
  created $dff cell `$procdff$2008' with positive edge clock.
Creating register for signal `\lp_fltr.\add_tmp_1' using process `\lp_fltr.$proc$stereovision0.v:3353$302'.
  created $dff cell `$procdff$2009' with positive edge clock.
Creating register for signal `\lp_fltr.\add_tmp_2' using process `\lp_fltr.$proc$stereovision0.v:3353$302'.
  created $dff cell `$procdff$2010' with positive edge clock.
Creating register for signal `\lp_fltr.\din_tmp_1' using process `\lp_fltr.$proc$stereovision0.v:3353$302'.
  created $dff cell `$procdff$2011' with positive edge clock.
Creating register for signal `\lp_fltr.\din_tmp_2' using process `\lp_fltr.$proc$stereovision0.v:3353$302'.
  created $dff cell `$procdff$2012' with positive edge clock.
Creating register for signal `\lp_fltr.\din_tmp_3' using process `\lp_fltr.$proc$stereovision0.v:3353$302'.
  created $dff cell `$procdff$2013' with positive edge clock.
Creating register for signal `\lp_fltr.\sum_tmp_1' using process `\lp_fltr.$proc$stereovision0.v:3353$302'.
  created $dff cell `$procdff$2014' with positive edge clock.
Creating register for signal `\lp_fltr.\sum_tmp_2' using process `\lp_fltr.$proc$stereovision0.v:3353$302'.
  created $dff cell `$procdff$2015' with positive edge clock.
Creating register for signal `\lp_fltr.\sum_tmp_3' using process `\lp_fltr.$proc$stereovision0.v:3353$302'.
  created $dff cell `$procdff$2016' with positive edge clock.
Creating register for signal `\lp_fltr_v1.\din_1_reg' using process `\lp_fltr_v1.$proc$stereovision0.v:1302$126'.
  created $dff cell `$procdff$2017' with positive edge clock.
Creating register for signal `\lp_fltr_v1.\din_2_reg' using process `\lp_fltr_v1.$proc$stereovision0.v:1302$126'.
  created $dff cell `$procdff$2018' with positive edge clock.
Creating register for signal `\lp_fltr_v1.\din_3_reg' using process `\lp_fltr_v1.$proc$stereovision0.v:1302$126'.
  created $dff cell `$procdff$2019' with positive edge clock.
Creating register for signal `\lp_fltr_v1.\dout_1' using process `\lp_fltr_v1.$proc$stereovision0.v:1302$126'.
  created $dff cell `$procdff$2020' with positive edge clock.
Creating register for signal `\lp_fltr_v1.\dout_2' using process `\lp_fltr_v1.$proc$stereovision0.v:1302$126'.
  created $dff cell `$procdff$2021' with positive edge clock.
Creating register for signal `\lp_fltr_v1.\add_tmp_1' using process `\lp_fltr_v1.$proc$stereovision0.v:1302$126'.
  created $dff cell `$procdff$2022' with positive edge clock.
Creating register for signal `\lp_fltr_v1.\add_tmp_2' using process `\lp_fltr_v1.$proc$stereovision0.v:1302$126'.
  created $dff cell `$procdff$2023' with positive edge clock.
Creating register for signal `\lp_fltr_v2.\din_1_reg' using process `\lp_fltr_v2.$proc$stereovision0.v:1344$130'.
  created $dff cell `$procdff$2024' with positive edge clock.
Creating register for signal `\lp_fltr_v2.\din_2_reg' using process `\lp_fltr_v2.$proc$stereovision0.v:1344$130'.
  created $dff cell `$procdff$2025' with positive edge clock.
Creating register for signal `\lp_fltr_v2.\din_3_reg' using process `\lp_fltr_v2.$proc$stereovision0.v:1344$130'.
  created $dff cell `$procdff$2026' with positive edge clock.
Creating register for signal `\lp_fltr_v2.\dout_1' using process `\lp_fltr_v2.$proc$stereovision0.v:1344$130'.
  created $dff cell `$procdff$2027' with positive edge clock.
Creating register for signal `\lp_fltr_v2.\dout_2' using process `\lp_fltr_v2.$proc$stereovision0.v:1344$130'.
  created $dff cell `$procdff$2028' with positive edge clock.
Creating register for signal `\lp_fltr_v2.\add_tmp_1' using process `\lp_fltr_v2.$proc$stereovision0.v:1344$130'.
  created $dff cell `$procdff$2029' with positive edge clock.
Creating register for signal `\lp_fltr_v2.\add_tmp_2' using process `\lp_fltr_v2.$proc$stereovision0.v:1344$130'.
  created $dff cell `$procdff$2030' with positive edge clock.
Creating register for signal `\lp_fltr_v4.\din_1_reg' using process `\lp_fltr_v4.$proc$stereovision0.v:1380$134'.
  created $dff cell `$procdff$2031' with positive edge clock.
Creating register for signal `\lp_fltr_v4.\din_2_reg' using process `\lp_fltr_v4.$proc$stereovision0.v:1380$134'.
  created $dff cell `$procdff$2032' with positive edge clock.
Creating register for signal `\lp_fltr_v4.\din_3_reg' using process `\lp_fltr_v4.$proc$stereovision0.v:1380$134'.
  created $dff cell `$procdff$2033' with positive edge clock.
Creating register for signal `\lp_fltr_v4.\dout_1' using process `\lp_fltr_v4.$proc$stereovision0.v:1380$134'.
  created $dff cell `$procdff$2034' with positive edge clock.
Creating register for signal `\lp_fltr_v4.\dout_2' using process `\lp_fltr_v4.$proc$stereovision0.v:1380$134'.
  created $dff cell `$procdff$2035' with positive edge clock.
Creating register for signal `\lp_fltr_v4.\add_tmp_1' using process `\lp_fltr_v4.$proc$stereovision0.v:1380$134'.
  created $dff cell `$procdff$2036' with positive edge clock.
Creating register for signal `\lp_fltr_v4.\add_tmp_2' using process `\lp_fltr_v4.$proc$stereovision0.v:1380$134'.
  created $dff cell `$procdff$2037' with positive edge clock.
Creating register for signal `\my_fifo_1.\dout' using process `\my_fifo_1.$proc$stereovision0.v:3822$323'.
  created $dff cell `$procdff$2038' with positive edge clock.
Creating register for signal `\my_fifo_1.\buff1' using process `\my_fifo_1.$proc$stereovision0.v:3822$323'.
  created $dff cell `$procdff$2039' with positive edge clock.
Creating register for signal `\my_fifo_1.\buff2' using process `\my_fifo_1.$proc$stereovision0.v:3822$323'.
  created $dff cell `$procdff$2040' with positive edge clock.
Creating register for signal `\my_fifo_179.\dout' using process `\my_fifo_179.$proc$stereovision0.v:3870$327'.
  created $dff cell `$procdff$2041' with positive edge clock.
Creating register for signal `\my_fifo_179.\buff1' using process `\my_fifo_179.$proc$stereovision0.v:3870$327'.
  created $dff cell `$procdff$2042' with positive edge clock.
Creating register for signal `\my_fifo_179.\buff2' using process `\my_fifo_179.$proc$stereovision0.v:3870$327'.
  created $dff cell `$procdff$2043' with positive edge clock.
Creating register for signal `\my_fifo_2.\dout' using process `\my_fifo_2.$proc$stereovision0.v:3797$321'.
  created $dff cell `$procdff$2044' with positive edge clock.
Creating register for signal `\my_fifo_2.\buff1' using process `\my_fifo_2.$proc$stereovision0.v:3797$321'.
  created $dff cell `$procdff$2045' with positive edge clock.
Creating register for signal `\my_fifo_2.\buff2' using process `\my_fifo_2.$proc$stereovision0.v:3797$321'.
  created $dff cell `$procdff$2046' with positive edge clock.
Creating register for signal `\my_fifo_316.\dout' using process `\my_fifo_316.$proc$stereovision0.v:3772$319'.
  created $dff cell `$procdff$2047' with positive edge clock.
Creating register for signal `\my_fifo_316.\buff1' using process `\my_fifo_316.$proc$stereovision0.v:3772$319'.
  created $dff cell `$procdff$2048' with positive edge clock.
Creating register for signal `\my_fifo_316.\buff2' using process `\my_fifo_316.$proc$stereovision0.v:3772$319'.
  created $dff cell `$procdff$2049' with positive edge clock.
Creating register for signal `\my_fifo_359.\dout' using process `\my_fifo_359.$proc$stereovision0.v:3895$329'.
  created $dff cell `$procdff$2050' with positive edge clock.
Creating register for signal `\my_fifo_359.\buff1' using process `\my_fifo_359.$proc$stereovision0.v:3895$329'.
  created $dff cell `$procdff$2051' with positive edge clock.
Creating register for signal `\my_fifo_359.\buff2' using process `\my_fifo_359.$proc$stereovision0.v:3895$329'.
  created $dff cell `$procdff$2052' with positive edge clock.
Creating register for signal `\my_fifo_496.\dout' using process `\my_fifo_496.$proc$stereovision0.v:3748$317'.
  created $dff cell `$procdff$2053' with positive edge clock.
Creating register for signal `\my_fifo_496.\buff1' using process `\my_fifo_496.$proc$stereovision0.v:3748$317'.
  created $dff cell `$procdff$2054' with positive edge clock.
Creating register for signal `\my_fifo_496.\buff2' using process `\my_fifo_496.$proc$stereovision0.v:3748$317'.
  created $dff cell `$procdff$2055' with positive edge clock.
Creating register for signal `\my_fifo_89.\dout' using process `\my_fifo_89.$proc$stereovision0.v:3846$325'.
  created $dff cell `$procdff$2056' with positive edge clock.
Creating register for signal `\my_fifo_89.\buff1' using process `\my_fifo_89.$proc$stereovision0.v:3846$325'.
  created $dff cell `$procdff$2057' with positive edge clock.
Creating register for signal `\my_fifo_89.\buff2' using process `\my_fifo_89.$proc$stereovision0.v:3846$325'.
  created $dff cell `$procdff$2058' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\vidin_addr_reg_tmp' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2059' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\svid_comp_switch_tmp' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2060' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_20_tmp0' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2061' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_20_tmp1' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2062' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_20_tmp2' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2063' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_20_tmp3' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2064' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_20_tmp4' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2065' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_20_tmp5' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2066' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_20_tmp6' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2067' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_20_tmp7' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2068' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_20_tmp8' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2069' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_20_tmp9' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2070' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_20_tmp10' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2071' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_20_tmp11' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2072' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_20_tmp12' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2073' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_20_tmp13' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2074' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_20_tmp14' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2075' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_20_tmp15' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2076' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_20_tmp16' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2077' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_20_tmp17' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2078' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_20_tmp18' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2079' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_20_tmp19' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2080' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_20_tmp20' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2081' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_10_tmp0' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2082' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_10_tmp1' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2083' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_10_tmp2' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2084' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_10_tmp3' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2085' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_10_tmp4' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2086' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_10_tmp5' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2087' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_10_tmp6' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2088' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_10_tmp7' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2089' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_10_tmp8' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2090' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_10_tmp9' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2091' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_10_tmp10' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2092' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_5_tmp0' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2093' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_5_tmp1' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2094' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_5_tmp2' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2095' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_5_tmp3' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2096' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_5_tmp4' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2097' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_5_tmp5' using process `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
  created $dff cell `$procdff$2098' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\bus_word_1_tmp' using process `\port_bus_1to0_1.$proc$stereovision0.v:3641$307'.
  created $dff cell `$procdff$2099' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\bus_word_2_tmp' using process `\port_bus_1to0_1.$proc$stereovision0.v:3641$307'.
  created $dff cell `$procdff$2100' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\bus_word_3_tmp' using process `\port_bus_1to0_1.$proc$stereovision0.v:3641$307'.
  created $dff cell `$procdff$2101' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\bus_word_4_tmp' using process `\port_bus_1to0_1.$proc$stereovision0.v:3641$307'.
  created $dff cell `$procdff$2102' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\bus_word_5_tmp' using process `\port_bus_1to0_1.$proc$stereovision0.v:3641$307'.
  created $dff cell `$procdff$2103' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\bus_word_6_tmp' using process `\port_bus_1to0_1.$proc$stereovision0.v:3641$307'.
  created $dff cell `$procdff$2104' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\counter_out_tmp' using process `\port_bus_1to0_1.$proc$stereovision0.v:3641$307'.
  created $dff cell `$procdff$2105' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\vidin_addr_reg' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2106' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\vidin_new_data_scld_1_1to0' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2107' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\vidin_new_data_scld_2_1to0' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2108' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\vidin_new_data_scld_4_1to0' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2109' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_200' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2110' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_201' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2111' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_202' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2112' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_203' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2113' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_204' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2114' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_205' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2115' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_206' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2116' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_207' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2117' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_208' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2118' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_209' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2119' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_2010' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2120' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_2011' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2121' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_2012' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2122' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_2013' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2123' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_2014' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2124' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_2015' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2125' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_2016' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2126' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_2017' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2127' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_2018' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2128' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_2019' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2129' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_2020' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2130' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_100' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2131' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_101' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2132' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_102' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2133' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_103' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2134' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_104' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2135' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_105' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2136' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_106' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2137' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_107' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2138' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_108' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2139' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_109' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2140' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_1010' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2141' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_50' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2142' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_51' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2143' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_52' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2144' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_53' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2145' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_54' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2146' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\v_corr_55' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2147' with positive edge clock.
Creating register for signal `\port_bus_1to0_1.\svid_comp_switch' using process `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
  created $dff cell `$procdff$2148' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dout0' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2149' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dout1' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2150' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dout2' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2151' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dout3' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2152' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dout4' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2153' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dout5' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2154' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dout6' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2155' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dout7' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2156' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dout8' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2157' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dout9' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2158' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dout10' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2159' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dout11' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2160' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dout12' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2161' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dout13' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2162' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dout14' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2163' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dout15' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2164' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dout16' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2165' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dout17' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2166' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dout18' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2167' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dout19' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2168' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dout20' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2169' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dinr0' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2170' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dinr1' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2171' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dinr2' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2172' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dinr3' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2173' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dinr4' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2174' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dinr5' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2175' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dinr6' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2176' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dinr7' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2177' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dinr8' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2178' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dinr9' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2179' with positive edge clock.
Creating register for signal `\quadintr_10_20.\dinr10' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2180' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_11' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2181' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_13' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2182' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_15' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2183' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_17' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2184' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_19' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2185' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_111' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2186' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_113' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2187' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_115' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2188' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_117' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2189' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_119' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2190' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_21' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2191' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_23' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2192' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_25' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2193' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_27' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2194' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_29' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2195' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_211' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2196' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_213' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2197' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_215' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2198' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_217' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2199' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_219' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2200' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_31' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2201' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_33' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2202' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_35' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2203' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_37' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2204' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_39' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2205' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_311' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2206' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_313' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2207' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_315' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2208' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_317' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2209' with positive edge clock.
Creating register for signal `\quadintr_10_20.\tmp_319' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2210' with positive edge clock.
Creating register for signal `\quadintr_10_20.\add_tmp1' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2211' with positive edge clock.
Creating register for signal `\quadintr_10_20.\add_tmp3' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2212' with positive edge clock.
Creating register for signal `\quadintr_10_20.\add_tmp5' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2213' with positive edge clock.
Creating register for signal `\quadintr_10_20.\add_tmp7' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2214' with positive edge clock.
Creating register for signal `\quadintr_10_20.\add_tmp9' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2215' with positive edge clock.
Creating register for signal `\quadintr_10_20.\add_tmp11' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2216' with positive edge clock.
Creating register for signal `\quadintr_10_20.\add_tmp13' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2217' with positive edge clock.
Creating register for signal `\quadintr_10_20.\add_tmp15' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2218' with positive edge clock.
Creating register for signal `\quadintr_10_20.\add_tmp17' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2219' with positive edge clock.
Creating register for signal `\quadintr_10_20.\add_tmp19' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2220' with positive edge clock.
Creating register for signal `\quadintr_10_20.\doutr0' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2221' with positive edge clock.
Creating register for signal `\quadintr_10_20.\doutr1' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2222' with positive edge clock.
Creating register for signal `\quadintr_10_20.\doutr2' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2223' with positive edge clock.
Creating register for signal `\quadintr_10_20.\doutr3' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2224' with positive edge clock.
Creating register for signal `\quadintr_10_20.\doutr4' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2225' with positive edge clock.
Creating register for signal `\quadintr_10_20.\doutr5' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2226' with positive edge clock.
Creating register for signal `\quadintr_10_20.\doutr6' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2227' with positive edge clock.
Creating register for signal `\quadintr_10_20.\doutr7' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2228' with positive edge clock.
Creating register for signal `\quadintr_10_20.\doutr8' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2229' with positive edge clock.
Creating register for signal `\quadintr_10_20.\doutr9' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2230' with positive edge clock.
Creating register for signal `\quadintr_10_20.\doutr10' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2231' with positive edge clock.
Creating register for signal `\quadintr_10_20.\doutr11' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2232' with positive edge clock.
Creating register for signal `\quadintr_10_20.\doutr12' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2233' with positive edge clock.
Creating register for signal `\quadintr_10_20.\doutr13' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2234' with positive edge clock.
Creating register for signal `\quadintr_10_20.\doutr14' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2235' with positive edge clock.
Creating register for signal `\quadintr_10_20.\doutr15' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2236' with positive edge clock.
Creating register for signal `\quadintr_10_20.\doutr16' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2237' with positive edge clock.
Creating register for signal `\quadintr_10_20.\doutr17' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2238' with positive edge clock.
Creating register for signal `\quadintr_10_20.\doutr18' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2239' with positive edge clock.
Creating register for signal `\quadintr_10_20.\doutr19' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2240' with positive edge clock.
Creating register for signal `\quadintr_10_20.\doutr20' using process `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
  created $dff cell `$procdff$2241' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dout0' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2242' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dout1' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2243' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dout2' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2244' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dout3' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2245' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dout4' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2246' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dout5' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2247' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dout6' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2248' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dout7' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2249' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dout8' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2250' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dout9' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2251' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dout10' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2252' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dout11' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2253' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dout12' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2254' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dout13' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2255' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dout14' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2256' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dout15' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2257' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dout16' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2258' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dout17' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2259' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dout18' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2260' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dout19' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2261' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dout20' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2262' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dinr0' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2263' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dinr1' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2264' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dinr2' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2265' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dinr3' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2266' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dinr4' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2267' with positive edge clock.
Creating register for signal `\quadintr_5_20.\dinr5' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2268' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_11' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2269' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_13' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2270' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_15' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2271' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_17' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2272' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_19' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2273' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_21' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2274' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_23' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2275' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_25' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2276' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_27' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2277' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_29' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2278' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_31' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2279' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_33' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2280' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_35' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2281' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_37' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2282' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_39' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2283' with positive edge clock.
Creating register for signal `\quadintr_5_20.\add_tmp1' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2284' with positive edge clock.
Creating register for signal `\quadintr_5_20.\add_tmp3' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2285' with positive edge clock.
Creating register for signal `\quadintr_5_20.\add_tmp5' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2286' with positive edge clock.
Creating register for signal `\quadintr_5_20.\add_tmp7' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2287' with positive edge clock.
Creating register for signal `\quadintr_5_20.\add_tmp9' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2288' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr0' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2289' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr1' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2290' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr2' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2291' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr3' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2292' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr4' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2293' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr5' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2294' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr6' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2295' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr7' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2296' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr8' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2297' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr9' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2298' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr10' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2299' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr11' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2300' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr12' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2301' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr13' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2302' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr14' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2303' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr15' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2304' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr16' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2305' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr17' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2306' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr18' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2307' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr19' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2308' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr20' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2309' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_1_101' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2310' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_1_103' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2311' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_1_105' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2312' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_1_107' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2313' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_1_109' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2314' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_1_1011' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2315' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_1_1013' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2316' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_1_1015' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2317' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_1_1017' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2318' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_1_1019' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2319' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_2_101' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2320' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_2_103' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2321' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_2_105' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2322' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_2_107' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2323' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_2_109' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2324' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_2_1011' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2325' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_2_1013' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2326' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_2_1015' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2327' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_2_1017' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2328' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_2_1019' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2329' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_3_101' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2330' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_3_103' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2331' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_3_105' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2332' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_3_107' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2333' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_3_109' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2334' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_3_1011' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2335' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_3_1013' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2336' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_3_1015' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2337' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_3_1017' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2338' with positive edge clock.
Creating register for signal `\quadintr_5_20.\tmp_3_1019' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2339' with positive edge clock.
Creating register for signal `\quadintr_5_20.\add_tmp_101' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2340' with positive edge clock.
Creating register for signal `\quadintr_5_20.\add_tmp_103' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2341' with positive edge clock.
Creating register for signal `\quadintr_5_20.\add_tmp_105' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2342' with positive edge clock.
Creating register for signal `\quadintr_5_20.\add_tmp_107' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2343' with positive edge clock.
Creating register for signal `\quadintr_5_20.\add_tmp_109' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2344' with positive edge clock.
Creating register for signal `\quadintr_5_20.\add_tmp_1011' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2345' with positive edge clock.
Creating register for signal `\quadintr_5_20.\add_tmp_1013' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2346' with positive edge clock.
Creating register for signal `\quadintr_5_20.\add_tmp_1015' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2347' with positive edge clock.
Creating register for signal `\quadintr_5_20.\add_tmp_1017' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2348' with positive edge clock.
Creating register for signal `\quadintr_5_20.\add_tmp_1019' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2349' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr_100' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2350' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr_101' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2351' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr_102' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2352' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr_103' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2353' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr_104' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2354' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr_105' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2355' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr_106' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2356' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr_107' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2357' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr_108' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2358' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr_109' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2359' with positive edge clock.
Creating register for signal `\quadintr_5_20.\doutr_1010' using process `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
  created $dff cell `$procdff$2360' with positive edge clock.
Creating register for signal `\scaler.\vidin_new_data_scld_1' using process `\scaler.$proc$stereovision0.v:1434$138'.
  created $dff cell `$procdff$2361' with positive edge clock.
Creating register for signal `\scaler.\vidin_new_data_scld_2' using process `\scaler.$proc$stereovision0.v:1434$138'.
  created $dff cell `$procdff$2362' with positive edge clock.
Creating register for signal `\scaler.\vidin_new_data_scld_4' using process `\scaler.$proc$stereovision0.v:1434$138'.
  created $dff cell `$procdff$2363' with positive edge clock.
Creating register for signal `\scaler.\vidin_gray_scld_1' using process `\scaler.$proc$stereovision0.v:1434$138'.
  created $dff cell `$procdff$2364' with positive edge clock.
Creating register for signal `\scaler.\vidin_gray_scld_2' using process `\scaler.$proc$stereovision0.v:1434$138'.
  created $dff cell `$procdff$2365' with positive edge clock.
Creating register for signal `\scaler.\vidin_gray_scld_4' using process `\scaler.$proc$stereovision0.v:1434$138'.
  created $dff cell `$procdff$2366' with positive edge clock.
Creating register for signal `\scl_h_fltr.\d_out_1' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2367' with positive edge clock.
Creating register for signal `\scl_h_fltr.\d_out_2' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2368' with positive edge clock.
Creating register for signal `\scl_h_fltr.\d_out_4' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2369' with positive edge clock.
Creating register for signal `\scl_h_fltr.\add_2_tmp_1' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2370' with positive edge clock.
Creating register for signal `\scl_h_fltr.\add_2_tmp_2' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2371' with positive edge clock.
Creating register for signal `\scl_h_fltr.\add_2_tmp' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2372' with positive edge clock.
Creating register for signal `\scl_h_fltr.\add_4_tmp_1' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2373' with positive edge clock.
Creating register for signal `\scl_h_fltr.\add_4_tmp_2' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2374' with positive edge clock.
Creating register for signal `\scl_h_fltr.\add_4_tmp_3' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2375' with positive edge clock.
Creating register for signal `\scl_h_fltr.\add_4_tmp_4' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2376' with positive edge clock.
Creating register for signal `\scl_h_fltr.\add_4_tmp_5' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2377' with positive edge clock.
Creating register for signal `\scl_h_fltr.\add_4_tmp_6' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2378' with positive edge clock.
Creating register for signal `\scl_h_fltr.\add_4_tmp_7' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2379' with positive edge clock.
Creating register for signal `\scl_h_fltr.\add_4_tmp_8' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2380' with positive edge clock.
Creating register for signal `\scl_h_fltr.\add_4_tmp' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2381' with positive edge clock.
Creating register for signal `\scl_h_fltr.\buff_out_reg_21' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2382' with positive edge clock.
Creating register for signal `\scl_h_fltr.\buff_out_reg_22' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2383' with positive edge clock.
Creating register for signal `\scl_h_fltr.\buff_out_reg_23' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2384' with positive edge clock.
Creating register for signal `\scl_h_fltr.\buff_out_reg_41' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2385' with positive edge clock.
Creating register for signal `\scl_h_fltr.\buff_out_reg_42' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2386' with positive edge clock.
Creating register for signal `\scl_h_fltr.\buff_out_reg_43' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2387' with positive edge clock.
Creating register for signal `\scl_h_fltr.\buff_out_reg_44' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2388' with positive edge clock.
Creating register for signal `\scl_h_fltr.\buff_out_reg_45' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2389' with positive edge clock.
Creating register for signal `\scl_h_fltr.\buff_out_reg_46' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2390' with positive edge clock.
Creating register for signal `\scl_h_fltr.\buff_out_reg_47' using process `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
  created $dff cell `$procdff$2391' with positive edge clock.
Creating register for signal `\scl_v_fltr.\d_out_1' using process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
  created $dff cell `$procdff$2392' with positive edge clock.
Creating register for signal `\scl_v_fltr.\d_out_2' using process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
  created $dff cell `$procdff$2393' with positive edge clock.
Creating register for signal `\scl_v_fltr.\d_out_4' using process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
  created $dff cell `$procdff$2394' with positive edge clock.
Creating register for signal `\scl_v_fltr.\buff_out_reg1' using process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
  created $dff cell `$procdff$2395' with positive edge clock.
Creating register for signal `\scl_v_fltr.\buff_out_reg2' using process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
  created $dff cell `$procdff$2396' with positive edge clock.
Creating register for signal `\scl_v_fltr.\buff_out_reg3' using process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
  created $dff cell `$procdff$2397' with positive edge clock.
Creating register for signal `\scl_v_fltr.\buff_out_reg4' using process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
  created $dff cell `$procdff$2398' with positive edge clock.
Creating register for signal `\scl_v_fltr.\buff_out_reg5' using process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
  created $dff cell `$procdff$2399' with positive edge clock.
Creating register for signal `\scl_v_fltr.\buff_out_reg6' using process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
  created $dff cell `$procdff$2400' with positive edge clock.
Creating register for signal `\scl_v_fltr.\buff_out_reg7' using process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
  created $dff cell `$procdff$2401' with positive edge clock.
Creating register for signal `\scl_v_fltr.\add_2_tmp_1' using process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
  created $dff cell `$procdff$2402' with positive edge clock.
Creating register for signal `\scl_v_fltr.\add_2_tmp_2' using process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
  created $dff cell `$procdff$2403' with positive edge clock.
Creating register for signal `\scl_v_fltr.\add_2_tmp' using process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
  created $dff cell `$procdff$2404' with positive edge clock.
Creating register for signal `\scl_v_fltr.\add_4_tmp_1' using process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
  created $dff cell `$procdff$2405' with positive edge clock.
Creating register for signal `\scl_v_fltr.\add_4_tmp_2' using process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
  created $dff cell `$procdff$2406' with positive edge clock.
Creating register for signal `\scl_v_fltr.\add_4_tmp_3' using process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
  created $dff cell `$procdff$2407' with positive edge clock.
Creating register for signal `\scl_v_fltr.\add_4_tmp_4' using process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
  created $dff cell `$procdff$2408' with positive edge clock.
Creating register for signal `\scl_v_fltr.\add_4_tmp_5' using process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
  created $dff cell `$procdff$2409' with positive edge clock.
Creating register for signal `\scl_v_fltr.\add_4_tmp_6' using process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
  created $dff cell `$procdff$2410' with positive edge clock.
Creating register for signal `\scl_v_fltr.\add_4_tmp_7' using process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
  created $dff cell `$procdff$2411' with positive edge clock.
Creating register for signal `\scl_v_fltr.\add_4_tmp_8' using process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
  created $dff cell `$procdff$2412' with positive edge clock.
Creating register for signal `\scl_v_fltr.\add_4_tmp' using process `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
  created $dff cell `$procdff$2413' with positive edge clock.
Creating register for signal `\sh_reg_1.\dout_1' using process `\sh_reg_1.$proc$stereovision0.v:1663$170'.
  created $dff cell `$procdff$2414' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\vidin_new_data_scld_1_2to3_left_reg' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:782$38'.
  created $dff cell `$procdff$2415' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\vidin_data_reg_scld_1_2to3_left_reg' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:782$38'.
  created $dff cell `$procdff$2416' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\vidin_data_reg_scld_1_2to3_right_reg' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:782$38'.
  created $dff cell `$procdff$2417' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\vidin_new_data_scld_2_2to3_left_reg' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:782$38'.
  created $dff cell `$procdff$2418' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\vidin_data_reg_scld_2_2to3_left_reg' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:782$38'.
  created $dff cell `$procdff$2419' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\vidin_data_reg_scld_2_2to3_right_reg' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:782$38'.
  created $dff cell `$procdff$2420' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\vidin_new_data_scld_4_2to3_left_reg' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:782$38'.
  created $dff cell `$procdff$2421' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\vidin_data_reg_scld_4_2to3_left_reg' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:782$38'.
  created $dff cell `$procdff$2422' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\vidin_data_reg_scld_4_2to3_right_reg' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:782$38'.
  created $dff cell `$procdff$2423' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\vidin_addr_reg_2to3_reg' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:782$38'.
  created $dff cell `$procdff$2424' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\v_nd_s1_left_2to0' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:804$42'.
  created $dff cell `$procdff$2425' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\v_nd_s2_left_2to0' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:804$42'.
  created $dff cell `$procdff$2426' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\v_nd_s4_left_2to0' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:804$42'.
  created $dff cell `$procdff$2427' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\v_d_reg_s1_left_2to0' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:804$42'.
  created $dff cell `$procdff$2428' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\v_d_reg_s2_left_2to0' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:804$42'.
  created $dff cell `$procdff$2429' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\v_d_reg_s4_left_2to0' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:804$42'.
  created $dff cell `$procdff$2430' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\v_nd_s1_right_2to0' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:804$42'.
  created $dff cell `$procdff$2431' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\v_nd_s2_right_2to0' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:804$42'.
  created $dff cell `$procdff$2432' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\v_nd_s4_right_2to0' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:804$42'.
  created $dff cell `$procdff$2433' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\v_d_reg_s1_right_2to0' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:804$42'.
  created $dff cell `$procdff$2434' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\v_d_reg_s2_right_2to0' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:804$42'.
  created $dff cell `$procdff$2435' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\v_d_reg_s4_right_2to0' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:804$42'.
  created $dff cell `$procdff$2436' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\tm3_sram_data_xhdl0' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2437' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\tm3_sram_addr' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2438' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\tm3_sram_we' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2439' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\tm3_sram_oe' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2440' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\tm3_sram_adsp' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2441' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\tm3_vidout_red' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2442' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\tm3_vidout_green' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2443' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\tm3_vidout_blue' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2444' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\tm3_vidout_hsync' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2445' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\tm3_vidout_vsync' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2446' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\tm3_vidout_blank' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2447' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\depth_out' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2448' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\x_reg_l' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2449' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\x_reg_r' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2450' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\y_reg_up' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2451' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\y_reg_dn' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2452' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\depth_out_reg' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2453' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\horiz' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2454' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\vert' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2455' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\vidin_data_buf_sc_1' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2456' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\vidin_data_buf_2_sc_1' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2457' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\vidin_addr_buf_sc_1' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2458' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\vidout_buf' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2459' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\vidin_data_buf_sc_2' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2460' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\vidin_data_buf_2_sc_2' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2461' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\vidin_addr_buf_sc_2' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2462' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\vidin_data_buf_sc_4' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2463' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\vidin_data_buf_2_sc_4' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2464' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\vidin_addr_buf_sc_4' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2465' with positive edge clock.
Creating register for signal `\sv_chip0_hierarchy_no_mem.\video_state' using process `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
  created $dff cell `$procdff$2466' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\tmy_ram0' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2467' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\tmy_ram1' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2468' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\tmy_ram2' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2469' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\tmy_ram3' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2470' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\tmy_ram4' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2471' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\tmy_ram5' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2472' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\tmy_ram6' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2473' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\tmy_ram7' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2474' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\tmy_ram8' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2475' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\tmy_ram9' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2476' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\tmy_ram10' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2477' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\tmy_ram11' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2478' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\tmy_ram12' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2479' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\tmy_ram13' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2480' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\tmy_ram14' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2481' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\tmy_ram15' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2482' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\tmy_ram16' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2483' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\tmy_ram17' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2484' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\tmy_ram18' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2485' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\tmy_ram19' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2486' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\tmy_ram20' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2487' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\my_ram0' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2488' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\my_ram1' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2489' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\my_ram2' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2490' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\my_ram3' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2491' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\my_ram4' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2492' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\my_ram5' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2493' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\my_ram6' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2494' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\my_ram7' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2495' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\my_ram8' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2496' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\my_ram9' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2497' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\my_ram10' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2498' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\my_ram11' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2499' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\my_ram12' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2500' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\my_ram13' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2501' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\my_ram14' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2502' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\my_ram15' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2503' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\my_ram16' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2504' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\my_ram17' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2505' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\my_ram18' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2506' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\my_ram19' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2507' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_10_20.\my_ram20' using process `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
  created $dff cell `$procdff$2508' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\tmy_ram0' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2509' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\tmy_ram1' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2510' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\tmy_ram2' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2511' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\tmy_ram3' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2512' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\tmy_ram4' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2513' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\tmy_ram5' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2514' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\tmy_ram6' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2515' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\tmy_ram7' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2516' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\tmy_ram8' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2517' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\tmy_ram9' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2518' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\tmy_ram10' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2519' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\tmy_ram11' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2520' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\tmy_ram12' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2521' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\tmy_ram13' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2522' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\tmy_ram14' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2523' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\tmy_ram15' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2524' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\tmy_ram16' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2525' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\tmy_ram17' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2526' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\tmy_ram18' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2527' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\tmy_ram19' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2528' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\tmy_ram20' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2529' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\my_ram0' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2530' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\my_ram1' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2531' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\my_ram2' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2532' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\my_ram3' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2533' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\my_ram4' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2534' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\my_ram5' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2535' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\my_ram6' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2536' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\my_ram7' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2537' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\my_ram8' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2538' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\my_ram9' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2539' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\my_ram10' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2540' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\my_ram11' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2541' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\my_ram12' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2542' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\my_ram13' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2543' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\my_ram14' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2544' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\my_ram15' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2545' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\my_ram16' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2546' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\my_ram17' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2547' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\my_ram18' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2548' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\my_ram19' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2549' with positive edge clock.
Creating register for signal `\wrapper_qs_intr_5_20.\my_ram20' using process `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
  created $dff cell `$procdff$2550' with positive edge clock.

9.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

9.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\combine_res.$proc$stereovision0.v:1191$122'.
Removing empty process `combine_res.$proc$stereovision0.v:1191$122'.
Found and cleaned up 21 empty switches in `\find_max.$proc$stereovision0.v:3097$280'.
Removing empty process `find_max.$proc$stereovision0.v:3097$280'.
Found and cleaned up 1 empty switch in `\lp_fltr.$proc$stereovision0.v:3353$302'.
Removing empty process `lp_fltr.$proc$stereovision0.v:3353$302'.
Found and cleaned up 1 empty switch in `\lp_fltr_v1.$proc$stereovision0.v:1302$126'.
Removing empty process `lp_fltr_v1.$proc$stereovision0.v:1302$126'.
Found and cleaned up 1 empty switch in `\lp_fltr_v2.$proc$stereovision0.v:1344$130'.
Removing empty process `lp_fltr_v2.$proc$stereovision0.v:1344$130'.
Found and cleaned up 1 empty switch in `\lp_fltr_v4.$proc$stereovision0.v:1380$134'.
Removing empty process `lp_fltr_v4.$proc$stereovision0.v:1380$134'.
Found and cleaned up 1 empty switch in `\my_fifo_1.$proc$stereovision0.v:3822$323'.
Removing empty process `my_fifo_1.$proc$stereovision0.v:3822$323'.
Found and cleaned up 1 empty switch in `\my_fifo_179.$proc$stereovision0.v:3870$327'.
Removing empty process `my_fifo_179.$proc$stereovision0.v:3870$327'.
Found and cleaned up 1 empty switch in `\my_fifo_2.$proc$stereovision0.v:3797$321'.
Removing empty process `my_fifo_2.$proc$stereovision0.v:3797$321'.
Found and cleaned up 1 empty switch in `\my_fifo_316.$proc$stereovision0.v:3772$319'.
Removing empty process `my_fifo_316.$proc$stereovision0.v:3772$319'.
Found and cleaned up 1 empty switch in `\my_fifo_359.$proc$stereovision0.v:3895$329'.
Removing empty process `my_fifo_359.$proc$stereovision0.v:3895$329'.
Found and cleaned up 1 empty switch in `\my_fifo_496.$proc$stereovision0.v:3748$317'.
Removing empty process `my_fifo_496.$proc$stereovision0.v:3748$317'.
Found and cleaned up 1 empty switch in `\my_fifo_89.$proc$stereovision0.v:3846$325'.
Removing empty process `my_fifo_89.$proc$stereovision0.v:3846$325'.
Found and cleaned up 1 empty switch in `\port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
Removing empty process `port_bus_1to0_1.$proc$stereovision0.v:3564$306'.
Removing empty process `port_bus_1to0_1.$proc$stereovision0.v:3641$307'.
Found and cleaned up 4 empty switches in `\port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
Removing empty process `port_bus_1to0_1.$proc$stereovision0.v:3652$308'.
Found and cleaned up 1 empty switch in `\quadintr_10_20.$proc$stereovision0.v:2409$176'.
Removing empty process `quadintr_10_20.$proc$stereovision0.v:2409$176'.
Found and cleaned up 1 empty switch in `\quadintr_5_20.$proc$stereovision0.v:2796$218'.
Removing empty process `quadintr_5_20.$proc$stereovision0.v:2796$218'.
Found and cleaned up 3 empty switches in `\scaler.$proc$stereovision0.v:1434$138'.
Removing empty process `scaler.$proc$stereovision0.v:1434$138'.
Found and cleaned up 1 empty switch in `\scl_h_fltr.$proc$stereovision0.v:1618$158'.
Removing empty process `scl_h_fltr.$proc$stereovision0.v:1618$158'.
Found and cleaned up 1 empty switch in `\scl_v_fltr.$proc$stereovision0.v:1526$146'.
Removing empty process `scl_v_fltr.$proc$stereovision0.v:1526$146'.
Found and cleaned up 1 empty switch in `\sh_reg_1.$proc$stereovision0.v:1663$170'.
Removing empty process `sh_reg_1.$proc$stereovision0.v:1663$170'.
Found and cleaned up 1 empty switch in `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:782$38'.
Removing empty process `sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:782$38'.
Found and cleaned up 3 empty switches in `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:804$42'.
Removing empty process `sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:804$42'.
Found and cleaned up 18 empty switches in `\sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
Removing empty process `sv_chip0_hierarchy_no_mem.$proc$stereovision0.v:830$47'.
Found and cleaned up 1 empty switch in `\wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
Removing empty process `wrapper_qs_intr_10_20.$proc$stereovision0.v:1854$172'.
Found and cleaned up 1 empty switch in `\wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
Removing empty process `wrapper_qs_intr_5_20.$proc$stereovision0.v:2116$174'.
Cleaned up 70 empty switches.

9.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module combine_res.
Optimizing module find_max.
Optimizing module lp_fltr.
Optimizing module lp_fltr_v1.
Optimizing module lp_fltr_v2.
Optimizing module lp_fltr_v4.
Optimizing module my_fifo_1.
Optimizing module my_fifo_179.
Optimizing module my_fifo_2.
Optimizing module my_fifo_316.
Optimizing module my_fifo_359.
Optimizing module my_fifo_496.
Optimizing module my_fifo_89.
Optimizing module port_bus_1to0_1.
Optimizing module quadintr_10_20.
Optimizing module quadintr_5_20.
Optimizing module scaler.
Optimizing module scl_h_fltr.
Optimizing module scl_v_fltr.
Optimizing module sh_reg_1.
Optimizing module sv_chip0_hierarchy_no_mem.
<suppressed ~26 debug messages>
Optimizing module v_fltr_316.
Optimizing module v_fltr_496.
Optimizing module wrapper_qs_intr_10_20.
Optimizing module wrapper_qs_intr_5_20.

10. Executing FSM pass (extract and optimize FSM).

10.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking find_max.indx_1_1 as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking find_max.indx_1_10 as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking find_max.indx_1_11 as FSM state register:
    Users of register don't seem to benefit from recoding.
    Circuit seems to be self-resetting.
Not marking find_max.indx_1_2 as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking find_max.indx_1_3 as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking find_max.indx_1_4 as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking find_max.indx_1_5 as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking find_max.indx_1_6 as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking find_max.indx_1_7 as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking find_max.indx_1_8 as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking find_max.indx_1_9 as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking sv_chip0_hierarchy_no_mem.tm3_sram_oe as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Not marking sv_chip0_hierarchy_no_mem.tm3_sram_we as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.

10.2. Executing FSM_EXTRACT pass (extracting FSM from design).

10.3. Executing FSM_OPT pass (simple optimizations of FSMs).

10.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \combine_res..
Finding unused cells or wires in module \find_max..
Finding unused cells or wires in module \lp_fltr..
Finding unused cells or wires in module \lp_fltr_v1..
Finding unused cells or wires in module \lp_fltr_v2..
Finding unused cells or wires in module \lp_fltr_v4..
Finding unused cells or wires in module \my_fifo_1..
Finding unused cells or wires in module \my_fifo_179..
Finding unused cells or wires in module \my_fifo_2..
Finding unused cells or wires in module \my_fifo_316..
Finding unused cells or wires in module \my_fifo_359..
Finding unused cells or wires in module \my_fifo_496..
Finding unused cells or wires in module \my_fifo_89..
Finding unused cells or wires in module \port_bus_1to0_1..
Finding unused cells or wires in module \quadintr_10_20..
Finding unused cells or wires in module \quadintr_5_20..
Finding unused cells or wires in module \scaler..
Finding unused cells or wires in module \scl_h_fltr..
Finding unused cells or wires in module \scl_v_fltr..
Finding unused cells or wires in module \sh_reg_1..
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..
Finding unused cells or wires in module \v_fltr_316..
Finding unused cells or wires in module \v_fltr_496..
Finding unused cells or wires in module \wrapper_qs_intr_10_20..
Finding unused cells or wires in module \wrapper_qs_intr_5_20..
Removed 48 unused cells and 1473 unused wires.
<suppressed ~301 debug messages>

10.5. Executing FSM_OPT pass (simple optimizations of FSMs).

10.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

10.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

10.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

11. Executing OPT pass (performing simple optimizations).

11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module combine_res.
Optimizing module find_max.
Optimizing module lp_fltr.
Optimizing module lp_fltr_v1.
Optimizing module lp_fltr_v2.
Optimizing module lp_fltr_v4.
Optimizing module my_fifo_1.
Optimizing module my_fifo_179.
Optimizing module my_fifo_2.
Optimizing module my_fifo_316.
Optimizing module my_fifo_359.
Optimizing module my_fifo_496.
Optimizing module my_fifo_89.
Optimizing module port_bus_1to0_1.
Optimizing module quadintr_10_20.
Optimizing module quadintr_5_20.
Optimizing module scaler.
Optimizing module scl_h_fltr.
Optimizing module scl_v_fltr.
Optimizing module sh_reg_1.
Optimizing module sv_chip0_hierarchy_no_mem.
Optimizing module v_fltr_316.
Optimizing module v_fltr_496.
Optimizing module wrapper_qs_intr_10_20.
Optimizing module wrapper_qs_intr_5_20.

11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\combine_res'.
Finding identical cells in module `\find_max'.
Finding identical cells in module `\lp_fltr'.
Finding identical cells in module `\lp_fltr_v1'.
Finding identical cells in module `\lp_fltr_v2'.
Finding identical cells in module `\lp_fltr_v4'.
Finding identical cells in module `\my_fifo_1'.
Finding identical cells in module `\my_fifo_179'.
Finding identical cells in module `\my_fifo_2'.
Finding identical cells in module `\my_fifo_316'.
Finding identical cells in module `\my_fifo_359'.
Finding identical cells in module `\my_fifo_496'.
Finding identical cells in module `\my_fifo_89'.
Finding identical cells in module `\port_bus_1to0_1'.
<suppressed ~186 debug messages>
Finding identical cells in module `\quadintr_10_20'.
<suppressed ~6 debug messages>
Finding identical cells in module `\quadintr_5_20'.
<suppressed ~12 debug messages>
Finding identical cells in module `\scaler'.
Finding identical cells in module `\scl_h_fltr'.
Finding identical cells in module `\scl_v_fltr'.
Finding identical cells in module `\sh_reg_1'.
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
<suppressed ~243 debug messages>
Finding identical cells in module `\v_fltr_316'.
Finding identical cells in module `\v_fltr_496'.
Finding identical cells in module `\wrapper_qs_intr_10_20'.
Finding identical cells in module `\wrapper_qs_intr_5_20'.
Removed a total of 149 cells.

11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \combine_res..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \find_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lp_fltr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lp_fltr_v1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lp_fltr_v2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lp_fltr_v4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \my_fifo_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \my_fifo_179..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \my_fifo_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \my_fifo_316..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \my_fifo_359..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \my_fifo_496..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \my_fifo_89..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \port_bus_1to0_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \quadintr_10_20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \quadintr_5_20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scaler..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scl_h_fltr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scl_v_fltr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sh_reg_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sv_chip0_hierarchy_no_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \v_fltr_316..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \v_fltr_496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wrapper_qs_intr_10_20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \wrapper_qs_intr_5_20..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~433 debug messages>

11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \combine_res.
  Optimizing cells in module \find_max.
  Optimizing cells in module \lp_fltr.
  Optimizing cells in module \lp_fltr_v1.
  Optimizing cells in module \lp_fltr_v2.
  Optimizing cells in module \lp_fltr_v4.
  Optimizing cells in module \my_fifo_1.
  Optimizing cells in module \my_fifo_179.
  Optimizing cells in module \my_fifo_2.
  Optimizing cells in module \my_fifo_316.
  Optimizing cells in module \my_fifo_359.
  Optimizing cells in module \my_fifo_496.
  Optimizing cells in module \my_fifo_89.
  Optimizing cells in module \port_bus_1to0_1.
    New ctrl vector for $pmux cell $procmux$735: $auto$opt_reduce.cc:134:opt_pmux$2552
    New ctrl vector for $pmux cell $procmux$744: $auto$opt_reduce.cc:134:opt_pmux$2554
    New ctrl vector for $pmux cell $procmux$753: $auto$opt_reduce.cc:134:opt_pmux$2556
    New ctrl vector for $pmux cell $procmux$762: $auto$opt_reduce.cc:134:opt_pmux$2558
    New ctrl vector for $pmux cell $procmux$771: $auto$opt_reduce.cc:134:opt_pmux$2560
  Optimizing cells in module \port_bus_1to0_1.
  Optimizing cells in module \quadintr_10_20.
  Optimizing cells in module \quadintr_5_20.
  Optimizing cells in module \scaler.
  Optimizing cells in module \scl_h_fltr.
  Optimizing cells in module \scl_v_fltr.
  Optimizing cells in module \sh_reg_1.
  Optimizing cells in module \sv_chip0_hierarchy_no_mem.
    New ctrl vector for $pmux cell $procmux$1504: $auto$opt_reduce.cc:134:opt_pmux$2562
    New ctrl vector for $pmux cell $procmux$1514: $auto$opt_reduce.cc:134:opt_pmux$2564
    New ctrl vector for $pmux cell $procmux$1530: $auto$opt_reduce.cc:134:opt_pmux$2566
    New ctrl vector for $pmux cell $procmux$1552: $auto$opt_reduce.cc:134:opt_pmux$2568
    New ctrl vector for $pmux cell $procmux$1563: { $auto$opt_reduce.cc:134:opt_pmux$2570 $procmux$1497_CMP }
  Optimizing cells in module \sv_chip0_hierarchy_no_mem.
  Optimizing cells in module \v_fltr_316.
  Optimizing cells in module \v_fltr_496.
  Optimizing cells in module \wrapper_qs_intr_10_20.
  Optimizing cells in module \wrapper_qs_intr_5_20.
Performed a total of 10 changes.

11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\combine_res'.
Finding identical cells in module `\find_max'.
Finding identical cells in module `\lp_fltr'.
Finding identical cells in module `\lp_fltr_v1'.
Finding identical cells in module `\lp_fltr_v2'.
Finding identical cells in module `\lp_fltr_v4'.
Finding identical cells in module `\my_fifo_1'.
Finding identical cells in module `\my_fifo_179'.
Finding identical cells in module `\my_fifo_2'.
Finding identical cells in module `\my_fifo_316'.
Finding identical cells in module `\my_fifo_359'.
Finding identical cells in module `\my_fifo_496'.
Finding identical cells in module `\my_fifo_89'.
Finding identical cells in module `\port_bus_1to0_1'.
<suppressed ~12 debug messages>
Finding identical cells in module `\quadintr_10_20'.
Finding identical cells in module `\quadintr_5_20'.
Finding identical cells in module `\scaler'.
Finding identical cells in module `\scl_h_fltr'.
Finding identical cells in module `\scl_v_fltr'.
Finding identical cells in module `\sh_reg_1'.
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
<suppressed ~33 debug messages>
Finding identical cells in module `\v_fltr_316'.
Finding identical cells in module `\v_fltr_496'.
Finding identical cells in module `\wrapper_qs_intr_10_20'.
Finding identical cells in module `\wrapper_qs_intr_5_20'.
Removed a total of 15 cells.

11.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$1936 ($dff) from module combine_res (D = \din_3, Q = \din_3_reg).
Adding EN signal on $procdff$1935 ($dff) from module combine_res (D = \din_2, Q = \din_2_reg).
Adding EN signal on $procdff$1934 ($dff) from module combine_res (D = { \din_1 [7] \din_1 }, Q = \din_1_reg).
Adding EN signal on $procdff$1933 ($dff) from module combine_res (D = \dout_reg, Q = \dout).
Adding EN signal on $procdff$1961 ($dff) from module find_max (D = \indx_5_1, Q = \indx_out).
Adding EN signal on $procdff$1960 ($dff) from module find_max (D = \res_5_1 [10:3], Q = \d_out).
Setting constant 0-bit at position 0 on $procdff$1995 ($dff) from module find_max.
Setting constant 0-bit at position 1 on $procdff$1995 ($dff) from module find_max.
Setting constant 1-bit at position 2 on $procdff$1995 ($dff) from module find_max.
Setting constant 0-bit at position 3 on $procdff$1995 ($dff) from module find_max.
Setting constant 1-bit at position 4 on $procdff$1995 ($dff) from module find_max.
Adding EN signal on $procdff$2013 ($dff) from module lp_fltr (D = \din_tmp_2, Q = \din_tmp_3).
Adding EN signal on $procdff$2012 ($dff) from module lp_fltr (D = \din_tmp_1, Q = \din_tmp_2).
Adding EN signal on $procdff$2011 ($dff) from module lp_fltr (D = \din, Q = \din_tmp_1).
Adding EN signal on $procdff$2008 ($dff) from module lp_fltr (D = \add_tmp_2 [9:2], Q = \dout).
Setting constant 0-bit at position 0 on $procdff$2015 ($dff) from module lp_fltr.
Adding EN signal on $procdff$2021 ($dff) from module lp_fltr_v1 (D = \add_tmp_2 [9:2], Q = \dout_2).
Adding EN signal on $procdff$2020 ($dff) from module lp_fltr_v1 (D = \din, Q = \dout_1).
Adding EN signal on $procdff$2019 ($dff) from module lp_fltr_v1 (D = \buff_out_2, Q = \din_3_reg).
Adding EN signal on $procdff$2018 ($dff) from module lp_fltr_v1 (D = \buff_out_1, Q = \din_2_reg).
Adding EN signal on $procdff$2017 ($dff) from module lp_fltr_v1 (D = \din, Q = \din_1_reg).
Adding EN signal on $procdff$2028 ($dff) from module lp_fltr_v2 (D = \add_tmp_2 [9:2], Q = \dout_2).
Adding EN signal on $procdff$2027 ($dff) from module lp_fltr_v2 (D = \din, Q = \dout_1).
Adding EN signal on $procdff$2026 ($dff) from module lp_fltr_v2 (D = \buff_out_2, Q = \din_3_reg).
Adding EN signal on $procdff$2025 ($dff) from module lp_fltr_v2 (D = \buff_out_1, Q = \din_2_reg).
Adding EN signal on $procdff$2024 ($dff) from module lp_fltr_v2 (D = \din, Q = \din_1_reg).
Adding EN signal on $procdff$2035 ($dff) from module lp_fltr_v4 (D = \add_tmp_2 [9:2], Q = \dout_2).
Adding EN signal on $procdff$2034 ($dff) from module lp_fltr_v4 (D = \din, Q = \dout_1).
Adding EN signal on $procdff$2033 ($dff) from module lp_fltr_v4 (D = \buff_out_2, Q = \din_3_reg).
Adding EN signal on $procdff$2032 ($dff) from module lp_fltr_v4 (D = \buff_out_1, Q = \din_2_reg).
Adding EN signal on $procdff$2031 ($dff) from module lp_fltr_v4 (D = \din, Q = \din_1_reg).
Adding EN signal on $procdff$2040 ($dff) from module my_fifo_1 (D = \buff1, Q = \buff2).
Adding EN signal on $procdff$2039 ($dff) from module my_fifo_1 (D = \din, Q = \buff1).
Adding EN signal on $procdff$2038 ($dff) from module my_fifo_1 (D = \buff2, Q = \dout).
Adding EN signal on $procdff$2043 ($dff) from module my_fifo_179 (D = \buff1, Q = \buff2).
Adding EN signal on $procdff$2042 ($dff) from module my_fifo_179 (D = \din, Q = \buff1).
Adding EN signal on $procdff$2041 ($dff) from module my_fifo_179 (D = \buff2, Q = \dout).
Adding EN signal on $procdff$2046 ($dff) from module my_fifo_2 (D = \buff1, Q = \buff2).
Adding EN signal on $procdff$2045 ($dff) from module my_fifo_2 (D = \din, Q = \buff1).
Adding EN signal on $procdff$2044 ($dff) from module my_fifo_2 (D = \buff2, Q = \dout).
Adding EN signal on $procdff$2049 ($dff) from module my_fifo_316 (D = \buff1, Q = \buff2).
Adding EN signal on $procdff$2048 ($dff) from module my_fifo_316 (D = \din, Q = \buff1).
Adding EN signal on $procdff$2047 ($dff) from module my_fifo_316 (D = \buff2, Q = \dout).
Adding EN signal on $procdff$2052 ($dff) from module my_fifo_359 (D = \buff1, Q = \buff2).
Adding EN signal on $procdff$2051 ($dff) from module my_fifo_359 (D = \din, Q = \buff1).
Adding EN signal on $procdff$2050 ($dff) from module my_fifo_359 (D = \buff2, Q = \dout).
Adding EN signal on $procdff$2055 ($dff) from module my_fifo_496 (D = \buff1, Q = \buff2).
Adding EN signal on $procdff$2054 ($dff) from module my_fifo_496 (D = \din, Q = \buff1).
Adding EN signal on $procdff$2053 ($dff) from module my_fifo_496 (D = \buff2, Q = \dout).
Adding EN signal on $procdff$2058 ($dff) from module my_fifo_89 (D = \buff1, Q = \buff2).
Adding EN signal on $procdff$2057 ($dff) from module my_fifo_89 (D = \din, Q = \buff1).
Adding EN signal on $procdff$2056 ($dff) from module my_fifo_89 (D = \buff2, Q = \dout).
Adding EN signal on $procdff$2112 ($dff) from module port_bus_1to0_1 (D = \v_corr_20_tmp2, Q = \v_corr_202).
Adding EN signal on $procdff$2111 ($dff) from module port_bus_1to0_1 (D = \v_corr_20_tmp1, Q = \v_corr_201).
Adding EN signal on $procdff$2110 ($dff) from module port_bus_1to0_1 (D = \v_corr_20_tmp0, Q = \v_corr_200).
Adding SRST signal on $procdff$2109 ($dff) from module port_bus_1to0_1 (D = $procmux$877_Y, Q = \vidin_new_data_scld_4_1to0, rval = 1'0).
Adding SRST signal on $procdff$2108 ($dff) from module port_bus_1to0_1 (D = $procmux$888_Y, Q = \vidin_new_data_scld_2_1to0, rval = 1'0).
Adding SRST signal on $procdff$2107 ($dff) from module port_bus_1to0_1 (D = $procmux$896_Y, Q = \vidin_new_data_scld_1_1to0, rval = 1'0).
Adding EN signal on $procdff$2106 ($dff) from module port_bus_1to0_1 (D = \vidin_addr_reg_tmp, Q = \vidin_addr_reg).
Adding EN signal on $procdff$2098 ($dff) from module port_bus_1to0_1 (D = \bus_word_3_tmp, Q = \v_corr_5_tmp5).
Adding EN signal on $procdff$2097 ($dff) from module port_bus_1to0_1 (D = \bus_word_2_tmp, Q = \v_corr_5_tmp4).
Adding EN signal on $procdff$2096 ($dff) from module port_bus_1to0_1 (D = \bus_word_1_tmp, Q = \v_corr_5_tmp3).
Adding EN signal on $procdff$2095 ($dff) from module port_bus_1to0_1 (D = \bus_word_6_tmp, Q = \v_corr_5_tmp2).
Adding EN signal on $procdff$2094 ($dff) from module port_bus_1to0_1 (D = \bus_word_5_tmp, Q = \v_corr_5_tmp1).
Adding EN signal on $procdff$2093 ($dff) from module port_bus_1to0_1 (D = \bus_word_4_tmp, Q = \v_corr_5_tmp0).
Adding EN signal on $procdff$2092 ($dff) from module port_bus_1to0_1 (D = \bus_word_2_tmp, Q = \v_corr_10_tmp10).
Adding EN signal on $procdff$2091 ($dff) from module port_bus_1to0_1 (D = \bus_word_1_tmp, Q = \v_corr_10_tmp9).
Adding EN signal on $procdff$2090 ($dff) from module port_bus_1to0_1 (D = \bus_word_6_tmp, Q = \v_corr_10_tmp8).
Adding EN signal on $procdff$2089 ($dff) from module port_bus_1to0_1 (D = \bus_word_5_tmp, Q = \v_corr_10_tmp7).
Adding EN signal on $procdff$2088 ($dff) from module port_bus_1to0_1 (D = \bus_word_4_tmp, Q = \v_corr_10_tmp6).
Adding EN signal on $procdff$2087 ($dff) from module port_bus_1to0_1 (D = \bus_word_3_tmp, Q = \v_corr_10_tmp5).
Adding EN signal on $procdff$2086 ($dff) from module port_bus_1to0_1 (D = \bus_word_2_tmp, Q = \v_corr_10_tmp4).
Adding EN signal on $procdff$2085 ($dff) from module port_bus_1to0_1 (D = \bus_word_1_tmp, Q = \v_corr_10_tmp3).
Adding EN signal on $procdff$2084 ($dff) from module port_bus_1to0_1 (D = \bus_word_6_tmp, Q = \v_corr_10_tmp2).
Adding EN signal on $procdff$2083 ($dff) from module port_bus_1to0_1 (D = \bus_word_5_tmp, Q = \v_corr_10_tmp1).
Adding EN signal on $procdff$2082 ($dff) from module port_bus_1to0_1 (D = \bus_word_4_tmp, Q = \v_corr_10_tmp0).
Adding EN signal on $procdff$2081 ($dff) from module port_bus_1to0_1 (D = \bus_word_5_tmp, Q = \v_corr_20_tmp20).
Adding EN signal on $procdff$2080 ($dff) from module port_bus_1to0_1 (D = \bus_word_4_tmp, Q = \v_corr_20_tmp19).
Adding EN signal on $procdff$2079 ($dff) from module port_bus_1to0_1 (D = \bus_word_3_tmp, Q = \v_corr_20_tmp18).
Adding EN signal on $procdff$2078 ($dff) from module port_bus_1to0_1 (D = \bus_word_2_tmp, Q = \v_corr_20_tmp17).
Adding EN signal on $procdff$2077 ($dff) from module port_bus_1to0_1 (D = \bus_word_1_tmp, Q = \v_corr_20_tmp16).
Adding EN signal on $procdff$2076 ($dff) from module port_bus_1to0_1 (D = \bus_word_6_tmp, Q = \v_corr_20_tmp15).
Adding EN signal on $procdff$2075 ($dff) from module port_bus_1to0_1 (D = \bus_word_5_tmp, Q = \v_corr_20_tmp14).
Adding EN signal on $procdff$2074 ($dff) from module port_bus_1to0_1 (D = \bus_word_4_tmp, Q = \v_corr_20_tmp13).
Adding EN signal on $procdff$2073 ($dff) from module port_bus_1to0_1 (D = \bus_word_3_tmp, Q = \v_corr_20_tmp12).
Adding EN signal on $procdff$2072 ($dff) from module port_bus_1to0_1 (D = \bus_word_2_tmp, Q = \v_corr_20_tmp11).
Adding EN signal on $procdff$2071 ($dff) from module port_bus_1to0_1 (D = \bus_word_1_tmp, Q = \v_corr_20_tmp10).
Adding EN signal on $procdff$2070 ($dff) from module port_bus_1to0_1 (D = \bus_word_6_tmp, Q = \v_corr_20_tmp9).
Adding EN signal on $procdff$2069 ($dff) from module port_bus_1to0_1 (D = \bus_word_5_tmp, Q = \v_corr_20_tmp8).
Adding EN signal on $procdff$2068 ($dff) from module port_bus_1to0_1 (D = \bus_word_4_tmp, Q = \v_corr_20_tmp7).
Adding EN signal on $procdff$2067 ($dff) from module port_bus_1to0_1 (D = \bus_word_3_tmp, Q = \v_corr_20_tmp6).
Adding EN signal on $procdff$2066 ($dff) from module port_bus_1to0_1 (D = \bus_word_2_tmp, Q = \v_corr_20_tmp5).
Adding EN signal on $procdff$2065 ($dff) from module port_bus_1to0_1 (D = \bus_word_1_tmp, Q = \v_corr_20_tmp4).
Adding EN signal on $procdff$2064 ($dff) from module port_bus_1to0_1 (D = \bus_word_6_tmp, Q = \v_corr_20_tmp3).
Adding EN signal on $procdff$2063 ($dff) from module port_bus_1to0_1 (D = \bus_word_5_tmp, Q = \v_corr_20_tmp2).
Adding EN signal on $procdff$2062 ($dff) from module port_bus_1to0_1 (D = \bus_word_4_tmp, Q = \v_corr_20_tmp1).
Adding EN signal on $procdff$2061 ($dff) from module port_bus_1to0_1 (D = \bus_word_3_tmp, Q = \v_corr_20_tmp0).
Adding EN signal on $procdff$2060 ($dff) from module port_bus_1to0_1 (D = \bus_word_3_tmp [4], Q = \svid_comp_switch_tmp).
Adding EN signal on $procdff$2059 ($dff) from module port_bus_1to0_1 (D = \bus_word_3_tmp [7:5], Q = \vidin_addr_reg_tmp [18:16]).
Adding EN signal on $procdff$2059 ($dff) from module port_bus_1to0_1 (D = \bus_word_2_tmp, Q = \vidin_addr_reg_tmp [15:8]).
Adding EN signal on $procdff$2059 ($dff) from module port_bus_1to0_1 (D = \bus_word_1_tmp, Q = \vidin_addr_reg_tmp [7:0]).
Adding EN signal on $procdff$2148 ($dff) from module port_bus_1to0_1 (D = \svid_comp_switch_tmp, Q = \svid_comp_switch).
Adding EN signal on $procdff$2147 ($dff) from module port_bus_1to0_1 (D = \v_corr_5_tmp5, Q = \v_corr_55).
Adding EN signal on $procdff$2146 ($dff) from module port_bus_1to0_1 (D = \v_corr_5_tmp4, Q = \v_corr_54).
Adding EN signal on $procdff$2145 ($dff) from module port_bus_1to0_1 (D = \v_corr_5_tmp3, Q = \v_corr_53).
Adding EN signal on $procdff$2144 ($dff) from module port_bus_1to0_1 (D = \v_corr_5_tmp2, Q = \v_corr_52).
Adding EN signal on $procdff$2143 ($dff) from module port_bus_1to0_1 (D = \v_corr_5_tmp1, Q = \v_corr_51).
Adding EN signal on $procdff$2142 ($dff) from module port_bus_1to0_1 (D = \v_corr_5_tmp0, Q = \v_corr_50).
Adding EN signal on $procdff$2141 ($dff) from module port_bus_1to0_1 (D = \v_corr_10_tmp10, Q = \v_corr_1010).
Adding EN signal on $procdff$2140 ($dff) from module port_bus_1to0_1 (D = \v_corr_10_tmp9, Q = \v_corr_109).
Adding EN signal on $procdff$2139 ($dff) from module port_bus_1to0_1 (D = \v_corr_10_tmp8, Q = \v_corr_108).
Adding EN signal on $procdff$2138 ($dff) from module port_bus_1to0_1 (D = \v_corr_10_tmp7, Q = \v_corr_107).
Adding EN signal on $procdff$2137 ($dff) from module port_bus_1to0_1 (D = \v_corr_10_tmp6, Q = \v_corr_106).
Adding EN signal on $procdff$2136 ($dff) from module port_bus_1to0_1 (D = \v_corr_10_tmp5, Q = \v_corr_105).
Adding EN signal on $procdff$2135 ($dff) from module port_bus_1to0_1 (D = \v_corr_10_tmp4, Q = \v_corr_104).
Adding EN signal on $procdff$2134 ($dff) from module port_bus_1to0_1 (D = \v_corr_10_tmp3, Q = \v_corr_103).
Adding EN signal on $procdff$2133 ($dff) from module port_bus_1to0_1 (D = \v_corr_10_tmp2, Q = \v_corr_102).
Adding EN signal on $procdff$2132 ($dff) from module port_bus_1to0_1 (D = \v_corr_10_tmp1, Q = \v_corr_101).
Adding EN signal on $procdff$2131 ($dff) from module port_bus_1to0_1 (D = \v_corr_10_tmp0, Q = \v_corr_100).
Adding EN signal on $procdff$2130 ($dff) from module port_bus_1to0_1 (D = \v_corr_20_tmp20, Q = \v_corr_2020).
Adding EN signal on $procdff$2129 ($dff) from module port_bus_1to0_1 (D = \v_corr_20_tmp19, Q = \v_corr_2019).
Adding EN signal on $procdff$2128 ($dff) from module port_bus_1to0_1 (D = \v_corr_20_tmp18, Q = \v_corr_2018).
Adding EN signal on $procdff$2127 ($dff) from module port_bus_1to0_1 (D = \v_corr_20_tmp17, Q = \v_corr_2017).
Adding EN signal on $procdff$2126 ($dff) from module port_bus_1to0_1 (D = \v_corr_20_tmp16, Q = \v_corr_2016).
Adding EN signal on $procdff$2125 ($dff) from module port_bus_1to0_1 (D = \v_corr_20_tmp15, Q = \v_corr_2015).
Adding EN signal on $procdff$2124 ($dff) from module port_bus_1to0_1 (D = \v_corr_20_tmp14, Q = \v_corr_2014).
Adding EN signal on $procdff$2123 ($dff) from module port_bus_1to0_1 (D = \v_corr_20_tmp13, Q = \v_corr_2013).
Adding EN signal on $procdff$2122 ($dff) from module port_bus_1to0_1 (D = \v_corr_20_tmp12, Q = \v_corr_2012).
Adding EN signal on $procdff$2121 ($dff) from module port_bus_1to0_1 (D = \v_corr_20_tmp11, Q = \v_corr_2011).
Adding EN signal on $procdff$2120 ($dff) from module port_bus_1to0_1 (D = \v_corr_20_tmp10, Q = \v_corr_2010).
Adding EN signal on $procdff$2119 ($dff) from module port_bus_1to0_1 (D = \v_corr_20_tmp9, Q = \v_corr_209).
Adding EN signal on $procdff$2118 ($dff) from module port_bus_1to0_1 (D = \v_corr_20_tmp8, Q = \v_corr_208).
Adding EN signal on $procdff$2117 ($dff) from module port_bus_1to0_1 (D = \v_corr_20_tmp7, Q = \v_corr_207).
Adding EN signal on $procdff$2116 ($dff) from module port_bus_1to0_1 (D = \v_corr_20_tmp6, Q = \v_corr_206).
Adding EN signal on $procdff$2115 ($dff) from module port_bus_1to0_1 (D = \v_corr_20_tmp5, Q = \v_corr_205).
Adding EN signal on $procdff$2114 ($dff) from module port_bus_1to0_1 (D = \v_corr_20_tmp4, Q = \v_corr_204).
Adding EN signal on $procdff$2113 ($dff) from module port_bus_1to0_1 (D = \v_corr_20_tmp3, Q = \v_corr_203).
Adding EN signal on $procdff$2180 ($dff) from module quadintr_10_20 (D = \din10, Q = \dinr10).
Adding EN signal on $procdff$2179 ($dff) from module quadintr_10_20 (D = \din9, Q = \dinr9).
Adding EN signal on $procdff$2178 ($dff) from module quadintr_10_20 (D = \din8, Q = \dinr8).
Adding EN signal on $procdff$2177 ($dff) from module quadintr_10_20 (D = \din7, Q = \dinr7).
Adding EN signal on $procdff$2176 ($dff) from module quadintr_10_20 (D = \din6, Q = \dinr6).
Adding EN signal on $procdff$2175 ($dff) from module quadintr_10_20 (D = \din5, Q = \dinr5).
Adding EN signal on $procdff$2174 ($dff) from module quadintr_10_20 (D = \din4, Q = \dinr4).
Adding EN signal on $procdff$2173 ($dff) from module quadintr_10_20 (D = \din3, Q = \dinr3).
Adding EN signal on $procdff$2172 ($dff) from module quadintr_10_20 (D = \din2, Q = \dinr2).
Adding EN signal on $procdff$2171 ($dff) from module quadintr_10_20 (D = \din1, Q = \dinr1).
Adding EN signal on $procdff$2170 ($dff) from module quadintr_10_20 (D = \din0, Q = \dinr0).
Adding EN signal on $procdff$2169 ($dff) from module quadintr_10_20 (D = { \doutr20 [8] \doutr20 [8] \doutr20 [8] \doutr20 [8] \doutr20 [8] \doutr20 [8] \doutr20 [8] \doutr20 }, Q = \dout20).
Adding EN signal on $procdff$2168 ($dff) from module quadintr_10_20 (D = { \doutr19 [8] \doutr19 [8] \doutr19 [8] \doutr19 [8] \doutr19 [8] \doutr19 [8] \doutr19 [8] \doutr19 }, Q = \dout19).
Adding EN signal on $procdff$2167 ($dff) from module quadintr_10_20 (D = { \doutr18 [8] \doutr18 [8] \doutr18 [8] \doutr18 [8] \doutr18 [8] \doutr18 [8] \doutr18 [8] \doutr18 }, Q = \dout18).
Adding EN signal on $procdff$2166 ($dff) from module quadintr_10_20 (D = { \doutr17 [8] \doutr17 [8] \doutr17 [8] \doutr17 [8] \doutr17 [8] \doutr17 [8] \doutr17 [8] \doutr17 }, Q = \dout17).
Adding EN signal on $procdff$2165 ($dff) from module quadintr_10_20 (D = { \doutr16 [8] \doutr16 [8] \doutr16 [8] \doutr16 [8] \doutr16 [8] \doutr16 [8] \doutr16 [8] \doutr16 }, Q = \dout16).
Adding EN signal on $procdff$2164 ($dff) from module quadintr_10_20 (D = { \doutr15 [8] \doutr15 [8] \doutr15 [8] \doutr15 [8] \doutr15 [8] \doutr15 [8] \doutr15 [8] \doutr15 }, Q = \dout15).
Adding EN signal on $procdff$2163 ($dff) from module quadintr_10_20 (D = { \doutr14 [8] \doutr14 [8] \doutr14 [8] \doutr14 [8] \doutr14 [8] \doutr14 [8] \doutr14 [8] \doutr14 }, Q = \dout14).
Adding EN signal on $procdff$2162 ($dff) from module quadintr_10_20 (D = { \doutr13 [8] \doutr13 [8] \doutr13 [8] \doutr13 [8] \doutr13 [8] \doutr13 [8] \doutr13 [8] \doutr13 }, Q = \dout13).
Adding EN signal on $procdff$2161 ($dff) from module quadintr_10_20 (D = { \doutr12 [8] \doutr12 [8] \doutr12 [8] \doutr12 [8] \doutr12 [8] \doutr12 [8] \doutr12 [8] \doutr12 }, Q = \dout12).
Adding EN signal on $procdff$2160 ($dff) from module quadintr_10_20 (D = { \doutr11 [8] \doutr11 [8] \doutr11 [8] \doutr11 [8] \doutr11 [8] \doutr11 [8] \doutr11 [8] \doutr11 }, Q = \dout11).
Adding EN signal on $procdff$2159 ($dff) from module quadintr_10_20 (D = { \doutr10 [8] \doutr10 [8] \doutr10 [8] \doutr10 [8] \doutr10 [8] \doutr10 [8] \doutr10 [8] \doutr10 }, Q = \dout10).
Adding EN signal on $procdff$2158 ($dff) from module quadintr_10_20 (D = { \doutr9 [8] \doutr9 [8] \doutr9 [8] \doutr9 [8] \doutr9 [8] \doutr9 [8] \doutr9 [8] \doutr9 }, Q = \dout9).
Adding EN signal on $procdff$2157 ($dff) from module quadintr_10_20 (D = { \doutr8 [8] \doutr8 [8] \doutr8 [8] \doutr8 [8] \doutr8 [8] \doutr8 [8] \doutr8 [8] \doutr8 }, Q = \dout8).
Adding EN signal on $procdff$2156 ($dff) from module quadintr_10_20 (D = { \doutr7 [8] \doutr7 [8] \doutr7 [8] \doutr7 [8] \doutr7 [8] \doutr7 [8] \doutr7 [8] \doutr7 }, Q = \dout7).
Adding EN signal on $procdff$2155 ($dff) from module quadintr_10_20 (D = { \doutr6 [8] \doutr6 [8] \doutr6 [8] \doutr6 [8] \doutr6 [8] \doutr6 [8] \doutr6 [8] \doutr6 }, Q = \dout6).
Adding EN signal on $procdff$2154 ($dff) from module quadintr_10_20 (D = { \doutr5 [8] \doutr5 [8] \doutr5 [8] \doutr5 [8] \doutr5 [8] \doutr5 [8] \doutr5 [8] \doutr5 }, Q = \dout5).
Adding EN signal on $procdff$2153 ($dff) from module quadintr_10_20 (D = { \doutr4 [8] \doutr4 [8] \doutr4 [8] \doutr4 [8] \doutr4 [8] \doutr4 [8] \doutr4 [8] \doutr4 }, Q = \dout4).
Adding EN signal on $procdff$2152 ($dff) from module quadintr_10_20 (D = { \doutr3 [8] \doutr3 [8] \doutr3 [8] \doutr3 [8] \doutr3 [8] \doutr3 [8] \doutr3 [8] \doutr3 }, Q = \dout3).
Adding EN signal on $procdff$2151 ($dff) from module quadintr_10_20 (D = { \doutr2 [8] \doutr2 [8] \doutr2 [8] \doutr2 [8] \doutr2 [8] \doutr2 [8] \doutr2 [8] \doutr2 }, Q = \dout2).
Adding EN signal on $procdff$2150 ($dff) from module quadintr_10_20 (D = { \doutr1 [8] \doutr1 [8] \doutr1 [8] \doutr1 [8] \doutr1 [8] \doutr1 [8] \doutr1 [8] \doutr1 }, Q = \dout1).
Adding EN signal on $procdff$2149 ($dff) from module quadintr_10_20 (D = { \doutr0 [8] \doutr0 [8] \doutr0 [8] \doutr0 [8] \doutr0 [8] \doutr0 [8] \doutr0 [8] \doutr0 }, Q = \dout0).
Adding EN signal on $procdff$2268 ($dff) from module quadintr_5_20 (D = \din5, Q = \dinr5).
Adding EN signal on $procdff$2267 ($dff) from module quadintr_5_20 (D = \din4, Q = \dinr4).
Adding EN signal on $procdff$2266 ($dff) from module quadintr_5_20 (D = \din3, Q = \dinr3).
Adding EN signal on $procdff$2265 ($dff) from module quadintr_5_20 (D = \din2, Q = \dinr2).
Adding EN signal on $procdff$2264 ($dff) from module quadintr_5_20 (D = \din1, Q = \dinr1).
Adding EN signal on $procdff$2263 ($dff) from module quadintr_5_20 (D = \din0, Q = \dinr0).
Adding EN signal on $procdff$2262 ($dff) from module quadintr_5_20 (D = { \doutr20 [8] \doutr20 [8] \doutr20 [8] \doutr20 [8] \doutr20 [8] \doutr20 [8] \doutr20 [8] \doutr20 }, Q = \dout20).
Adding EN signal on $procdff$2261 ($dff) from module quadintr_5_20 (D = { \doutr19 [8] \doutr19 [8] \doutr19 [8] \doutr19 [8] \doutr19 [8] \doutr19 [8] \doutr19 [8] \doutr19 }, Q = \dout19).
Adding EN signal on $procdff$2260 ($dff) from module quadintr_5_20 (D = { \doutr18 [8] \doutr18 [8] \doutr18 [8] \doutr18 [8] \doutr18 [8] \doutr18 [8] \doutr18 [8] \doutr18 }, Q = \dout18).
Adding EN signal on $procdff$2259 ($dff) from module quadintr_5_20 (D = { \doutr17 [8] \doutr17 [8] \doutr17 [8] \doutr17 [8] \doutr17 [8] \doutr17 [8] \doutr17 [8] \doutr17 }, Q = \dout17).
Adding EN signal on $procdff$2258 ($dff) from module quadintr_5_20 (D = { \doutr16 [8] \doutr16 [8] \doutr16 [8] \doutr16 [8] \doutr16 [8] \doutr16 [8] \doutr16 [8] \doutr16 }, Q = \dout16).
Adding EN signal on $procdff$2257 ($dff) from module quadintr_5_20 (D = { \doutr15 [8] \doutr15 [8] \doutr15 [8] \doutr15 [8] \doutr15 [8] \doutr15 [8] \doutr15 [8] \doutr15 }, Q = \dout15).
Adding EN signal on $procdff$2256 ($dff) from module quadintr_5_20 (D = { \doutr14 [8] \doutr14 [8] \doutr14 [8] \doutr14 [8] \doutr14 [8] \doutr14 [8] \doutr14 [8] \doutr14 }, Q = \dout14).
Adding EN signal on $procdff$2255 ($dff) from module quadintr_5_20 (D = { \doutr13 [8] \doutr13 [8] \doutr13 [8] \doutr13 [8] \doutr13 [8] \doutr13 [8] \doutr13 [8] \doutr13 }, Q = \dout13).
Adding EN signal on $procdff$2254 ($dff) from module quadintr_5_20 (D = { \doutr12 [8] \doutr12 [8] \doutr12 [8] \doutr12 [8] \doutr12 [8] \doutr12 [8] \doutr12 [8] \doutr12 }, Q = \dout12).
Adding EN signal on $procdff$2253 ($dff) from module quadintr_5_20 (D = { \doutr11 [8] \doutr11 [8] \doutr11 [8] \doutr11 [8] \doutr11 [8] \doutr11 [8] \doutr11 [8] \doutr11 }, Q = \dout11).
Adding EN signal on $procdff$2252 ($dff) from module quadintr_5_20 (D = { \doutr10 [8] \doutr10 [8] \doutr10 [8] \doutr10 [8] \doutr10 [8] \doutr10 [8] \doutr10 [8] \doutr10 }, Q = \dout10).
Adding EN signal on $procdff$2251 ($dff) from module quadintr_5_20 (D = { \doutr9 [8] \doutr9 [8] \doutr9 [8] \doutr9 [8] \doutr9 [8] \doutr9 [8] \doutr9 [8] \doutr9 }, Q = \dout9).
Adding EN signal on $procdff$2250 ($dff) from module quadintr_5_20 (D = { \doutr8 [8] \doutr8 [8] \doutr8 [8] \doutr8 [8] \doutr8 [8] \doutr8 [8] \doutr8 [8] \doutr8 }, Q = \dout8).
Adding EN signal on $procdff$2249 ($dff) from module quadintr_5_20 (D = { \doutr7 [8] \doutr7 [8] \doutr7 [8] \doutr7 [8] \doutr7 [8] \doutr7 [8] \doutr7 [8] \doutr7 }, Q = \dout7).
Adding EN signal on $procdff$2248 ($dff) from module quadintr_5_20 (D = { \doutr6 [8] \doutr6 [8] \doutr6 [8] \doutr6 [8] \doutr6 [8] \doutr6 [8] \doutr6 [8] \doutr6 }, Q = \dout6).
Adding EN signal on $procdff$2247 ($dff) from module quadintr_5_20 (D = { \doutr5 [8] \doutr5 [8] \doutr5 [8] \doutr5 [8] \doutr5 [8] \doutr5 [8] \doutr5 [8] \doutr5 }, Q = \dout5).
Adding EN signal on $procdff$2246 ($dff) from module quadintr_5_20 (D = { \doutr4 [8] \doutr4 [8] \doutr4 [8] \doutr4 [8] \doutr4 [8] \doutr4 [8] \doutr4 [8] \doutr4 }, Q = \dout4).
Adding EN signal on $procdff$2245 ($dff) from module quadintr_5_20 (D = { \doutr3 [8] \doutr3 [8] \doutr3 [8] \doutr3 [8] \doutr3 [8] \doutr3 [8] \doutr3 [8] \doutr3 }, Q = \dout3).
Adding EN signal on $procdff$2244 ($dff) from module quadintr_5_20 (D = { \doutr2 [8] \doutr2 [8] \doutr2 [8] \doutr2 [8] \doutr2 [8] \doutr2 [8] \doutr2 [8] \doutr2 }, Q = \dout2).
Adding EN signal on $procdff$2243 ($dff) from module quadintr_5_20 (D = { \doutr1 [8] \doutr1 [8] \doutr1 [8] \doutr1 [8] \doutr1 [8] \doutr1 [8] \doutr1 [8] \doutr1 }, Q = \dout1).
Adding EN signal on $procdff$2242 ($dff) from module quadintr_5_20 (D = { \doutr0 [8] \doutr0 [8] \doutr0 [8] \doutr0 [8] \doutr0 [8] \doutr0 [8] \doutr0 [8] \doutr0 }, Q = \dout0).
Adding EN signal on $procdff$2366 ($dff) from module scaler (D = \h_fltr_sc_4, Q = \vidin_gray_scld_4).
Adding EN signal on $procdff$2365 ($dff) from module scaler (D = \h_fltr_sc_2, Q = \vidin_gray_scld_2).
Adding EN signal on $procdff$2364 ($dff) from module scaler (D = \h_fltr_sc_1, Q = \vidin_gray_scld_1).
Adding SRST signal on $procdff$2363 ($dff) from module scaler (D = $procmux$1225_Y, Q = \vidin_new_data_scld_4, rval = 1'0).
Adding SRST signal on $procdff$2362 ($dff) from module scaler (D = $procmux$1233_Y, Q = \vidin_new_data_scld_2, rval = 1'0).
Adding EN signal on $procdff$2391 ($dff) from module scl_h_fltr (D = \buff_out_47, Q = \buff_out_reg_47).
Adding EN signal on $procdff$2390 ($dff) from module scl_h_fltr (D = \buff_out_46, Q = \buff_out_reg_46).
Adding EN signal on $procdff$2389 ($dff) from module scl_h_fltr (D = \buff_out_45, Q = \buff_out_reg_45).
Adding EN signal on $procdff$2388 ($dff) from module scl_h_fltr (D = \buff_out_44, Q = \buff_out_reg_44).
Adding EN signal on $procdff$2387 ($dff) from module scl_h_fltr (D = \buff_out_43, Q = \buff_out_reg_43).
Adding EN signal on $procdff$2386 ($dff) from module scl_h_fltr (D = \buff_out_42, Q = \buff_out_reg_42).
Adding EN signal on $procdff$2385 ($dff) from module scl_h_fltr (D = \buff_out_41, Q = \buff_out_reg_41).
Adding EN signal on $procdff$2384 ($dff) from module scl_h_fltr (D = \buff_out_23, Q = \buff_out_reg_23).
Adding EN signal on $procdff$2383 ($dff) from module scl_h_fltr (D = \buff_out_22, Q = \buff_out_reg_22).
Adding EN signal on $procdff$2382 ($dff) from module scl_h_fltr (D = \buff_out_21, Q = \buff_out_reg_21).
Adding EN signal on $procdff$2369 ($dff) from module scl_h_fltr (D = \add_4_tmp [11:4], Q = \d_out_4).
Adding EN signal on $procdff$2368 ($dff) from module scl_h_fltr (D = \add_2_tmp [9:2], Q = \d_out_2).
Adding EN signal on $procdff$2367 ($dff) from module scl_h_fltr (D = \d_in_1, Q = \d_out_1).
Setting constant 0-bit at position 0 on $procdff$2371 ($dff) from module scl_h_fltr.
Setting constant 0-bit at position 9 on $procdff$2371 ($dff) from module scl_h_fltr.
Setting constant 0-bit at position 0 on $procdff$2377 ($dff) from module scl_h_fltr.
Setting constant 0-bit at position 1 on $procdff$2377 ($dff) from module scl_h_fltr.
Setting constant 0-bit at position 10 on $procdff$2377 ($dff) from module scl_h_fltr.
Setting constant 0-bit at position 11 on $procdff$2377 ($dff) from module scl_h_fltr.
Adding EN signal on $procdff$2401 ($dff) from module scl_v_fltr (D = \buff_out7, Q = \buff_out_reg7).
Adding EN signal on $procdff$2400 ($dff) from module scl_v_fltr (D = \buff_out6, Q = \buff_out_reg6).
Adding EN signal on $procdff$2399 ($dff) from module scl_v_fltr (D = \buff_out5, Q = \buff_out_reg5).
Adding EN signal on $procdff$2398 ($dff) from module scl_v_fltr (D = \buff_out4, Q = \buff_out_reg4).
Adding EN signal on $procdff$2397 ($dff) from module scl_v_fltr (D = \buff_out3, Q = \buff_out_reg3).
Adding EN signal on $procdff$2396 ($dff) from module scl_v_fltr (D = \buff_out2, Q = \buff_out_reg2).
Adding EN signal on $procdff$2395 ($dff) from module scl_v_fltr (D = \buff_out1, Q = \buff_out_reg1).
Adding EN signal on $procdff$2394 ($dff) from module scl_v_fltr (D = \add_4_tmp [11:4], Q = \d_out_4).
Adding EN signal on $procdff$2393 ($dff) from module scl_v_fltr (D = \add_2_tmp [9:2], Q = \d_out_2).
Adding EN signal on $procdff$2392 ($dff) from module scl_v_fltr (D = \buff_out_reg1, Q = \d_out_1).
Setting constant 0-bit at position 0 on $procdff$2403 ($dff) from module scl_v_fltr.
Setting constant 0-bit at position 9 on $procdff$2403 ($dff) from module scl_v_fltr.
Setting constant 0-bit at position 0 on $procdff$2409 ($dff) from module scl_v_fltr.
Setting constant 0-bit at position 1 on $procdff$2409 ($dff) from module scl_v_fltr.
Setting constant 0-bit at position 10 on $procdff$2409 ($dff) from module scl_v_fltr.
Setting constant 0-bit at position 11 on $procdff$2409 ($dff) from module scl_v_fltr.
Adding EN signal on $procdff$2414 ($dff) from module sh_reg_1 (D = \din_1, Q = \dout_1).
Adding EN signal on $procdff$2465 ($dff) from module sv_chip0_hierarchy_no_mem (D = { 4'0010 \svid_comp_switch_2to3 \vidin_addr_reg_2to3_reg [16:3] }, Q = \vidin_addr_buf_sc_4).
Adding EN signal on $procdff$2464 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1319_Y, Q = \vidin_data_buf_2_sc_4 [55:48]).
Adding EN signal on $procdff$2464 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1326_Y, Q = \vidin_data_buf_2_sc_4 [47:40]).
Adding EN signal on $procdff$2464 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1348_Y, Q = \vidin_data_buf_2_sc_4 [39:32]).
Adding EN signal on $procdff$2464 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1373_Y, Q = \vidin_data_buf_2_sc_4 [31:24]).
Adding EN signal on $procdff$2464 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1401_Y, Q = \vidin_data_buf_2_sc_4 [23:16]).
Adding EN signal on $procdff$2464 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1432_Y, Q = \vidin_data_buf_2_sc_4 [15:8]).
Adding EN signal on $procdff$2464 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1466_Y, Q = \vidin_data_buf_2_sc_4 [7:0]).
Adding EN signal on $procdff$2463 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1525_Y, Q = \vidin_data_buf_sc_4).
Adding EN signal on $procdff$2462 ($dff) from module sv_chip0_hierarchy_no_mem (D = { 4'0001 \svid_comp_switch_2to3 \vidin_addr_reg_2to3_reg [16:3] }, Q = \vidin_addr_buf_sc_2).
Adding EN signal on $procdff$2461 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1536_Y, Q = \vidin_data_buf_2_sc_2 [55:48]).
Adding EN signal on $procdff$2461 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1333_Y, Q = \vidin_data_buf_2_sc_2 [47:40]).
Adding EN signal on $procdff$2461 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1356_Y, Q = \vidin_data_buf_2_sc_2 [39:32]).
Adding EN signal on $procdff$2461 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1382_Y, Q = \vidin_data_buf_2_sc_2 [31:24]).
Adding EN signal on $procdff$2461 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1411_Y, Q = \vidin_data_buf_2_sc_2 [23:16]).
Adding EN signal on $procdff$2461 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1443_Y, Q = \vidin_data_buf_2_sc_2 [15:8]).
Adding EN signal on $procdff$2461 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1478_Y, Q = \vidin_data_buf_2_sc_2 [7:0]).
Adding EN signal on $procdff$2460 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1541_Y, Q = \vidin_data_buf_sc_2).
Adding EN signal on $procdff$2459 ($dff) from module sv_chip0_hierarchy_no_mem (D = \offchip_sram_data_in, Q = \vidout_buf).
Adding EN signal on $procdff$2458 ($dff) from module sv_chip0_hierarchy_no_mem (D = { 4'0000 \svid_comp_switch_2to3 \vidin_addr_reg_2to3_reg [16:3] }, Q = \vidin_addr_buf_sc_1).
Adding EN signal on $procdff$2457 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1520_Y, Q = \vidin_data_buf_2_sc_1 [55:48]).
Adding EN signal on $procdff$2457 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1340_Y, Q = \vidin_data_buf_2_sc_1 [47:40]).
Adding EN signal on $procdff$2457 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1364_Y, Q = \vidin_data_buf_2_sc_1 [39:32]).
Adding EN signal on $procdff$2457 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1391_Y, Q = \vidin_data_buf_2_sc_1 [31:24]).
Adding EN signal on $procdff$2457 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1421_Y, Q = \vidin_data_buf_2_sc_1 [23:16]).
Adding EN signal on $procdff$2457 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1454_Y, Q = \vidin_data_buf_2_sc_1 [15:8]).
Adding EN signal on $procdff$2457 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1490_Y, Q = \vidin_data_buf_2_sc_1 [7:0]).
Adding EN signal on $procdff$2456 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1574_Y, Q = \vidin_data_buf_sc_1).
Adding EN signal on $procdff$2455 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1582_Y, Q = \vert).
Adding SRST signal on $auto$ff.cc:266:slice$2937 ($dffe) from module sv_chip0_hierarchy_no_mem (D = $add$stereovision0.v:849$54_Y [9:0], Q = \vert, rval = 10'0000000000).
Adding EN signal on $procdff$2454 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1590_Y, Q = \horiz).
Adding SRST signal on $auto$ff.cc:266:slice$2943 ($dffe) from module sv_chip0_hierarchy_no_mem (D = $add$stereovision0.v:854$55_Y [9:0], Q = \horiz, rval = 10'0000000000).
Adding EN signal on $procdff$2453 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1598_Y, Q = \depth_out_reg).
Adding EN signal on $procdff$2447 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1632_Y, Q = \tm3_vidout_blank).
Adding EN signal on $procdff$2446 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1638_Y, Q = \tm3_vidout_vsync).
Adding EN signal on $procdff$2445 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1644_Y, Q = \tm3_vidout_hsync).
Adding EN signal on $procdff$2444 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1652_Y, Q = \tm3_vidout_blue).
Adding EN signal on $procdff$2443 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1688_Y, Q = \tm3_vidout_green).
Adding EN signal on $procdff$2442 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1724_Y, Q = \tm3_vidout_red).
Adding SRST signal on $procdff$2440 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1563_Y, Q = \tm3_sram_oe, rval = 2'11).
Adding SRST signal on $procdff$2439 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1504_Y, Q = \tm3_sram_we, rval = 8'11111111).
Adding EN signal on $procdff$2438 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1757_Y, Q = \tm3_sram_addr).
Adding SRST signal on $procdff$2437 ($dff) from module sv_chip0_hierarchy_no_mem (D = $procmux$1496_Y, Q = \tm3_sram_data_xhdl0, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $procdff$2436 ($dff) from module sv_chip0_hierarchy_no_mem (D = \v_d_reg_s4_right_2to0_tmp, Q = \v_d_reg_s4_right_2to0).
Adding EN signal on $procdff$2435 ($dff) from module sv_chip0_hierarchy_no_mem (D = \v_d_reg_s2_right_2to0_fifo_tmp, Q = \v_d_reg_s2_right_2to0).
Adding EN signal on $procdff$2434 ($dff) from module sv_chip0_hierarchy_no_mem (D = \v_d_reg_s1_right_2to0_fifo_tmp, Q = \v_d_reg_s1_right_2to0).
Adding EN signal on $procdff$2430 ($dff) from module sv_chip0_hierarchy_no_mem (D = \v_d_reg_s4_left_2to0_tmp, Q = \v_d_reg_s4_left_2to0).
Adding EN signal on $procdff$2429 ($dff) from module sv_chip0_hierarchy_no_mem (D = \v_d_reg_s2_left_2to0_fifo_tmp, Q = \v_d_reg_s2_left_2to0).
Adding EN signal on $procdff$2428 ($dff) from module sv_chip0_hierarchy_no_mem (D = \v_d_reg_s1_left_2to0_fifo_tmp, Q = \v_d_reg_s1_left_2to0).
Setting constant 0-bit at position 0 on $procdff$2423 ($dff) from module sv_chip0_hierarchy_no_mem.
Setting constant 0-bit at position 1 on $procdff$2423 ($dff) from module sv_chip0_hierarchy_no_mem.
Setting constant 0-bit at position 2 on $procdff$2423 ($dff) from module sv_chip0_hierarchy_no_mem.
Setting constant 0-bit at position 8 on $procdff$2448 ($dff) from module sv_chip0_hierarchy_no_mem.
Setting constant 0-bit at position 9 on $procdff$2448 ($dff) from module sv_chip0_hierarchy_no_mem.
Setting constant 0-bit at position 10 on $procdff$2448 ($dff) from module sv_chip0_hierarchy_no_mem.
Setting constant 0-bit at position 11 on $procdff$2448 ($dff) from module sv_chip0_hierarchy_no_mem.
Setting constant 0-bit at position 12 on $procdff$2448 ($dff) from module sv_chip0_hierarchy_no_mem.
Setting constant 0-bit at position 13 on $procdff$2448 ($dff) from module sv_chip0_hierarchy_no_mem.
Setting constant 0-bit at position 14 on $procdff$2448 ($dff) from module sv_chip0_hierarchy_no_mem.
Setting constant 0-bit at position 15 on $procdff$2448 ($dff) from module sv_chip0_hierarchy_no_mem.
Setting constant 0-bit at position 15 on $auto$ff.cc:266:slice$2894 ($dffe) from module sv_chip0_hierarchy_no_mem.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$2894 ($dffe) from module sv_chip0_hierarchy_no_mem.
Setting constant 0-bit at position 17 on $auto$ff.cc:266:slice$2894 ($dffe) from module sv_chip0_hierarchy_no_mem.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$2894 ($dffe) from module sv_chip0_hierarchy_no_mem.
Setting constant 1-bit at position 15 on $auto$ff.cc:266:slice$2848 ($dffe) from module sv_chip0_hierarchy_no_mem.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$2848 ($dffe) from module sv_chip0_hierarchy_no_mem.
Setting constant 0-bit at position 17 on $auto$ff.cc:266:slice$2848 ($dffe) from module sv_chip0_hierarchy_no_mem.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$2848 ($dffe) from module sv_chip0_hierarchy_no_mem.
Setting constant 0-bit at position 15 on $auto$ff.cc:266:slice$2805 ($dffe) from module sv_chip0_hierarchy_no_mem.
Setting constant 1-bit at position 16 on $auto$ff.cc:266:slice$2805 ($dffe) from module sv_chip0_hierarchy_no_mem.
Setting constant 0-bit at position 17 on $auto$ff.cc:266:slice$2805 ($dffe) from module sv_chip0_hierarchy_no_mem.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$2805 ($dffe) from module sv_chip0_hierarchy_no_mem.
Adding EN signal on $procdff$2508 ($dff) from module wrapper_qs_intr_10_20 (D = \tmy_ram20, Q = \my_ram20).
Adding EN signal on $procdff$2507 ($dff) from module wrapper_qs_intr_10_20 (D = \tmy_ram19, Q = \my_ram19).
Adding EN signal on $procdff$2506 ($dff) from module wrapper_qs_intr_10_20 (D = \tmy_ram18, Q = \my_ram18).
Adding EN signal on $procdff$2505 ($dff) from module wrapper_qs_intr_10_20 (D = \tmy_ram17, Q = \my_ram17).
Adding EN signal on $procdff$2504 ($dff) from module wrapper_qs_intr_10_20 (D = \tmy_ram16, Q = \my_ram16).
Adding EN signal on $procdff$2503 ($dff) from module wrapper_qs_intr_10_20 (D = \tmy_ram15, Q = \my_ram15).
Adding EN signal on $procdff$2502 ($dff) from module wrapper_qs_intr_10_20 (D = \tmy_ram14, Q = \my_ram14).
Adding EN signal on $procdff$2501 ($dff) from module wrapper_qs_intr_10_20 (D = \tmy_ram13, Q = \my_ram13).
Adding EN signal on $procdff$2500 ($dff) from module wrapper_qs_intr_10_20 (D = \tmy_ram12, Q = \my_ram12).
Adding EN signal on $procdff$2499 ($dff) from module wrapper_qs_intr_10_20 (D = \tmy_ram11, Q = \my_ram11).
Adding EN signal on $procdff$2498 ($dff) from module wrapper_qs_intr_10_20 (D = \tmy_ram10, Q = \my_ram10).
Adding EN signal on $procdff$2497 ($dff) from module wrapper_qs_intr_10_20 (D = \tmy_ram9, Q = \my_ram9).
Adding EN signal on $procdff$2496 ($dff) from module wrapper_qs_intr_10_20 (D = \tmy_ram8, Q = \my_ram8).
Adding EN signal on $procdff$2495 ($dff) from module wrapper_qs_intr_10_20 (D = \tmy_ram7, Q = \my_ram7).
Adding EN signal on $procdff$2494 ($dff) from module wrapper_qs_intr_10_20 (D = \tmy_ram6, Q = \my_ram6).
Adding EN signal on $procdff$2493 ($dff) from module wrapper_qs_intr_10_20 (D = \tmy_ram5, Q = \my_ram5).
Adding EN signal on $procdff$2492 ($dff) from module wrapper_qs_intr_10_20 (D = \tmy_ram4, Q = \my_ram4).
Adding EN signal on $procdff$2491 ($dff) from module wrapper_qs_intr_10_20 (D = \tmy_ram3, Q = \my_ram3).
Adding EN signal on $procdff$2490 ($dff) from module wrapper_qs_intr_10_20 (D = \tmy_ram2, Q = \my_ram2).
Adding EN signal on $procdff$2489 ($dff) from module wrapper_qs_intr_10_20 (D = \tmy_ram1, Q = \my_ram1).
Adding EN signal on $procdff$2488 ($dff) from module wrapper_qs_intr_10_20 (D = \tmy_ram0, Q = \my_ram0).
Adding EN signal on $procdff$2487 ($dff) from module wrapper_qs_intr_10_20 (D = \dout_tmp20, Q = \tmy_ram20).
Adding EN signal on $procdff$2486 ($dff) from module wrapper_qs_intr_10_20 (D = \dout_tmp19, Q = \tmy_ram19).
Adding EN signal on $procdff$2485 ($dff) from module wrapper_qs_intr_10_20 (D = \dout_tmp18, Q = \tmy_ram18).
Adding EN signal on $procdff$2484 ($dff) from module wrapper_qs_intr_10_20 (D = \dout_tmp17, Q = \tmy_ram17).
Adding EN signal on $procdff$2483 ($dff) from module wrapper_qs_intr_10_20 (D = \dout_tmp16, Q = \tmy_ram16).
Adding EN signal on $procdff$2482 ($dff) from module wrapper_qs_intr_10_20 (D = \dout_tmp15, Q = \tmy_ram15).
Adding EN signal on $procdff$2481 ($dff) from module wrapper_qs_intr_10_20 (D = \dout_tmp14, Q = \tmy_ram14).
Adding EN signal on $procdff$2480 ($dff) from module wrapper_qs_intr_10_20 (D = \dout_tmp13, Q = \tmy_ram13).
Adding EN signal on $procdff$2479 ($dff) from module wrapper_qs_intr_10_20 (D = \dout_tmp12, Q = \tmy_ram12).
Adding EN signal on $procdff$2478 ($dff) from module wrapper_qs_intr_10_20 (D = \dout_tmp11, Q = \tmy_ram11).
Adding EN signal on $procdff$2477 ($dff) from module wrapper_qs_intr_10_20 (D = \dout_tmp10, Q = \tmy_ram10).
Adding EN signal on $procdff$2476 ($dff) from module wrapper_qs_intr_10_20 (D = \dout_tmp9, Q = \tmy_ram9).
Adding EN signal on $procdff$2475 ($dff) from module wrapper_qs_intr_10_20 (D = \dout_tmp8, Q = \tmy_ram8).
Adding EN signal on $procdff$2474 ($dff) from module wrapper_qs_intr_10_20 (D = \dout_tmp7, Q = \tmy_ram7).
Adding EN signal on $procdff$2473 ($dff) from module wrapper_qs_intr_10_20 (D = \dout_tmp6, Q = \tmy_ram6).
Adding EN signal on $procdff$2472 ($dff) from module wrapper_qs_intr_10_20 (D = \dout_tmp5, Q = \tmy_ram5).
Adding EN signal on $procdff$2471 ($dff) from module wrapper_qs_intr_10_20 (D = \dout_tmp4, Q = \tmy_ram4).
Adding EN signal on $procdff$2470 ($dff) from module wrapper_qs_intr_10_20 (D = \dout_tmp3, Q = \tmy_ram3).
Adding EN signal on $procdff$2469 ($dff) from module wrapper_qs_intr_10_20 (D = \dout_tmp2, Q = \tmy_ram2).
Adding EN signal on $procdff$2468 ($dff) from module wrapper_qs_intr_10_20 (D = \dout_tmp1, Q = \tmy_ram1).
Adding EN signal on $procdff$2467 ($dff) from module wrapper_qs_intr_10_20 (D = \dout_tmp0, Q = \tmy_ram0).
Adding EN signal on $procdff$2550 ($dff) from module wrapper_qs_intr_5_20 (D = \tmy_ram20, Q = \my_ram20).
Adding EN signal on $procdff$2549 ($dff) from module wrapper_qs_intr_5_20 (D = \tmy_ram19, Q = \my_ram19).
Adding EN signal on $procdff$2548 ($dff) from module wrapper_qs_intr_5_20 (D = \tmy_ram18, Q = \my_ram18).
Adding EN signal on $procdff$2547 ($dff) from module wrapper_qs_intr_5_20 (D = \tmy_ram17, Q = \my_ram17).
Adding EN signal on $procdff$2546 ($dff) from module wrapper_qs_intr_5_20 (D = \tmy_ram16, Q = \my_ram16).
Adding EN signal on $procdff$2545 ($dff) from module wrapper_qs_intr_5_20 (D = \tmy_ram15, Q = \my_ram15).
Adding EN signal on $procdff$2544 ($dff) from module wrapper_qs_intr_5_20 (D = \tmy_ram14, Q = \my_ram14).
Adding EN signal on $procdff$2543 ($dff) from module wrapper_qs_intr_5_20 (D = \tmy_ram13, Q = \my_ram13).
Adding EN signal on $procdff$2542 ($dff) from module wrapper_qs_intr_5_20 (D = \tmy_ram12, Q = \my_ram12).
Adding EN signal on $procdff$2541 ($dff) from module wrapper_qs_intr_5_20 (D = \tmy_ram11, Q = \my_ram11).
Adding EN signal on $procdff$2540 ($dff) from module wrapper_qs_intr_5_20 (D = \tmy_ram10, Q = \my_ram10).
Adding EN signal on $procdff$2539 ($dff) from module wrapper_qs_intr_5_20 (D = \tmy_ram9, Q = \my_ram9).
Adding EN signal on $procdff$2538 ($dff) from module wrapper_qs_intr_5_20 (D = \tmy_ram8, Q = \my_ram8).
Adding EN signal on $procdff$2537 ($dff) from module wrapper_qs_intr_5_20 (D = \tmy_ram7, Q = \my_ram7).
Adding EN signal on $procdff$2536 ($dff) from module wrapper_qs_intr_5_20 (D = \tmy_ram6, Q = \my_ram6).
Adding EN signal on $procdff$2535 ($dff) from module wrapper_qs_intr_5_20 (D = \tmy_ram5, Q = \my_ram5).
Adding EN signal on $procdff$2534 ($dff) from module wrapper_qs_intr_5_20 (D = \tmy_ram4, Q = \my_ram4).
Adding EN signal on $procdff$2533 ($dff) from module wrapper_qs_intr_5_20 (D = \tmy_ram3, Q = \my_ram3).
Adding EN signal on $procdff$2532 ($dff) from module wrapper_qs_intr_5_20 (D = \tmy_ram2, Q = \my_ram2).
Adding EN signal on $procdff$2531 ($dff) from module wrapper_qs_intr_5_20 (D = \tmy_ram1, Q = \my_ram1).
Adding EN signal on $procdff$2530 ($dff) from module wrapper_qs_intr_5_20 (D = \tmy_ram0, Q = \my_ram0).
Adding EN signal on $procdff$2529 ($dff) from module wrapper_qs_intr_5_20 (D = \dout_tmp20, Q = \tmy_ram20).
Adding EN signal on $procdff$2528 ($dff) from module wrapper_qs_intr_5_20 (D = \dout_tmp19, Q = \tmy_ram19).
Adding EN signal on $procdff$2527 ($dff) from module wrapper_qs_intr_5_20 (D = \dout_tmp18, Q = \tmy_ram18).
Adding EN signal on $procdff$2526 ($dff) from module wrapper_qs_intr_5_20 (D = \dout_tmp17, Q = \tmy_ram17).
Adding EN signal on $procdff$2525 ($dff) from module wrapper_qs_intr_5_20 (D = \dout_tmp16, Q = \tmy_ram16).
Adding EN signal on $procdff$2524 ($dff) from module wrapper_qs_intr_5_20 (D = \dout_tmp15, Q = \tmy_ram15).
Adding EN signal on $procdff$2523 ($dff) from module wrapper_qs_intr_5_20 (D = \dout_tmp14, Q = \tmy_ram14).
Adding EN signal on $procdff$2522 ($dff) from module wrapper_qs_intr_5_20 (D = \dout_tmp13, Q = \tmy_ram13).
Adding EN signal on $procdff$2521 ($dff) from module wrapper_qs_intr_5_20 (D = \dout_tmp12, Q = \tmy_ram12).
Adding EN signal on $procdff$2520 ($dff) from module wrapper_qs_intr_5_20 (D = \dout_tmp11, Q = \tmy_ram11).
Adding EN signal on $procdff$2519 ($dff) from module wrapper_qs_intr_5_20 (D = \dout_tmp10, Q = \tmy_ram10).
Adding EN signal on $procdff$2518 ($dff) from module wrapper_qs_intr_5_20 (D = \dout_tmp9, Q = \tmy_ram9).
Adding EN signal on $procdff$2517 ($dff) from module wrapper_qs_intr_5_20 (D = \dout_tmp8, Q = \tmy_ram8).
Adding EN signal on $procdff$2516 ($dff) from module wrapper_qs_intr_5_20 (D = \dout_tmp7, Q = \tmy_ram7).
Adding EN signal on $procdff$2515 ($dff) from module wrapper_qs_intr_5_20 (D = \dout_tmp6, Q = \tmy_ram6).
Adding EN signal on $procdff$2514 ($dff) from module wrapper_qs_intr_5_20 (D = \dout_tmp5, Q = \tmy_ram5).
Adding EN signal on $procdff$2513 ($dff) from module wrapper_qs_intr_5_20 (D = \dout_tmp4, Q = \tmy_ram4).
Adding EN signal on $procdff$2512 ($dff) from module wrapper_qs_intr_5_20 (D = \dout_tmp3, Q = \tmy_ram3).
Adding EN signal on $procdff$2511 ($dff) from module wrapper_qs_intr_5_20 (D = \dout_tmp2, Q = \tmy_ram2).
Adding EN signal on $procdff$2510 ($dff) from module wrapper_qs_intr_5_20 (D = \dout_tmp1, Q = \tmy_ram1).
Adding EN signal on $procdff$2509 ($dff) from module wrapper_qs_intr_5_20 (D = \dout_tmp0, Q = \tmy_ram0).

11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \combine_res..
Finding unused cells or wires in module \find_max..
Finding unused cells or wires in module \lp_fltr..
Finding unused cells or wires in module \lp_fltr_v1..
Finding unused cells or wires in module \lp_fltr_v2..
Finding unused cells or wires in module \lp_fltr_v4..
Finding unused cells or wires in module \my_fifo_1..
Finding unused cells or wires in module \my_fifo_179..
Finding unused cells or wires in module \my_fifo_2..
Finding unused cells or wires in module \my_fifo_316..
Finding unused cells or wires in module \my_fifo_359..
Finding unused cells or wires in module \my_fifo_496..
Finding unused cells or wires in module \my_fifo_89..
Finding unused cells or wires in module \port_bus_1to0_1..
Finding unused cells or wires in module \quadintr_10_20..
Finding unused cells or wires in module \quadintr_5_20..
Finding unused cells or wires in module \scaler..
Finding unused cells or wires in module \scl_h_fltr..
Finding unused cells or wires in module \scl_v_fltr..
Finding unused cells or wires in module \sh_reg_1..
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..
Finding unused cells or wires in module \v_fltr_316..
Finding unused cells or wires in module \v_fltr_496..
Finding unused cells or wires in module \wrapper_qs_intr_10_20..
Finding unused cells or wires in module \wrapper_qs_intr_5_20..
Removed 406 unused cells and 502 unused wires.
<suppressed ~429 debug messages>

11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module combine_res.
Optimizing module find_max.
Optimizing module lp_fltr.
Optimizing module lp_fltr_v1.
Optimizing module lp_fltr_v2.
Optimizing module lp_fltr_v4.
Optimizing module my_fifo_1.
Optimizing module my_fifo_179.
Optimizing module my_fifo_2.
Optimizing module my_fifo_316.
Optimizing module my_fifo_359.
Optimizing module my_fifo_496.
Optimizing module my_fifo_89.
Optimizing module port_bus_1to0_1.
Optimizing module quadintr_10_20.
Optimizing module quadintr_5_20.
Optimizing module scaler.
Optimizing module scl_h_fltr.
Optimizing module scl_v_fltr.
Optimizing module sh_reg_1.
Optimizing module sv_chip0_hierarchy_no_mem.
<suppressed ~25 debug messages>
Optimizing module v_fltr_316.
Optimizing module v_fltr_496.
Optimizing module wrapper_qs_intr_10_20.
Optimizing module wrapper_qs_intr_5_20.

11.9. Rerunning OPT passes. (Maybe there is more to do..)

11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \combine_res..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \find_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lp_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_179..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_316..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_359..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_89..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \port_bus_1to0_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \quadintr_10_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \quadintr_5_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scaler..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scl_h_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scl_v_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sh_reg_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sv_chip0_hierarchy_no_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \v_fltr_316..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \v_fltr_496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wrapper_qs_intr_10_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wrapper_qs_intr_5_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~80 debug messages>

11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \combine_res.
  Optimizing cells in module \find_max.
  Optimizing cells in module \lp_fltr.
  Optimizing cells in module \lp_fltr_v1.
  Optimizing cells in module \lp_fltr_v2.
  Optimizing cells in module \lp_fltr_v4.
  Optimizing cells in module \my_fifo_1.
  Optimizing cells in module \my_fifo_179.
  Optimizing cells in module \my_fifo_2.
  Optimizing cells in module \my_fifo_316.
  Optimizing cells in module \my_fifo_359.
  Optimizing cells in module \my_fifo_496.
  Optimizing cells in module \my_fifo_89.
  Optimizing cells in module \port_bus_1to0_1.
  Optimizing cells in module \quadintr_10_20.
  Optimizing cells in module \quadintr_5_20.
  Optimizing cells in module \scaler.
  Optimizing cells in module \scl_h_fltr.
  Optimizing cells in module \scl_v_fltr.
  Optimizing cells in module \sh_reg_1.
  Optimizing cells in module \sv_chip0_hierarchy_no_mem.
  Optimizing cells in module \v_fltr_316.
  Optimizing cells in module \v_fltr_496.
  Optimizing cells in module \wrapper_qs_intr_10_20.
  Optimizing cells in module \wrapper_qs_intr_5_20.
Performed a total of 0 changes.

11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\combine_res'.
Finding identical cells in module `\find_max'.
Finding identical cells in module `\lp_fltr'.
Finding identical cells in module `\lp_fltr_v1'.
<suppressed ~3 debug messages>
Finding identical cells in module `\lp_fltr_v2'.
<suppressed ~3 debug messages>
Finding identical cells in module `\lp_fltr_v4'.
<suppressed ~3 debug messages>
Finding identical cells in module `\my_fifo_1'.
Finding identical cells in module `\my_fifo_179'.
Finding identical cells in module `\my_fifo_2'.
Finding identical cells in module `\my_fifo_316'.
Finding identical cells in module `\my_fifo_359'.
Finding identical cells in module `\my_fifo_496'.
Finding identical cells in module `\my_fifo_89'.
Finding identical cells in module `\port_bus_1to0_1'.
Finding identical cells in module `\quadintr_10_20'.
Finding identical cells in module `\quadintr_5_20'.
Finding identical cells in module `\scaler'.
<suppressed ~3 debug messages>
Finding identical cells in module `\scl_h_fltr'.
Finding identical cells in module `\scl_v_fltr'.
Finding identical cells in module `\sh_reg_1'.
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
<suppressed ~117 debug messages>
Finding identical cells in module `\v_fltr_316'.
Finding identical cells in module `\v_fltr_496'.
Finding identical cells in module `\wrapper_qs_intr_10_20'.
Finding identical cells in module `\wrapper_qs_intr_5_20'.
Removed a total of 43 cells.

11.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $procdff$2001 ($dff) from module find_max.
Setting constant 0-bit at position 1 on $procdff$2001 ($dff) from module find_max.
Setting constant 1-bit at position 2 on $procdff$2001 ($dff) from module find_max.
Setting constant 0-bit at position 3 on $procdff$2001 ($dff) from module find_max.
Setting constant 1-bit at position 4 on $procdff$2001 ($dff) from module find_max.

11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \combine_res..
Finding unused cells or wires in module \find_max..
Finding unused cells or wires in module \lp_fltr..
Finding unused cells or wires in module \lp_fltr_v1..
Finding unused cells or wires in module \lp_fltr_v2..
Finding unused cells or wires in module \lp_fltr_v4..
Finding unused cells or wires in module \my_fifo_1..
Finding unused cells or wires in module \my_fifo_179..
Finding unused cells or wires in module \my_fifo_2..
Finding unused cells or wires in module \my_fifo_316..
Finding unused cells or wires in module \my_fifo_359..
Finding unused cells or wires in module \my_fifo_496..
Finding unused cells or wires in module \my_fifo_89..
Finding unused cells or wires in module \port_bus_1to0_1..
Finding unused cells or wires in module \quadintr_10_20..
Finding unused cells or wires in module \quadintr_5_20..
Finding unused cells or wires in module \scaler..
Finding unused cells or wires in module \scl_h_fltr..
Finding unused cells or wires in module \scl_v_fltr..
Finding unused cells or wires in module \sh_reg_1..
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..
Finding unused cells or wires in module \v_fltr_316..
Finding unused cells or wires in module \v_fltr_496..
Finding unused cells or wires in module \wrapper_qs_intr_10_20..
Finding unused cells or wires in module \wrapper_qs_intr_5_20..
Removed 0 unused cells and 37 unused wires.
<suppressed ~2 debug messages>

11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module combine_res.
Optimizing module find_max.
Optimizing module lp_fltr.
Optimizing module lp_fltr_v1.
Optimizing module lp_fltr_v2.
Optimizing module lp_fltr_v4.
Optimizing module my_fifo_1.
Optimizing module my_fifo_179.
Optimizing module my_fifo_2.
Optimizing module my_fifo_316.
Optimizing module my_fifo_359.
Optimizing module my_fifo_496.
Optimizing module my_fifo_89.
Optimizing module port_bus_1to0_1.
Optimizing module quadintr_10_20.
Optimizing module quadintr_5_20.
Optimizing module scaler.
Optimizing module scl_h_fltr.
Optimizing module scl_v_fltr.
Optimizing module sh_reg_1.
Optimizing module sv_chip0_hierarchy_no_mem.
Optimizing module v_fltr_316.
Optimizing module v_fltr_496.
Optimizing module wrapper_qs_intr_10_20.
Optimizing module wrapper_qs_intr_5_20.

11.16. Rerunning OPT passes. (Maybe there is more to do..)

11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \combine_res..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \find_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lp_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_179..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_316..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_359..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_89..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \port_bus_1to0_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \quadintr_10_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \quadintr_5_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scaler..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scl_h_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scl_v_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sh_reg_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sv_chip0_hierarchy_no_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \v_fltr_316..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \v_fltr_496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wrapper_qs_intr_10_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wrapper_qs_intr_5_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~80 debug messages>

11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \combine_res.
  Optimizing cells in module \find_max.
  Optimizing cells in module \lp_fltr.
  Optimizing cells in module \lp_fltr_v1.
  Optimizing cells in module \lp_fltr_v2.
  Optimizing cells in module \lp_fltr_v4.
  Optimizing cells in module \my_fifo_1.
  Optimizing cells in module \my_fifo_179.
  Optimizing cells in module \my_fifo_2.
  Optimizing cells in module \my_fifo_316.
  Optimizing cells in module \my_fifo_359.
  Optimizing cells in module \my_fifo_496.
  Optimizing cells in module \my_fifo_89.
  Optimizing cells in module \port_bus_1to0_1.
  Optimizing cells in module \quadintr_10_20.
  Optimizing cells in module \quadintr_5_20.
  Optimizing cells in module \scaler.
  Optimizing cells in module \scl_h_fltr.
  Optimizing cells in module \scl_v_fltr.
  Optimizing cells in module \sh_reg_1.
  Optimizing cells in module \sv_chip0_hierarchy_no_mem.
  Optimizing cells in module \v_fltr_316.
  Optimizing cells in module \v_fltr_496.
  Optimizing cells in module \wrapper_qs_intr_10_20.
  Optimizing cells in module \wrapper_qs_intr_5_20.
Performed a total of 0 changes.

11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\combine_res'.
Finding identical cells in module `\find_max'.
Finding identical cells in module `\lp_fltr'.
Finding identical cells in module `\lp_fltr_v1'.
Finding identical cells in module `\lp_fltr_v2'.
Finding identical cells in module `\lp_fltr_v4'.
Finding identical cells in module `\my_fifo_1'.
Finding identical cells in module `\my_fifo_179'.
Finding identical cells in module `\my_fifo_2'.
Finding identical cells in module `\my_fifo_316'.
Finding identical cells in module `\my_fifo_359'.
Finding identical cells in module `\my_fifo_496'.
Finding identical cells in module `\my_fifo_89'.
Finding identical cells in module `\port_bus_1to0_1'.
Finding identical cells in module `\quadintr_10_20'.
Finding identical cells in module `\quadintr_5_20'.
Finding identical cells in module `\scaler'.
Finding identical cells in module `\scl_h_fltr'.
Finding identical cells in module `\scl_v_fltr'.
Finding identical cells in module `\sh_reg_1'.
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
Finding identical cells in module `\v_fltr_316'.
Finding identical cells in module `\v_fltr_496'.
Finding identical cells in module `\wrapper_qs_intr_10_20'.
Finding identical cells in module `\wrapper_qs_intr_5_20'.
Removed a total of 0 cells.

11.20. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$2004 ($dff) from module find_max (D = \indx_2_5, Q = \indx_3_3, rval = 5'10100).

11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \combine_res..
Finding unused cells or wires in module \find_max..
Finding unused cells or wires in module \lp_fltr..
Finding unused cells or wires in module \lp_fltr_v1..
Finding unused cells or wires in module \lp_fltr_v2..
Finding unused cells or wires in module \lp_fltr_v4..
Finding unused cells or wires in module \my_fifo_1..
Finding unused cells or wires in module \my_fifo_179..
Finding unused cells or wires in module \my_fifo_2..
Finding unused cells or wires in module \my_fifo_316..
Finding unused cells or wires in module \my_fifo_359..
Finding unused cells or wires in module \my_fifo_496..
Finding unused cells or wires in module \my_fifo_89..
Finding unused cells or wires in module \port_bus_1to0_1..
Finding unused cells or wires in module \quadintr_10_20..
Finding unused cells or wires in module \quadintr_5_20..
Finding unused cells or wires in module \scaler..
Finding unused cells or wires in module \scl_h_fltr..
Finding unused cells or wires in module \scl_v_fltr..
Finding unused cells or wires in module \sh_reg_1..
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..
Finding unused cells or wires in module \v_fltr_316..
Finding unused cells or wires in module \v_fltr_496..
Finding unused cells or wires in module \wrapper_qs_intr_10_20..
Finding unused cells or wires in module \wrapper_qs_intr_5_20..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module combine_res.
Optimizing module find_max.
Optimizing module lp_fltr.
Optimizing module lp_fltr_v1.
Optimizing module lp_fltr_v2.
Optimizing module lp_fltr_v4.
Optimizing module my_fifo_1.
Optimizing module my_fifo_179.
Optimizing module my_fifo_2.
Optimizing module my_fifo_316.
Optimizing module my_fifo_359.
Optimizing module my_fifo_496.
Optimizing module my_fifo_89.
Optimizing module port_bus_1to0_1.
Optimizing module quadintr_10_20.
Optimizing module quadintr_5_20.
Optimizing module scaler.
Optimizing module scl_h_fltr.
Optimizing module scl_v_fltr.
Optimizing module sh_reg_1.
Optimizing module sv_chip0_hierarchy_no_mem.
Optimizing module v_fltr_316.
Optimizing module v_fltr_496.
Optimizing module wrapper_qs_intr_10_20.
Optimizing module wrapper_qs_intr_5_20.

11.23. Rerunning OPT passes. (Maybe there is more to do..)

11.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \combine_res..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \find_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lp_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_179..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_316..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_359..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_89..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \port_bus_1to0_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \quadintr_10_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \quadintr_5_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scaler..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \scl_h_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scl_v_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sh_reg_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sv_chip0_hierarchy_no_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \v_fltr_316..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \v_fltr_496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wrapper_qs_intr_10_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wrapper_qs_intr_5_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~79 debug messages>

11.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \combine_res.
  Optimizing cells in module \find_max.
  Optimizing cells in module \lp_fltr.
  Optimizing cells in module \lp_fltr_v1.
  Optimizing cells in module \lp_fltr_v2.
  Optimizing cells in module \lp_fltr_v4.
  Optimizing cells in module \my_fifo_1.
  Optimizing cells in module \my_fifo_179.
  Optimizing cells in module \my_fifo_2.
  Optimizing cells in module \my_fifo_316.
  Optimizing cells in module \my_fifo_359.
  Optimizing cells in module \my_fifo_496.
  Optimizing cells in module \my_fifo_89.
  Optimizing cells in module \port_bus_1to0_1.
  Optimizing cells in module \quadintr_10_20.
  Optimizing cells in module \quadintr_5_20.
  Optimizing cells in module \scaler.
  Optimizing cells in module \scl_h_fltr.
  Optimizing cells in module \scl_v_fltr.
  Optimizing cells in module \sh_reg_1.
  Optimizing cells in module \sv_chip0_hierarchy_no_mem.
  Optimizing cells in module \v_fltr_316.
  Optimizing cells in module \v_fltr_496.
  Optimizing cells in module \wrapper_qs_intr_10_20.
  Optimizing cells in module \wrapper_qs_intr_5_20.
Performed a total of 0 changes.

11.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\combine_res'.
Finding identical cells in module `\find_max'.
Finding identical cells in module `\lp_fltr'.
Finding identical cells in module `\lp_fltr_v1'.
Finding identical cells in module `\lp_fltr_v2'.
Finding identical cells in module `\lp_fltr_v4'.
Finding identical cells in module `\my_fifo_1'.
Finding identical cells in module `\my_fifo_179'.
Finding identical cells in module `\my_fifo_2'.
Finding identical cells in module `\my_fifo_316'.
Finding identical cells in module `\my_fifo_359'.
Finding identical cells in module `\my_fifo_496'.
Finding identical cells in module `\my_fifo_89'.
Finding identical cells in module `\port_bus_1to0_1'.
Finding identical cells in module `\quadintr_10_20'.
Finding identical cells in module `\quadintr_5_20'.
Finding identical cells in module `\scaler'.
Finding identical cells in module `\scl_h_fltr'.
Finding identical cells in module `\scl_v_fltr'.
Finding identical cells in module `\sh_reg_1'.
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
Finding identical cells in module `\v_fltr_316'.
Finding identical cells in module `\v_fltr_496'.
Finding identical cells in module `\wrapper_qs_intr_10_20'.
Finding identical cells in module `\wrapper_qs_intr_5_20'.
Removed a total of 0 cells.

11.27. Executing OPT_DFF pass (perform DFF optimizations).

11.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \combine_res..
Finding unused cells or wires in module \find_max..
Finding unused cells or wires in module \lp_fltr..
Finding unused cells or wires in module \lp_fltr_v1..
Finding unused cells or wires in module \lp_fltr_v2..
Finding unused cells or wires in module \lp_fltr_v4..
Finding unused cells or wires in module \my_fifo_1..
Finding unused cells or wires in module \my_fifo_179..
Finding unused cells or wires in module \my_fifo_2..
Finding unused cells or wires in module \my_fifo_316..
Finding unused cells or wires in module \my_fifo_359..
Finding unused cells or wires in module \my_fifo_496..
Finding unused cells or wires in module \my_fifo_89..
Finding unused cells or wires in module \port_bus_1to0_1..
Finding unused cells or wires in module \quadintr_10_20..
Finding unused cells or wires in module \quadintr_5_20..
Finding unused cells or wires in module \scaler..
Finding unused cells or wires in module \scl_h_fltr..
Finding unused cells or wires in module \scl_v_fltr..
Finding unused cells or wires in module \sh_reg_1..
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..
Finding unused cells or wires in module \v_fltr_316..
Finding unused cells or wires in module \v_fltr_496..
Finding unused cells or wires in module \wrapper_qs_intr_10_20..
Finding unused cells or wires in module \wrapper_qs_intr_5_20..

11.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module combine_res.
Optimizing module find_max.
Optimizing module lp_fltr.
Optimizing module lp_fltr_v1.
Optimizing module lp_fltr_v2.
Optimizing module lp_fltr_v4.
Optimizing module my_fifo_1.
Optimizing module my_fifo_179.
Optimizing module my_fifo_2.
Optimizing module my_fifo_316.
Optimizing module my_fifo_359.
Optimizing module my_fifo_496.
Optimizing module my_fifo_89.
Optimizing module port_bus_1to0_1.
Optimizing module quadintr_10_20.
Optimizing module quadintr_5_20.
Optimizing module scaler.
Optimizing module scl_h_fltr.
Optimizing module scl_v_fltr.
Optimizing module sh_reg_1.
Optimizing module sv_chip0_hierarchy_no_mem.
Optimizing module v_fltr_316.
Optimizing module v_fltr_496.
Optimizing module wrapper_qs_intr_10_20.
Optimizing module wrapper_qs_intr_5_20.

11.30. Finished OPT passes. (There is nothing left to do.)

12. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 9) from FF cell combine_res.$auto$ff.cc:266:slice$2573 ($dffe).
Removed top 4 bits (of 5) from mux cell find_max.$procmux$412 ($mux).
Removed top 4 bits (of 5) from mux cell find_max.$procmux$406 ($mux).
Removed top 4 bits (of 5) from mux cell find_max.$procmux$454 ($mux).
Removed top 4 bits (of 5) from mux cell find_max.$procmux$448 ($mux).
Removed top 4 bits (of 5) from mux cell find_max.$procmux$442 ($mux).
Removed top 4 bits (of 5) from mux cell find_max.$procmux$436 ($mux).
Removed top 4 bits (of 5) from mux cell find_max.$procmux$430 ($mux).
Removed top 4 bits (of 5) from mux cell find_max.$procmux$424 ($mux).
Removed top 4 bits (of 5) from mux cell find_max.$procmux$418 ($mux).
Removed top 4 bits (of 5) from mux cell find_max.$procmux$400 ($mux).
Removed top 4 bits (of 5) from FF cell find_max.$procdff$1985 ($dff).
Removed top 3 bits (of 5) from FF cell find_max.$procdff$1986 ($dff).
Removed top 2 bits (of 5) from FF cell find_max.$procdff$1987 ($dff).
Removed top 2 bits (of 5) from FF cell find_max.$procdff$1988 ($dff).
Removed top 1 bits (of 5) from FF cell find_max.$procdff$1989 ($dff).
Removed top 1 bits (of 5) from FF cell find_max.$procdff$1990 ($dff).
Removed top 1 bits (of 5) from FF cell find_max.$procdff$1991 ($dff).
Removed top 1 bits (of 5) from FF cell find_max.$procdff$1992 ($dff).
Removed top 2 bits (of 5) from mux cell find_max.$procmux$388 ($mux).
Removed top 1 bits (of 5) from mux cell find_max.$procmux$376 ($mux).
Removed top 3 bits (of 5) from mux cell find_max.$procmux$394 ($mux).
Removed top 1 bits (of 5) from mux cell find_max.$procmux$382 ($mux).
Removed top 1 bits (of 3) from FF cell find_max.$procdff$1988 ($dff).
Removed top 1 bits (of 4) from FF cell find_max.$procdff$1991 ($dff).
Removed top 2 bits (of 4) from FF cell find_max.$procdff$1992 ($dff).
Removed top 4 bits (of 5) from wire find_max.$0\indx_1_10[4:0].
Removed top 4 bits (of 5) from wire find_max.$0\indx_1_1[4:0].
Removed top 4 bits (of 5) from wire find_max.$0\indx_1_2[4:0].
Removed top 4 bits (of 5) from wire find_max.$0\indx_1_4[4:0].
Removed top 4 bits (of 5) from wire find_max.$0\indx_1_6[4:0].
Removed top 4 bits (of 5) from wire find_max.$0\indx_1_8[4:0].
Removed top 2 bits (of 5) from wire find_max.$0\indx_2_2[4:0].
Removed top 1 bits (of 5) from wire find_max.$0\indx_2_3[4:0].
Removed top 1 bits (of 5) from wire find_max.$0\indx_2_4[4:0].
Removed top 4 bits (of 5) from wire find_max.indx_1_1.
Removed top 3 bits (of 5) from wire find_max.indx_1_2.
Removed top 2 bits (of 5) from wire find_max.indx_1_3.
Removed top 1 bits (of 9) from FF cell lp_fltr.$auto$ff.cc:266:slice$2581 ($dff).
Removed top 2 bits (of 10) from FF cell lp_fltr.$procdff$2014 ($dff).
Removed top 2 bits (of 10) from FF cell lp_fltr.$procdff$2016 ($dff).
Removed top 2 bits (of 3) from port B of cell port_bus_1to0_1.$eq$stereovision0.v:3654$309 ($eq).
Removed top 1 bits (of 3) from port B of cell port_bus_1to0_1.$procmux$619_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell port_bus_1to0_1.$procmux$673_CMP0 ($eq).
Removed top 7 bits (of 16) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2738 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2737 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2736 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2735 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2734 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2733 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2732 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2731 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2730 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2729 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2728 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2727 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2726 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2725 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2724 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2723 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2722 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2721 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2720 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2719 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2718 ($dffe).
Removed top 3 bits (of 8) from FF cell quadintr_10_20.$procdff$2190 ($dff).
Removed top 3 bits (of 8) from FF cell quadintr_10_20.$procdff$2201 ($dff).
Removed top 3 bits (of 8) from FF cell quadintr_10_20.$procdff$2202 ($dff).
Removed top 3 bits (of 8) from FF cell quadintr_10_20.$procdff$2203 ($dff).
Removed top 3 bits (of 8) from FF cell quadintr_10_20.$procdff$2204 ($dff).
Removed top 3 bits (of 8) from FF cell quadintr_10_20.$procdff$2205 ($dff).
Removed top 3 bits (of 8) from FF cell quadintr_10_20.$procdff$2206 ($dff).
Removed top 3 bits (of 8) from FF cell quadintr_10_20.$procdff$2208 ($dff).
Removed top 3 bits (of 8) from FF cell quadintr_10_20.$procdff$2209 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_10_20.$procdff$2221 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_10_20.$procdff$2223 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_10_20.$procdff$2225 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_10_20.$procdff$2227 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_10_20.$procdff$2229 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_10_20.$procdff$2231 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_10_20.$procdff$2233 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_10_20.$procdff$2235 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_10_20.$procdff$2237 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_10_20.$procdff$2239 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_10_20.$procdff$2241 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2738 ($dffe).
Removed top 1 bits (of 9) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2736 ($dffe).
Removed top 1 bits (of 9) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2734 ($dffe).
Removed top 1 bits (of 9) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2732 ($dffe).
Removed top 1 bits (of 9) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2730 ($dffe).
Removed top 1 bits (of 9) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2728 ($dffe).
Removed top 1 bits (of 9) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2726 ($dffe).
Removed top 1 bits (of 9) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2724 ($dffe).
Removed top 1 bits (of 9) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2722 ($dffe).
Removed top 1 bits (of 9) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2720 ($dffe).
Removed top 1 bits (of 9) from FF cell quadintr_10_20.$auto$ff.cc:266:slice$2718 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2765 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2764 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2763 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2762 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2761 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2760 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2759 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2758 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2757 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2756 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2755 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2754 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2753 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2752 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2751 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2750 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2749 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2748 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2747 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2746 ($dffe).
Removed top 7 bits (of 16) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2745 ($dffe).
Removed top 3 bits (of 8) from FF cell quadintr_5_20.$procdff$2273 ($dff).
Removed top 3 bits (of 8) from FF cell quadintr_5_20.$procdff$2279 ($dff).
Removed top 3 bits (of 8) from FF cell quadintr_5_20.$procdff$2281 ($dff).
Removed top 3 bits (of 8) from FF cell quadintr_5_20.$procdff$2282 ($dff).
Removed top 3 bits (of 9) from FF cell quadintr_5_20.$procdff$2319 ($dff).
Removed top 3 bits (of 9) from FF cell quadintr_5_20.$procdff$2330 ($dff).
Removed top 3 bits (of 9) from FF cell quadintr_5_20.$procdff$2331 ($dff).
Removed top 3 bits (of 9) from FF cell quadintr_5_20.$procdff$2332 ($dff).
Removed top 3 bits (of 9) from FF cell quadintr_5_20.$procdff$2333 ($dff).
Removed top 3 bits (of 9) from FF cell quadintr_5_20.$procdff$2334 ($dff).
Removed top 3 bits (of 9) from FF cell quadintr_5_20.$procdff$2335 ($dff).
Removed top 3 bits (of 9) from FF cell quadintr_5_20.$procdff$2337 ($dff).
Removed top 3 bits (of 9) from FF cell quadintr_5_20.$procdff$2338 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_5_20.$procdff$2350 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_5_20.$procdff$2352 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_5_20.$procdff$2354 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_5_20.$procdff$2356 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_5_20.$procdff$2358 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_5_20.$procdff$2360 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_5_20.$procdff$2289 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_5_20.$procdff$2293 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_5_20.$procdff$2297 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_5_20.$procdff$2301 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_5_20.$procdff$2305 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_5_20.$procdff$2309 ($dff).
Removed top 1 bits (of 6) from FF cell quadintr_5_20.$procdff$2319 ($dff).
Removed top 1 bits (of 6) from FF cell quadintr_5_20.$procdff$2330 ($dff).
Removed top 1 bits (of 6) from FF cell quadintr_5_20.$procdff$2332 ($dff).
Removed top 1 bits (of 6) from FF cell quadintr_5_20.$procdff$2334 ($dff).
Removed top 1 bits (of 6) from FF cell quadintr_5_20.$procdff$2338 ($dff).
Removed top 1 bits (of 9) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2765 ($dffe).
Removed top 1 bits (of 9) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2761 ($dffe).
Removed top 1 bits (of 9) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2757 ($dffe).
Removed top 1 bits (of 9) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2753 ($dffe).
Removed top 1 bits (of 9) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2749 ($dffe).
Removed top 1 bits (of 9) from FF cell quadintr_5_20.$auto$ff.cc:266:slice$2745 ($dffe).
Removed top 2 bits (of 10) from port A of cell scl_h_fltr.$add$stereovision0.v:1636$160 ($add).
Removed top 2 bits (of 10) from port B of cell scl_h_fltr.$add$stereovision0.v:1636$160 ($add).
Removed top 1 bits (of 10) from port Y of cell scl_h_fltr.$add$stereovision0.v:1636$160 ($add).
Removed top 1 bits (of 10) from port B of cell scl_h_fltr.$add$stereovision0.v:1638$161 ($add).
Removed top 4 bits (of 12) from port A of cell scl_h_fltr.$add$stereovision0.v:1639$162 ($add).
Removed top 4 bits (of 12) from port B of cell scl_h_fltr.$add$stereovision0.v:1639$162 ($add).
Removed top 3 bits (of 12) from port Y of cell scl_h_fltr.$add$stereovision0.v:1639$162 ($add).
Removed top 3 bits (of 12) from port A of cell scl_h_fltr.$add$stereovision0.v:1640$163 ($add).
Removed top 3 bits (of 12) from port B of cell scl_h_fltr.$add$stereovision0.v:1640$163 ($add).
Removed top 2 bits (of 12) from port Y of cell scl_h_fltr.$add$stereovision0.v:1640$163 ($add).
Removed top 3 bits (of 12) from port A of cell scl_h_fltr.$add$stereovision0.v:1641$164 ($add).
Removed top 3 bits (of 12) from port B of cell scl_h_fltr.$add$stereovision0.v:1641$164 ($add).
Removed top 2 bits (of 12) from port Y of cell scl_h_fltr.$add$stereovision0.v:1641$164 ($add).
Removed top 4 bits (of 12) from port A of cell scl_h_fltr.$add$stereovision0.v:1642$165 ($add).
Removed top 4 bits (of 12) from port B of cell scl_h_fltr.$add$stereovision0.v:1642$165 ($add).
Removed top 3 bits (of 12) from port Y of cell scl_h_fltr.$add$stereovision0.v:1642$165 ($add).
Removed top 2 bits (of 12) from port A of cell scl_h_fltr.$add$stereovision0.v:1646$168 ($add).
Removed top 1 bits (of 10) from FF cell scl_h_fltr.$procdff$2370 ($dff).
Removed top 3 bits (of 12) from FF cell scl_h_fltr.$procdff$2373 ($dff).
Removed top 2 bits (of 12) from FF cell scl_h_fltr.$procdff$2374 ($dff).
Removed top 2 bits (of 12) from FF cell scl_h_fltr.$procdff$2375 ($dff).
Removed top 3 bits (of 12) from FF cell scl_h_fltr.$procdff$2376 ($dff).
Removed top 1 bits (of 10) from port A of cell scl_h_fltr.$add$stereovision0.v:1638$161 ($add).
Removed top 3 bits (of 12) from port A of cell scl_h_fltr.$add$stereovision0.v:1644$166 ($add).
Removed top 2 bits (of 12) from port B of cell scl_h_fltr.$add$stereovision0.v:1644$166 ($add).
Removed top 1 bits (of 12) from port Y of cell scl_h_fltr.$add$stereovision0.v:1644$166 ($add).
Removed top 2 bits (of 12) from port A of cell scl_h_fltr.$add$stereovision0.v:1645$167 ($add).
Removed top 3 bits (of 12) from port B of cell scl_h_fltr.$add$stereovision0.v:1645$167 ($add).
Removed top 1 bits (of 12) from port Y of cell scl_h_fltr.$add$stereovision0.v:1645$167 ($add).
Removed top 1 bits (of 10) from wire scl_h_fltr.$0\add_2_tmp_1[9:0].
Removed top 3 bits (of 12) from wire scl_h_fltr.$0\add_4_tmp_1[11:0].
Removed top 2 bits (of 12) from wire scl_h_fltr.$0\add_4_tmp_2[11:0].
Removed top 1 bits (of 10) from wire scl_h_fltr.add_2_tmp_1.
Removed top 1 bits (of 10) from wire scl_h_fltr.add_2_tmp_2.
Removed top 2 bits (of 12) from wire scl_h_fltr.add_4_tmp_2.
Removed top 2 bits (of 10) from port A of cell scl_v_fltr.$add$stereovision0.v:1541$148 ($add).
Removed top 2 bits (of 10) from port B of cell scl_v_fltr.$add$stereovision0.v:1541$148 ($add).
Removed top 1 bits (of 10) from port Y of cell scl_v_fltr.$add$stereovision0.v:1541$148 ($add).
Removed top 1 bits (of 10) from port B of cell scl_v_fltr.$add$stereovision0.v:1543$149 ($add).
Removed top 4 bits (of 12) from port A of cell scl_v_fltr.$add$stereovision0.v:1544$150 ($add).
Removed top 4 bits (of 12) from port B of cell scl_v_fltr.$add$stereovision0.v:1544$150 ($add).
Removed top 3 bits (of 12) from port Y of cell scl_v_fltr.$add$stereovision0.v:1544$150 ($add).
Removed top 3 bits (of 12) from port A of cell scl_v_fltr.$add$stereovision0.v:1545$151 ($add).
Removed top 3 bits (of 12) from port B of cell scl_v_fltr.$add$stereovision0.v:1545$151 ($add).
Removed top 2 bits (of 12) from port Y of cell scl_v_fltr.$add$stereovision0.v:1545$151 ($add).
Removed top 3 bits (of 12) from port A of cell scl_v_fltr.$add$stereovision0.v:1546$152 ($add).
Removed top 3 bits (of 12) from port B of cell scl_v_fltr.$add$stereovision0.v:1546$152 ($add).
Removed top 2 bits (of 12) from port Y of cell scl_v_fltr.$add$stereovision0.v:1546$152 ($add).
Removed top 4 bits (of 12) from port A of cell scl_v_fltr.$add$stereovision0.v:1547$153 ($add).
Removed top 4 bits (of 12) from port B of cell scl_v_fltr.$add$stereovision0.v:1547$153 ($add).
Removed top 3 bits (of 12) from port Y of cell scl_v_fltr.$add$stereovision0.v:1547$153 ($add).
Removed top 2 bits (of 12) from port A of cell scl_v_fltr.$add$stereovision0.v:1551$156 ($add).
Removed top 1 bits (of 10) from FF cell scl_v_fltr.$procdff$2402 ($dff).
Removed top 3 bits (of 12) from FF cell scl_v_fltr.$procdff$2405 ($dff).
Removed top 2 bits (of 12) from FF cell scl_v_fltr.$procdff$2406 ($dff).
Removed top 2 bits (of 12) from FF cell scl_v_fltr.$procdff$2407 ($dff).
Removed top 3 bits (of 12) from FF cell scl_v_fltr.$procdff$2408 ($dff).
Removed top 1 bits (of 10) from port A of cell scl_v_fltr.$add$stereovision0.v:1543$149 ($add).
Removed top 3 bits (of 12) from port A of cell scl_v_fltr.$add$stereovision0.v:1549$154 ($add).
Removed top 2 bits (of 12) from port B of cell scl_v_fltr.$add$stereovision0.v:1549$154 ($add).
Removed top 1 bits (of 12) from port Y of cell scl_v_fltr.$add$stereovision0.v:1549$154 ($add).
Removed top 2 bits (of 12) from port A of cell scl_v_fltr.$add$stereovision0.v:1550$155 ($add).
Removed top 3 bits (of 12) from port B of cell scl_v_fltr.$add$stereovision0.v:1550$155 ($add).
Removed top 1 bits (of 12) from port Y of cell scl_v_fltr.$add$stereovision0.v:1550$155 ($add).
Removed top 1 bits (of 10) from wire scl_v_fltr.$0\add_2_tmp_1[9:0].
Removed top 3 bits (of 12) from wire scl_v_fltr.$0\add_4_tmp_1[11:0].
Removed top 2 bits (of 12) from wire scl_v_fltr.$0\add_4_tmp_2[11:0].
Removed top 1 bits (of 12) from wire scl_v_fltr.$0\add_4_tmp_6[11:0].
Removed top 1 bits (of 10) from wire scl_v_fltr.add_2_tmp_1.
Removed top 1 bits (of 10) from wire scl_v_fltr.add_2_tmp_2.
Removed top 2 bits (of 9) from port B of cell sv_chip0_hierarchy_no_mem.$ge$stereovision0.v:794$39 ($ge).
Removed top 12 bits (of 19) from port B of cell sv_chip0_hierarchy_no_mem.$sub$stereovision0.v:796$40 ($sub).
Removed top 10 bits (of 19) from port B of cell sv_chip0_hierarchy_no_mem.$add$stereovision0.v:800$41 ($add).
Removed top 28 bits (of 32) from port B of cell sv_chip0_hierarchy_no_mem.$add$stereovision0.v:834$48 ($add).
Removed top 16 bits (of 32) from port Y of cell sv_chip0_hierarchy_no_mem.$add$stereovision0.v:834$48 ($add).
Removed top 28 bits (of 32) from port B of cell sv_chip0_hierarchy_no_mem.$add$stereovision0.v:835$49 ($add).
Removed top 16 bits (of 32) from port Y of cell sv_chip0_hierarchy_no_mem.$add$stereovision0.v:835$49 ($add).
Removed top 31 bits (of 32) from port B of cell sv_chip0_hierarchy_no_mem.$add$stereovision0.v:849$54 ($add).
Removed top 22 bits (of 32) from port Y of cell sv_chip0_hierarchy_no_mem.$add$stereovision0.v:849$54 ($add).
Removed top 31 bits (of 32) from port B of cell sv_chip0_hierarchy_no_mem.$add$stereovision0.v:854$55 ($add).
Removed top 22 bits (of 32) from port Y of cell sv_chip0_hierarchy_no_mem.$add$stereovision0.v:854$55 ($add).
Removed top 23 bits (of 32) from port B of cell sv_chip0_hierarchy_no_mem.$ge$stereovision0.v:856$56 ($ge).
Removed top 23 bits (of 32) from port B of cell sv_chip0_hierarchy_no_mem.$le$stereovision0.v:856$57 ($le).
Removed top 22 bits (of 32) from port B of cell sv_chip0_hierarchy_no_mem.$ge$stereovision0.v:864$59 ($ge).
Removed top 22 bits (of 32) from port B of cell sv_chip0_hierarchy_no_mem.$le$stereovision0.v:864$60 ($le).
Removed top 22 bits (of 32) from port B of cell sv_chip0_hierarchy_no_mem.$lt$stereovision0.v:872$62 ($lt).
Removed top 23 bits (of 32) from port B of cell sv_chip0_hierarchy_no_mem.$lt$stereovision0.v:872$63 ($lt).
Removed top 1 bits (of 4) from port B of cell sv_chip0_hierarchy_no_mem.$procmux$1321_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell sv_chip0_hierarchy_no_mem.$procmux$1328_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell sv_chip0_hierarchy_no_mem.$procmux$1350_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell sv_chip0_hierarchy_no_mem.$procmux$1375_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell sv_chip0_hierarchy_no_mem.$procmux$1403_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell sv_chip0_hierarchy_no_mem.$procmux$1434_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell sv_chip0_hierarchy_no_mem.$procmux$1516_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell sv_chip0_hierarchy_no_mem.$procmux$1568_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell sv_chip0_hierarchy_no_mem.$procmux$1569_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell sv_chip0_hierarchy_no_mem.$procmux$1570_CMP0 ($eq).
Removed top 2 bits (of 19) from mux cell sv_chip0_hierarchy_no_mem.$procmux$1757 ($pmux).
Removed top 2 bits (of 19) from FF cell sv_chip0_hierarchy_no_mem.$procdff$2424 ($dff).
Removed top 2 bits (of 19) from FF cell sv_chip0_hierarchy_no_mem.$auto$ff.cc:266:slice$2976 ($dffe).
Removed top 2 bits (of 19) from mux cell sv_chip0_hierarchy_no_mem.$procmux$1304 ($mux).
Removed top 2 bits (of 19) from port Y of cell sv_chip0_hierarchy_no_mem.$sub$stereovision0.v:796$40 ($sub).
Removed top 2 bits (of 19) from port A of cell sv_chip0_hierarchy_no_mem.$sub$stereovision0.v:796$40 ($sub).
Removed top 2 bits (of 19) from port Y of cell sv_chip0_hierarchy_no_mem.$add$stereovision0.v:800$41 ($add).
Removed top 2 bits (of 19) from port A of cell sv_chip0_hierarchy_no_mem.$add$stereovision0.v:800$41 ($add).
Removed top 2 bits (of 19) from wire sv_chip0_hierarchy_no_mem.$0\vidin_addr_reg_2to3_reg[18:0].
Removed top 2 bits (of 19) from wire sv_chip0_hierarchy_no_mem.$add$stereovision0.v:800$41_Y.
Removed top 2 bits (of 19) from wire sv_chip0_hierarchy_no_mem.$procmux$1757_Y.
Removed top 2 bits (of 19) from wire sv_chip0_hierarchy_no_mem.$sub$stereovision0.v:796$40_Y.
Removed top 2 bits (of 19) from wire sv_chip0_hierarchy_no_mem.tm3_sram_addr.
Removed top 4 bits (of 19) from wire sv_chip0_hierarchy_no_mem.vidin_addr_buf_sc_1.
Removed top 2 bits (of 19) from wire sv_chip0_hierarchy_no_mem.vidin_addr_reg_2to3_reg.

13. Executing PEEPOPT pass (run peephole optimizers).

14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \combine_res..
Finding unused cells or wires in module \find_max..
Finding unused cells or wires in module \lp_fltr..
Finding unused cells or wires in module \lp_fltr_v1..
Finding unused cells or wires in module \lp_fltr_v2..
Finding unused cells or wires in module \lp_fltr_v4..
Finding unused cells or wires in module \my_fifo_1..
Finding unused cells or wires in module \my_fifo_179..
Finding unused cells or wires in module \my_fifo_2..
Finding unused cells or wires in module \my_fifo_316..
Finding unused cells or wires in module \my_fifo_359..
Finding unused cells or wires in module \my_fifo_496..
Finding unused cells or wires in module \my_fifo_89..
Finding unused cells or wires in module \port_bus_1to0_1..
Finding unused cells or wires in module \quadintr_10_20..
Finding unused cells or wires in module \quadintr_5_20..
Finding unused cells or wires in module \scaler..
Finding unused cells or wires in module \scl_h_fltr..
Finding unused cells or wires in module \scl_v_fltr..
Finding unused cells or wires in module \sh_reg_1..
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..
Finding unused cells or wires in module \v_fltr_316..
Finding unused cells or wires in module \v_fltr_496..
Finding unused cells or wires in module \wrapper_qs_intr_10_20..
Finding unused cells or wires in module \wrapper_qs_intr_5_20..
Removed 0 unused cells and 33 unused wires.
<suppressed ~4 debug messages>

15. Executing SHARE pass (SAT-based resource sharing).

16. Executing OPT pass (performing simple optimizations).

16.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module combine_res.
Optimizing module find_max.
<suppressed ~10 debug messages>
Optimizing module lp_fltr.
<suppressed ~1 debug messages>
Optimizing module lp_fltr_v1.
<suppressed ~1 debug messages>
Optimizing module lp_fltr_v2.
<suppressed ~1 debug messages>
Optimizing module lp_fltr_v4.
<suppressed ~1 debug messages>
Optimizing module my_fifo_1.
Optimizing module my_fifo_179.
Optimizing module my_fifo_2.
Optimizing module my_fifo_316.
Optimizing module my_fifo_359.
Optimizing module my_fifo_496.
Optimizing module my_fifo_89.
Optimizing module port_bus_1to0_1.
<suppressed ~3 debug messages>
Optimizing module quadintr_10_20.
Optimizing module quadintr_5_20.
Optimizing module scaler.
<suppressed ~2 debug messages>
Optimizing module scl_h_fltr.
<suppressed ~4 debug messages>
Optimizing module scl_v_fltr.
<suppressed ~4 debug messages>
Optimizing module sh_reg_1.
Optimizing module sv_chip0_hierarchy_no_mem.
<suppressed ~43 debug messages>
Optimizing module v_fltr_316.
Optimizing module v_fltr_496.
Optimizing module wrapper_qs_intr_10_20.
Optimizing module wrapper_qs_intr_5_20.

16.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\combine_res'.
Finding identical cells in module `\find_max'.
Finding identical cells in module `\lp_fltr'.
Finding identical cells in module `\lp_fltr_v1'.
Finding identical cells in module `\lp_fltr_v2'.
Finding identical cells in module `\lp_fltr_v4'.
Finding identical cells in module `\my_fifo_1'.
Finding identical cells in module `\my_fifo_179'.
Finding identical cells in module `\my_fifo_2'.
Finding identical cells in module `\my_fifo_316'.
Finding identical cells in module `\my_fifo_359'.
Finding identical cells in module `\my_fifo_496'.
Finding identical cells in module `\my_fifo_89'.
Finding identical cells in module `\port_bus_1to0_1'.
Finding identical cells in module `\quadintr_10_20'.
Finding identical cells in module `\quadintr_5_20'.
Finding identical cells in module `\scaler'.
Finding identical cells in module `\scl_h_fltr'.
<suppressed ~3 debug messages>
Finding identical cells in module `\scl_v_fltr'.
<suppressed ~3 debug messages>
Finding identical cells in module `\sh_reg_1'.
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
Finding identical cells in module `\v_fltr_316'.
Finding identical cells in module `\v_fltr_496'.
Finding identical cells in module `\wrapper_qs_intr_10_20'.
Finding identical cells in module `\wrapper_qs_intr_5_20'.
Removed a total of 2 cells.

16.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \combine_res..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \find_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lp_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_179..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_316..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_359..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_89..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \port_bus_1to0_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \quadintr_10_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \quadintr_5_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scaler..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scl_h_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scl_v_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sh_reg_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sv_chip0_hierarchy_no_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \v_fltr_316..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \v_fltr_496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wrapper_qs_intr_10_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wrapper_qs_intr_5_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~61 debug messages>

16.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \combine_res.
  Optimizing cells in module \find_max.
    Consolidated identical input bits for $mux cell $procmux$376:
      Old ports: A={ \indx_1_8 [1] \indx_1_8 [1] \indx_1_8 [1:0] }, B={ \indx_1_7 [2] \indx_1_7 [2:0] }, Y=$0\indx_2_4[4:0]
      New ports: A={ \indx_1_8 [1] \indx_1_8 [1:0] }, B=\indx_1_7 [2:0], Y=$0\indx_2_4[4:0] [2:0]
      New connections: $0\indx_2_4[4:0] [3] = $0\indx_2_4[4:0] [2]
  Optimizing cells in module \find_max.
  Optimizing cells in module \lp_fltr.
  Optimizing cells in module \lp_fltr_v1.
  Optimizing cells in module \lp_fltr_v2.
  Optimizing cells in module \lp_fltr_v4.
  Optimizing cells in module \my_fifo_1.
  Optimizing cells in module \my_fifo_179.
  Optimizing cells in module \my_fifo_2.
  Optimizing cells in module \my_fifo_316.
  Optimizing cells in module \my_fifo_359.
  Optimizing cells in module \my_fifo_496.
  Optimizing cells in module \my_fifo_89.
  Optimizing cells in module \port_bus_1to0_1.
  Optimizing cells in module \quadintr_10_20.
  Optimizing cells in module \quadintr_5_20.
  Optimizing cells in module \scaler.
  Optimizing cells in module \scl_h_fltr.
  Optimizing cells in module \scl_v_fltr.
  Optimizing cells in module \sh_reg_1.
  Optimizing cells in module \sv_chip0_hierarchy_no_mem.
    Consolidated identical input bits for $mux cell $procmux$1304:
      Old ports: A=$add$stereovision0.v:800$41_Y, B=$auto$wreduce.cc:455:run$3101 [16:0], Y=$0\vidin_addr_reg_2to3_reg[18:0]
      New ports: A={ $add$stereovision0.v:800$41_Y [16:5] \vidin_addr_reg [4:3] }, B=$auto$wreduce.cc:455:run$3101 [16:3], Y=$0\vidin_addr_reg_2to3_reg[18:0] [16:3]
      New connections: $0\vidin_addr_reg_2to3_reg[18:0] [2:0] = \vidin_addr_reg [2:0]
    Consolidated identical input bits for $mux cell $procmux$1504:
      Old ports: A=8'11111111, B=8'00000000, Y=$procmux$1504_Y
      New ports: A=1'1, B=1'0, Y=$procmux$1504_Y [0]
      New connections: $procmux$1504_Y [7:1] = { $procmux$1504_Y [0] $procmux$1504_Y [0] $procmux$1504_Y [0] $procmux$1504_Y [0] $procmux$1504_Y [0] $procmux$1504_Y [0] $procmux$1504_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$1525:
      Old ports: A={ \vidin_data_reg_scld_4_2to3_left_reg \vidin_data_buf_2_sc_4 }, B={ \vidin_data_reg_scld_4_2to3_right_reg [7:3] 3'000 \vidin_data_buf_2_sc_4 }, Y=$procmux$1525_Y
      New ports: A=\vidin_data_reg_scld_4_2to3_left_reg, B={ \vidin_data_reg_scld_4_2to3_right_reg [7:3] 3'000 }, Y=$procmux$1525_Y [63:56]
      New connections: $procmux$1525_Y [55:0] = \vidin_data_buf_2_sc_4
    Consolidated identical input bits for $mux cell $procmux$1541:
      Old ports: A={ \vidin_data_reg_scld_2_2to3_left_reg \vidin_data_buf_2_sc_2 }, B={ \vidin_data_reg_scld_2_2to3_right_reg \vidin_data_buf_2_sc_2 }, Y=$procmux$1541_Y
      New ports: A=\vidin_data_reg_scld_2_2to3_left_reg, B=\vidin_data_reg_scld_2_2to3_right_reg, Y=$procmux$1541_Y [63:56]
      New connections: $procmux$1541_Y [55:0] = \vidin_data_buf_2_sc_2
    Consolidated identical input bits for $mux cell $procmux$1563:
      Old ports: A=2'10, B=2'11, Y=$procmux$1563_Y
      New ports: A=1'0, B=1'1, Y=$procmux$1563_Y [0]
      New connections: $procmux$1563_Y [1] = 1'1
    Consolidated identical input bits for $mux cell $procmux$1574:
      Old ports: A={ \vidin_data_reg_scld_1_2to3_left_reg \vidin_data_buf_2_sc_1 }, B={ \vidin_data_reg_scld_1_2to3_right_reg \vidin_data_buf_2_sc_1 }, Y=$procmux$1574_Y
      New ports: A=\vidin_data_reg_scld_1_2to3_left_reg, B=\vidin_data_reg_scld_1_2to3_right_reg, Y=$procmux$1574_Y [63:56]
      New connections: $procmux$1574_Y [55:0] = \vidin_data_buf_2_sc_1
    Consolidated identical input bits for $mux cell $procmux$1650:
      Old ports: A={ \vidout_buf [7:0] 2'00 }, B=10'0000000000, Y=$procmux$1650_Y
      New ports: A=\vidout_buf [7:0], B=8'00000000, Y=$procmux$1650_Y [9:2]
      New connections: $procmux$1650_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $procmux$1655:
      Old ports: A={ \vidout_buf [63:56] 2'00 }, B=10'0000000000, Y=$procmux$1655_Y
      New ports: A=\vidout_buf [63:56], B=8'00000000, Y=$procmux$1655_Y [9:2]
      New connections: $procmux$1655_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $procmux$1659:
      Old ports: A={ \vidout_buf [55:48] 2'00 }, B=10'0000000000, Y=$procmux$1659_Y
      New ports: A=\vidout_buf [55:48], B=8'00000000, Y=$procmux$1659_Y [9:2]
      New connections: $procmux$1659_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $procmux$1663:
      Old ports: A={ \vidout_buf [47:40] 2'00 }, B=10'0000000000, Y=$procmux$1663_Y
      New ports: A=\vidout_buf [47:40], B=8'00000000, Y=$procmux$1663_Y [9:2]
      New connections: $procmux$1663_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $procmux$1667:
      Old ports: A={ \vidout_buf [39:32] 2'00 }, B=10'0000000000, Y=$procmux$1667_Y
      New ports: A=\vidout_buf [39:32], B=8'00000000, Y=$procmux$1667_Y [9:2]
      New connections: $procmux$1667_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $procmux$1671:
      Old ports: A={ \vidout_buf [31:24] 2'00 }, B=10'0000000000, Y=$procmux$1671_Y
      New ports: A=\vidout_buf [31:24], B=8'00000000, Y=$procmux$1671_Y [9:2]
      New connections: $procmux$1671_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $procmux$1675:
      Old ports: A={ \vidout_buf [23:16] 2'00 }, B=10'0000000000, Y=$procmux$1675_Y
      New ports: A=\vidout_buf [23:16], B=8'00000000, Y=$procmux$1675_Y [9:2]
      New connections: $procmux$1675_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $procmux$1679:
      Old ports: A={ \vidout_buf [15:8] 2'00 }, B=10'0000000000, Y=$procmux$1679_Y
      New ports: A=\vidout_buf [15:8], B=8'00000000, Y=$procmux$1679_Y [9:2]
      New connections: $procmux$1679_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $procmux$1722:
      Old ports: A={ \vidout_buf [7:0] 2'00 }, B=10'1111111111, Y=$procmux$1722_Y
      New ports: A={ \vidout_buf [7:0] 1'0 }, B=9'111111111, Y={ $procmux$1722_Y [9:2] $procmux$1722_Y [0] }
      New connections: $procmux$1722_Y [1] = $procmux$1722_Y [0]
    Consolidated identical input bits for $mux cell $procmux$1727:
      Old ports: A={ \vidout_buf [63:56] 2'00 }, B=10'1111111111, Y=$procmux$1727_Y
      New ports: A={ \vidout_buf [63:56] 1'0 }, B=9'111111111, Y={ $procmux$1727_Y [9:2] $procmux$1727_Y [0] }
      New connections: $procmux$1727_Y [1] = $procmux$1727_Y [0]
    Consolidated identical input bits for $mux cell $procmux$1731:
      Old ports: A={ \vidout_buf [55:48] 2'00 }, B=10'1111111111, Y=$procmux$1731_Y
      New ports: A={ \vidout_buf [55:48] 1'0 }, B=9'111111111, Y={ $procmux$1731_Y [9:2] $procmux$1731_Y [0] }
      New connections: $procmux$1731_Y [1] = $procmux$1731_Y [0]
    Consolidated identical input bits for $mux cell $procmux$1735:
      Old ports: A={ \vidout_buf [47:40] 2'00 }, B=10'1111111111, Y=$procmux$1735_Y
      New ports: A={ \vidout_buf [47:40] 1'0 }, B=9'111111111, Y={ $procmux$1735_Y [9:2] $procmux$1735_Y [0] }
      New connections: $procmux$1735_Y [1] = $procmux$1735_Y [0]
    Consolidated identical input bits for $mux cell $procmux$1739:
      Old ports: A={ \vidout_buf [39:32] 2'00 }, B=10'1111111111, Y=$procmux$1739_Y
      New ports: A={ \vidout_buf [39:32] 1'0 }, B=9'111111111, Y={ $procmux$1739_Y [9:2] $procmux$1739_Y [0] }
      New connections: $procmux$1739_Y [1] = $procmux$1739_Y [0]
    Consolidated identical input bits for $mux cell $procmux$1743:
      Old ports: A={ \vidout_buf [31:24] 2'00 }, B=10'1111111111, Y=$procmux$1743_Y
      New ports: A={ \vidout_buf [31:24] 1'0 }, B=9'111111111, Y={ $procmux$1743_Y [9:2] $procmux$1743_Y [0] }
      New connections: $procmux$1743_Y [1] = $procmux$1743_Y [0]
    Consolidated identical input bits for $mux cell $procmux$1747:
      Old ports: A={ \vidout_buf [23:16] 2'00 }, B=10'1111111111, Y=$procmux$1747_Y
      New ports: A={ \vidout_buf [23:16] 1'0 }, B=9'111111111, Y={ $procmux$1747_Y [9:2] $procmux$1747_Y [0] }
      New connections: $procmux$1747_Y [1] = $procmux$1747_Y [0]
    Consolidated identical input bits for $mux cell $procmux$1751:
      Old ports: A={ \vidout_buf [15:8] 2'00 }, B=10'1111111111, Y=$procmux$1751_Y
      New ports: A={ \vidout_buf [15:8] 1'0 }, B=9'111111111, Y={ $procmux$1751_Y [9:2] $procmux$1751_Y [0] }
      New connections: $procmux$1751_Y [1] = $procmux$1751_Y [0]
  Optimizing cells in module \sv_chip0_hierarchy_no_mem.
    Consolidated identical input bits for $pmux cell $procmux$1652:
      Old ports: A=$procmux$1679_Y, B={ $procmux$1675_Y $procmux$1671_Y $procmux$1667_Y $procmux$1663_Y $procmux$1659_Y $procmux$1655_Y $procmux$1650_Y }, Y=$procmux$1652_Y
      New ports: A=$procmux$1679_Y [9:2], B={ $procmux$1675_Y [9:2] $procmux$1671_Y [9:2] $procmux$1667_Y [9:2] $procmux$1663_Y [9:2] $procmux$1659_Y [9:2] $procmux$1655_Y [9:2] $procmux$1650_Y [9:2] }, Y=$procmux$1652_Y [9:2]
      New connections: $procmux$1652_Y [1:0] = 2'00
    Consolidated identical input bits for $pmux cell $procmux$1724:
      Old ports: A=$procmux$1751_Y, B={ $procmux$1747_Y $procmux$1743_Y $procmux$1739_Y $procmux$1735_Y $procmux$1731_Y $procmux$1727_Y $procmux$1722_Y }, Y=$procmux$1724_Y
      New ports: A={ $procmux$1751_Y [9:2] $procmux$1751_Y [0] }, B={ $procmux$1747_Y [9:2] $procmux$1747_Y [0] $procmux$1743_Y [9:2] $procmux$1743_Y [0] $procmux$1739_Y [9:2] $procmux$1739_Y [0] $procmux$1735_Y [9:2] $procmux$1735_Y [0] $procmux$1731_Y [9:2] $procmux$1731_Y [0] $procmux$1727_Y [9:2] $procmux$1727_Y [0] $procmux$1722_Y [9:2] $procmux$1722_Y [0] }, Y={ $procmux$1724_Y [9:2] $procmux$1724_Y [0] }
      New connections: $procmux$1724_Y [1] = $procmux$1724_Y [0]
  Optimizing cells in module \sv_chip0_hierarchy_no_mem.
  Optimizing cells in module \v_fltr_316.
  Optimizing cells in module \v_fltr_496.
  Optimizing cells in module \wrapper_qs_intr_10_20.
  Optimizing cells in module \wrapper_qs_intr_5_20.
Performed a total of 25 changes.

16.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\combine_res'.
Finding identical cells in module `\find_max'.
Finding identical cells in module `\lp_fltr'.
Finding identical cells in module `\lp_fltr_v1'.
Finding identical cells in module `\lp_fltr_v2'.
Finding identical cells in module `\lp_fltr_v4'.
Finding identical cells in module `\my_fifo_1'.
Finding identical cells in module `\my_fifo_179'.
Finding identical cells in module `\my_fifo_2'.
Finding identical cells in module `\my_fifo_316'.
Finding identical cells in module `\my_fifo_359'.
Finding identical cells in module `\my_fifo_496'.
Finding identical cells in module `\my_fifo_89'.
Finding identical cells in module `\port_bus_1to0_1'.
Finding identical cells in module `\quadintr_10_20'.
Finding identical cells in module `\quadintr_5_20'.
Finding identical cells in module `\scaler'.
Finding identical cells in module `\scl_h_fltr'.
Finding identical cells in module `\scl_v_fltr'.
Finding identical cells in module `\sh_reg_1'.
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
Finding identical cells in module `\v_fltr_316'.
Finding identical cells in module `\v_fltr_496'.
Finding identical cells in module `\wrapper_qs_intr_10_20'.
Finding identical cells in module `\wrapper_qs_intr_5_20'.
Removed a total of 0 cells.

16.6. Executing OPT_SHARE pass.

16.7. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$1996 ($dff) from module find_max (D = \indx_1_2 [1], Q = \indx_2_1 [1], rval = 1'0).
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3106 ($dff) from module find_max.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3106 ($dff) from module find_max.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3106 ($dff) from module find_max.
Setting constant 1-bit at position 1 on $procdff$1986 ($dff) from module find_max.
Setting constant 0-bit at position 1 on $procdff$1987 ($dff) from module find_max.
Setting constant 1-bit at position 2 on $procdff$1987 ($dff) from module find_max.
Setting constant 1-bit at position 1 on $procdff$1988 ($dff) from module find_max.
Setting constant 0-bit at position 1 on $procdff$1989 ($dff) from module find_max.
Setting constant 0-bit at position 2 on $procdff$1989 ($dff) from module find_max.
Setting constant 1-bit at position 3 on $procdff$1989 ($dff) from module find_max.
Setting constant 1-bit at position 1 on $procdff$1990 ($dff) from module find_max.
Setting constant 0-bit at position 2 on $procdff$1990 ($dff) from module find_max.
Setting constant 1-bit at position 3 on $procdff$1990 ($dff) from module find_max.
Setting constant 0-bit at position 1 on $procdff$1991 ($dff) from module find_max.
Setting constant 1-bit at position 2 on $procdff$1991 ($dff) from module find_max.
Setting constant 1-bit at position 1 on $procdff$1992 ($dff) from module find_max.
Setting constant 0-bit at position 1 on $procdff$1993 ($dff) from module find_max.
Setting constant 0-bit at position 2 on $procdff$1993 ($dff) from module find_max.
Setting constant 0-bit at position 3 on $procdff$1993 ($dff) from module find_max.
Setting constant 1-bit at position 4 on $procdff$1993 ($dff) from module find_max.
Setting constant 1-bit at position 1 on $procdff$1994 ($dff) from module find_max.
Setting constant 0-bit at position 2 on $procdff$1994 ($dff) from module find_max.
Setting constant 0-bit at position 3 on $procdff$1994 ($dff) from module find_max.
Setting constant 1-bit at position 4 on $procdff$1994 ($dff) from module find_max.
Setting constant 0-bit at position 3 on $procdff$1997 ($dff) from module find_max.
Setting constant 0-bit at position 4 on $procdff$1997 ($dff) from module find_max.
Setting constant 0-bit at position 4 on $procdff$1998 ($dff) from module find_max.
Setting constant 0-bit at position 4 on $procdff$1999 ($dff) from module find_max.
Setting constant 0-bit at position 11 on $procdff$2378 ($dff) from module scl_h_fltr.
Setting constant 0-bit at position 11 on $procdff$2379 ($dff) from module scl_h_fltr.
Setting constant 0-bit at position 11 on $procdff$2410 ($dff) from module scl_v_fltr.
Setting constant 0-bit at position 11 on $procdff$2411 ($dff) from module scl_v_fltr.
Adding SRST signal on $auto$ff.cc:266:slice$2843 ($dffe) from module sv_chip0_hierarchy_no_mem (D = \vidin_data_reg_scld_4_2to3_left_reg [2:0], Q = \vidin_data_buf_sc_4 [58:56], rval = 3'000).
Adding SRST signal on $auto$ff.cc:266:slice$2838 ($dffe) from module sv_chip0_hierarchy_no_mem (D = \vidin_data_reg_scld_4_2to3_left_reg [2:0], Q = \vidin_data_buf_2_sc_4 [2:0], rval = 3'000).
Adding SRST signal on $auto$ff.cc:266:slice$2833 ($dffe) from module sv_chip0_hierarchy_no_mem (D = \vidin_data_reg_scld_4_2to3_left_reg [2:0], Q = \vidin_data_buf_2_sc_4 [10:8], rval = 3'000).
Adding SRST signal on $auto$ff.cc:266:slice$2828 ($dffe) from module sv_chip0_hierarchy_no_mem (D = \vidin_data_reg_scld_4_2to3_left_reg [2:0], Q = \vidin_data_buf_2_sc_4 [18:16], rval = 3'000).
Adding SRST signal on $auto$ff.cc:266:slice$2823 ($dffe) from module sv_chip0_hierarchy_no_mem (D = \vidin_data_reg_scld_4_2to3_left_reg [2:0], Q = \vidin_data_buf_2_sc_4 [26:24], rval = 3'000).
Adding SRST signal on $auto$ff.cc:266:slice$2818 ($dffe) from module sv_chip0_hierarchy_no_mem (D = \vidin_data_reg_scld_4_2to3_left_reg [2:0], Q = \vidin_data_buf_2_sc_4 [34:32], rval = 3'000).
Adding SRST signal on $auto$ff.cc:266:slice$2813 ($dffe) from module sv_chip0_hierarchy_no_mem (D = \vidin_data_reg_scld_4_2to3_left_reg [2:0], Q = \vidin_data_buf_2_sc_4 [42:40], rval = 3'000).
Adding SRST signal on $auto$ff.cc:266:slice$2808 ($dffe) from module sv_chip0_hierarchy_no_mem (D = \vidin_data_reg_scld_4_2to3_left_reg [2:0], Q = \vidin_data_buf_2_sc_4 [50:48], rval = 3'000).

16.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \combine_res..
Finding unused cells or wires in module \find_max..
Finding unused cells or wires in module \lp_fltr..
Finding unused cells or wires in module \lp_fltr_v1..
Finding unused cells or wires in module \lp_fltr_v2..
Finding unused cells or wires in module \lp_fltr_v4..
Finding unused cells or wires in module \my_fifo_1..
Finding unused cells or wires in module \my_fifo_179..
Finding unused cells or wires in module \my_fifo_2..
Finding unused cells or wires in module \my_fifo_316..
Finding unused cells or wires in module \my_fifo_359..
Finding unused cells or wires in module \my_fifo_496..
Finding unused cells or wires in module \my_fifo_89..
Finding unused cells or wires in module \port_bus_1to0_1..
Finding unused cells or wires in module \quadintr_10_20..
Finding unused cells or wires in module \quadintr_5_20..
Finding unused cells or wires in module \scaler..
Finding unused cells or wires in module \scl_h_fltr..
Finding unused cells or wires in module \scl_v_fltr..
Finding unused cells or wires in module \sh_reg_1..
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..
Finding unused cells or wires in module \v_fltr_316..
Finding unused cells or wires in module \v_fltr_496..
Finding unused cells or wires in module \wrapper_qs_intr_10_20..
Finding unused cells or wires in module \wrapper_qs_intr_5_20..
Removed 1 unused cells and 19 unused wires.
<suppressed ~6 debug messages>

16.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module combine_res.
Optimizing module find_max.
Optimizing module lp_fltr.
Optimizing module lp_fltr_v1.
Optimizing module lp_fltr_v2.
Optimizing module lp_fltr_v4.
Optimizing module my_fifo_1.
Optimizing module my_fifo_179.
Optimizing module my_fifo_2.
Optimizing module my_fifo_316.
Optimizing module my_fifo_359.
Optimizing module my_fifo_496.
Optimizing module my_fifo_89.
Optimizing module port_bus_1to0_1.
Optimizing module quadintr_10_20.
Optimizing module quadintr_5_20.
Optimizing module scaler.
Optimizing module scl_h_fltr.
Optimizing module scl_v_fltr.
Optimizing module sh_reg_1.
Optimizing module sv_chip0_hierarchy_no_mem.
<suppressed ~2 debug messages>
Optimizing module v_fltr_316.
Optimizing module v_fltr_496.
Optimizing module wrapper_qs_intr_10_20.
Optimizing module wrapper_qs_intr_5_20.

16.10. Rerunning OPT passes. (Maybe there is more to do..)

16.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \combine_res..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \find_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lp_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_179..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_316..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_359..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_89..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \port_bus_1to0_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \quadintr_10_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \quadintr_5_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scaler..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scl_h_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scl_v_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sh_reg_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sv_chip0_hierarchy_no_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \v_fltr_316..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \v_fltr_496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wrapper_qs_intr_10_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wrapper_qs_intr_5_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

16.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \combine_res.
  Optimizing cells in module \find_max.
    Consolidated identical input bits for $mux cell $procmux$358:
      Old ports: A={ 1'0 \indx_2_4 [3:0] }, B={ 1'0 \indx_2_3 [3:0] }, Y=$0\indx_3_2[4:0]
      New ports: A=\indx_2_4 [3:0], B=\indx_2_3 [3:0], Y=$0\indx_3_2[4:0] [3:0]
      New connections: $0\indx_3_2[4:0] [4] = 1'0
    Consolidated identical input bits for $mux cell $procmux$364:
      Old ports: A={ 2'00 \indx_2_2 [2:0] }, B={ 3'000 \indx_2_1 [1:0] }, Y=$0\indx_3_1[4:0]
      New ports: A=\indx_2_2 [2:0], B={ 1'0 \indx_2_1 [1:0] }, Y=$0\indx_3_1[4:0] [2:0]
      New connections: $0\indx_3_1[4:0] [4:3] = 2'00
    Consolidated identical input bits for $mux cell $procmux$370:
      Old ports: A={ 4'1001 \indx_1_10 [0] }, B={ 4'1000 \indx_1_9 [0] }, Y=$0\indx_2_5[4:0]
      New ports: A={ 1'1 \indx_1_10 [0] }, B={ 1'0 \indx_1_9 [0] }, Y=$0\indx_2_5[4:0] [1:0]
      New connections: $0\indx_2_5[4:0] [4:2] = 3'100
    Consolidated identical input bits for $mux cell $procmux$376:
      Old ports: A={ 2'11 \indx_1_8 [0] }, B={ 2'10 \indx_1_7 [0] }, Y={ $0\indx_2_4[4:0] [3] $0\indx_2_4[4:0] [1:0] }
      New ports: A={ 1'1 \indx_1_8 [0] }, B={ 1'0 \indx_1_7 [0] }, Y=$0\indx_2_4[4:0] [1:0]
      New connections: $0\indx_2_4[4:0] [3] = 1'1
    Consolidated identical input bits for $mux cell $procmux$382:
      Old ports: A={ 3'101 \indx_1_6 [0] }, B={ 3'100 \indx_1_5 [0] }, Y=$0\indx_2_3[4:0]
      New ports: A={ 1'1 \indx_1_6 [0] }, B={ 1'0 \indx_1_5 [0] }, Y=$0\indx_2_3[4:0] [1:0]
      New connections: $0\indx_2_3[4:0] [3:2] = 2'10
    Consolidated identical input bits for $mux cell $procmux$388:
      Old ports: A={ 2'11 \indx_1_4 [0] }, B={ 2'10 \indx_1_3 [0] }, Y=$0\indx_2_2[4:0]
      New ports: A={ 1'1 \indx_1_4 [0] }, B={ 1'0 \indx_1_3 [0] }, Y=$0\indx_2_2[4:0] [1:0]
      New connections: $0\indx_2_2[4:0] [2] = 1'1
  Optimizing cells in module \find_max.
  Optimizing cells in module \lp_fltr.
  Optimizing cells in module \lp_fltr_v1.
  Optimizing cells in module \lp_fltr_v2.
  Optimizing cells in module \lp_fltr_v4.
  Optimizing cells in module \my_fifo_1.
  Optimizing cells in module \my_fifo_179.
  Optimizing cells in module \my_fifo_2.
  Optimizing cells in module \my_fifo_316.
  Optimizing cells in module \my_fifo_359.
  Optimizing cells in module \my_fifo_496.
  Optimizing cells in module \my_fifo_89.
  Optimizing cells in module \port_bus_1to0_1.
  Optimizing cells in module \quadintr_10_20.
  Optimizing cells in module \quadintr_5_20.
  Optimizing cells in module \scaler.
  Optimizing cells in module \scl_h_fltr.
  Optimizing cells in module \scl_v_fltr.
  Optimizing cells in module \sh_reg_1.
  Optimizing cells in module \sv_chip0_hierarchy_no_mem.
  Optimizing cells in module \v_fltr_316.
  Optimizing cells in module \v_fltr_496.
  Optimizing cells in module \wrapper_qs_intr_10_20.
  Optimizing cells in module \wrapper_qs_intr_5_20.
Performed a total of 6 changes.

16.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\combine_res'.
Finding identical cells in module `\find_max'.
Finding identical cells in module `\lp_fltr'.
Finding identical cells in module `\lp_fltr_v1'.
Finding identical cells in module `\lp_fltr_v2'.
Finding identical cells in module `\lp_fltr_v4'.
Finding identical cells in module `\my_fifo_1'.
Finding identical cells in module `\my_fifo_179'.
Finding identical cells in module `\my_fifo_2'.
Finding identical cells in module `\my_fifo_316'.
Finding identical cells in module `\my_fifo_359'.
Finding identical cells in module `\my_fifo_496'.
Finding identical cells in module `\my_fifo_89'.
Finding identical cells in module `\port_bus_1to0_1'.
Finding identical cells in module `\quadintr_10_20'.
Finding identical cells in module `\quadintr_5_20'.
Finding identical cells in module `\scaler'.
Finding identical cells in module `\scl_h_fltr'.
Finding identical cells in module `\scl_v_fltr'.
Finding identical cells in module `\sh_reg_1'.
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
Finding identical cells in module `\v_fltr_316'.
Finding identical cells in module `\v_fltr_496'.
Finding identical cells in module `\wrapper_qs_intr_10_20'.
Finding identical cells in module `\wrapper_qs_intr_5_20'.
Removed a total of 0 cells.

16.14. Executing OPT_SHARE pass.

16.15. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$2002 ($dff) from module find_max (D = \indx_2_2 [2], Q = \indx_3_1 [2], rval = 1'0).
Setting constant 0-bit at position 0 on $procdff$2374 ($dff) from module scl_h_fltr.
Setting constant 0-bit at position 0 on $procdff$2375 ($dff) from module scl_h_fltr.
Setting constant 0-bit at position 0 on $procdff$2406 ($dff) from module scl_v_fltr.
Setting constant 0-bit at position 0 on $procdff$2407 ($dff) from module scl_v_fltr.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$2971 ($dffe) from module sv_chip0_hierarchy_no_mem.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$2971 ($dffe) from module sv_chip0_hierarchy_no_mem.
Setting constant 1-bit at position 1 on $auto$ff.cc:266:slice$2974 ($sdff) from module sv_chip0_hierarchy_no_mem.

16.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \combine_res..
Finding unused cells or wires in module \find_max..
Finding unused cells or wires in module \lp_fltr..
Finding unused cells or wires in module \lp_fltr_v1..
Finding unused cells or wires in module \lp_fltr_v2..
Finding unused cells or wires in module \lp_fltr_v4..
Finding unused cells or wires in module \my_fifo_1..
Finding unused cells or wires in module \my_fifo_179..
Finding unused cells or wires in module \my_fifo_2..
Finding unused cells or wires in module \my_fifo_316..
Finding unused cells or wires in module \my_fifo_359..
Finding unused cells or wires in module \my_fifo_496..
Finding unused cells or wires in module \my_fifo_89..
Finding unused cells or wires in module \port_bus_1to0_1..
Finding unused cells or wires in module \quadintr_10_20..
Finding unused cells or wires in module \quadintr_5_20..
Finding unused cells or wires in module \scaler..
Finding unused cells or wires in module \scl_h_fltr..
Finding unused cells or wires in module \scl_v_fltr..
Finding unused cells or wires in module \sh_reg_1..
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..
Finding unused cells or wires in module \v_fltr_316..
Finding unused cells or wires in module \v_fltr_496..
Finding unused cells or wires in module \wrapper_qs_intr_10_20..
Finding unused cells or wires in module \wrapper_qs_intr_5_20..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

16.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module combine_res.
Optimizing module find_max.
Optimizing module lp_fltr.
Optimizing module lp_fltr_v1.
Optimizing module lp_fltr_v2.
Optimizing module lp_fltr_v4.
Optimizing module my_fifo_1.
Optimizing module my_fifo_179.
Optimizing module my_fifo_2.
Optimizing module my_fifo_316.
Optimizing module my_fifo_359.
Optimizing module my_fifo_496.
Optimizing module my_fifo_89.
Optimizing module port_bus_1to0_1.
Optimizing module quadintr_10_20.
Optimizing module quadintr_5_20.
Optimizing module scaler.
Optimizing module scl_h_fltr.
<suppressed ~2 debug messages>
Optimizing module scl_v_fltr.
<suppressed ~2 debug messages>
Optimizing module sh_reg_1.
Optimizing module sv_chip0_hierarchy_no_mem.
Optimizing module v_fltr_316.
Optimizing module v_fltr_496.
Optimizing module wrapper_qs_intr_10_20.
Optimizing module wrapper_qs_intr_5_20.

16.18. Rerunning OPT passes. (Maybe there is more to do..)

16.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \combine_res..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \find_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lp_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_179..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_316..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_359..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_89..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \port_bus_1to0_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \quadintr_10_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \quadintr_5_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scaler..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scl_h_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scl_v_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sh_reg_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sv_chip0_hierarchy_no_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \v_fltr_316..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \v_fltr_496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wrapper_qs_intr_10_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wrapper_qs_intr_5_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

16.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \combine_res.
  Optimizing cells in module \find_max.
  Optimizing cells in module \lp_fltr.
  Optimizing cells in module \lp_fltr_v1.
  Optimizing cells in module \lp_fltr_v2.
  Optimizing cells in module \lp_fltr_v4.
  Optimizing cells in module \my_fifo_1.
  Optimizing cells in module \my_fifo_179.
  Optimizing cells in module \my_fifo_2.
  Optimizing cells in module \my_fifo_316.
  Optimizing cells in module \my_fifo_359.
  Optimizing cells in module \my_fifo_496.
  Optimizing cells in module \my_fifo_89.
  Optimizing cells in module \port_bus_1to0_1.
  Optimizing cells in module \quadintr_10_20.
  Optimizing cells in module \quadintr_5_20.
  Optimizing cells in module \scaler.
  Optimizing cells in module \scl_h_fltr.
  Optimizing cells in module \scl_v_fltr.
  Optimizing cells in module \sh_reg_1.
  Optimizing cells in module \sv_chip0_hierarchy_no_mem.
  Optimizing cells in module \v_fltr_316.
  Optimizing cells in module \v_fltr_496.
  Optimizing cells in module \wrapper_qs_intr_10_20.
  Optimizing cells in module \wrapper_qs_intr_5_20.
Performed a total of 0 changes.

16.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\combine_res'.
Finding identical cells in module `\find_max'.
Finding identical cells in module `\lp_fltr'.
Finding identical cells in module `\lp_fltr_v1'.
Finding identical cells in module `\lp_fltr_v2'.
Finding identical cells in module `\lp_fltr_v4'.
Finding identical cells in module `\my_fifo_1'.
Finding identical cells in module `\my_fifo_179'.
Finding identical cells in module `\my_fifo_2'.
Finding identical cells in module `\my_fifo_316'.
Finding identical cells in module `\my_fifo_359'.
Finding identical cells in module `\my_fifo_496'.
Finding identical cells in module `\my_fifo_89'.
Finding identical cells in module `\port_bus_1to0_1'.
Finding identical cells in module `\quadintr_10_20'.
Finding identical cells in module `\quadintr_5_20'.
Finding identical cells in module `\scaler'.
Finding identical cells in module `\scl_h_fltr'.
Finding identical cells in module `\scl_v_fltr'.
Finding identical cells in module `\sh_reg_1'.
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
Finding identical cells in module `\v_fltr_316'.
Finding identical cells in module `\v_fltr_496'.
Finding identical cells in module `\wrapper_qs_intr_10_20'.
Finding identical cells in module `\wrapper_qs_intr_5_20'.
Removed a total of 0 cells.

16.22. Executing OPT_SHARE pass.

16.23. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 2 on $auto$ff.cc:266:slice$3117 ($dff) from module find_max.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3118 ($dff) from module find_max.
Setting constant 1-bit at position 3 on $auto$ff.cc:266:slice$3118 ($dff) from module find_max.
Setting constant 1-bit at position 2 on $auto$ff.cc:266:slice$3119 ($dff) from module find_max.
Setting constant 1-bit at position 3 on $auto$ff.cc:266:slice$3119 ($dff) from module find_max.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3141 ($dff) from module find_max.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3141 ($dff) from module find_max.
Setting constant 0-bit at position 2 on $procdff$2000 ($dff) from module find_max.
Setting constant 0-bit at position 3 on $procdff$2000 ($dff) from module find_max.
Setting constant 1-bit at position 4 on $procdff$2000 ($dff) from module find_max.
Setting constant 0-bit at position 4 on $procdff$2003 ($dff) from module find_max.

16.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \combine_res..
Finding unused cells or wires in module \find_max..
Finding unused cells or wires in module \lp_fltr..
Finding unused cells or wires in module \lp_fltr_v1..
Finding unused cells or wires in module \lp_fltr_v2..
Finding unused cells or wires in module \lp_fltr_v4..
Finding unused cells or wires in module \my_fifo_1..
Finding unused cells or wires in module \my_fifo_179..
Finding unused cells or wires in module \my_fifo_2..
Finding unused cells or wires in module \my_fifo_316..
Finding unused cells or wires in module \my_fifo_359..
Finding unused cells or wires in module \my_fifo_496..
Finding unused cells or wires in module \my_fifo_89..
Finding unused cells or wires in module \port_bus_1to0_1..
Finding unused cells or wires in module \quadintr_10_20..
Finding unused cells or wires in module \quadintr_5_20..
Finding unused cells or wires in module \scaler..
Finding unused cells or wires in module \scl_h_fltr..
Finding unused cells or wires in module \scl_v_fltr..
Finding unused cells or wires in module \sh_reg_1..
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..
Finding unused cells or wires in module \v_fltr_316..
Finding unused cells or wires in module \v_fltr_496..
Finding unused cells or wires in module \wrapper_qs_intr_10_20..
Finding unused cells or wires in module \wrapper_qs_intr_5_20..

16.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module combine_res.
Optimizing module find_max.
Optimizing module lp_fltr.
Optimizing module lp_fltr_v1.
Optimizing module lp_fltr_v2.
Optimizing module lp_fltr_v4.
Optimizing module my_fifo_1.
Optimizing module my_fifo_179.
Optimizing module my_fifo_2.
Optimizing module my_fifo_316.
Optimizing module my_fifo_359.
Optimizing module my_fifo_496.
Optimizing module my_fifo_89.
Optimizing module port_bus_1to0_1.
Optimizing module quadintr_10_20.
Optimizing module quadintr_5_20.
Optimizing module scaler.
Optimizing module scl_h_fltr.
Optimizing module scl_v_fltr.
Optimizing module sh_reg_1.
Optimizing module sv_chip0_hierarchy_no_mem.
Optimizing module v_fltr_316.
Optimizing module v_fltr_496.
Optimizing module wrapper_qs_intr_10_20.
Optimizing module wrapper_qs_intr_5_20.

16.26. Rerunning OPT passes. (Maybe there is more to do..)

16.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \combine_res..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \find_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lp_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_179..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_316..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_359..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_89..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \port_bus_1to0_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \quadintr_10_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \quadintr_5_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scaler..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scl_h_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scl_v_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sh_reg_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sv_chip0_hierarchy_no_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \v_fltr_316..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \v_fltr_496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wrapper_qs_intr_10_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wrapper_qs_intr_5_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

16.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \combine_res.
  Optimizing cells in module \find_max.
    Consolidated identical input bits for $mux cell $procmux$346:
      Old ports: A={ 1'0 \indx_3_2 [3:0] }, B={ 2'00 \indx_3_1 [2:0] }, Y=$0\indx_4_1[4:0]
      New ports: A=\indx_3_2 [3:0], B={ 1'0 \indx_3_1 [2:0] }, Y=$0\indx_4_1[4:0] [3:0]
      New connections: $0\indx_4_1[4:0] [4] = 1'0
    Consolidated identical input bits for $mux cell $procmux$358:
      Old ports: A={ 2'11 \indx_2_4 [1:0] }, B={ 2'10 \indx_2_3 [1:0] }, Y=$0\indx_3_2[4:0] [3:0]
      New ports: A={ 1'1 \indx_2_4 [1:0] }, B={ 1'0 \indx_2_3 [1:0] }, Y=$0\indx_3_2[4:0] [2:0]
      New connections: $0\indx_3_2[4:0] [3] = 1'1
  Optimizing cells in module \find_max.
  Optimizing cells in module \lp_fltr.
  Optimizing cells in module \lp_fltr_v1.
  Optimizing cells in module \lp_fltr_v2.
  Optimizing cells in module \lp_fltr_v4.
  Optimizing cells in module \my_fifo_1.
  Optimizing cells in module \my_fifo_179.
  Optimizing cells in module \my_fifo_2.
  Optimizing cells in module \my_fifo_316.
  Optimizing cells in module \my_fifo_359.
  Optimizing cells in module \my_fifo_496.
  Optimizing cells in module \my_fifo_89.
  Optimizing cells in module \port_bus_1to0_1.
  Optimizing cells in module \quadintr_10_20.
  Optimizing cells in module \quadintr_5_20.
  Optimizing cells in module \scaler.
  Optimizing cells in module \scl_h_fltr.
  Optimizing cells in module \scl_v_fltr.
  Optimizing cells in module \sh_reg_1.
  Optimizing cells in module \sv_chip0_hierarchy_no_mem.
  Optimizing cells in module \v_fltr_316.
  Optimizing cells in module \v_fltr_496.
  Optimizing cells in module \wrapper_qs_intr_10_20.
  Optimizing cells in module \wrapper_qs_intr_5_20.
Performed a total of 2 changes.

16.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\combine_res'.
Finding identical cells in module `\find_max'.
Finding identical cells in module `\lp_fltr'.
Finding identical cells in module `\lp_fltr_v1'.
Finding identical cells in module `\lp_fltr_v2'.
Finding identical cells in module `\lp_fltr_v4'.
Finding identical cells in module `\my_fifo_1'.
Finding identical cells in module `\my_fifo_179'.
Finding identical cells in module `\my_fifo_2'.
Finding identical cells in module `\my_fifo_316'.
Finding identical cells in module `\my_fifo_359'.
Finding identical cells in module `\my_fifo_496'.
Finding identical cells in module `\my_fifo_89'.
Finding identical cells in module `\port_bus_1to0_1'.
Finding identical cells in module `\quadintr_10_20'.
Finding identical cells in module `\quadintr_5_20'.
Finding identical cells in module `\scaler'.
Finding identical cells in module `\scl_h_fltr'.
Finding identical cells in module `\scl_v_fltr'.
Finding identical cells in module `\sh_reg_1'.
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
Finding identical cells in module `\v_fltr_316'.
Finding identical cells in module `\v_fltr_496'.
Finding identical cells in module `\wrapper_qs_intr_10_20'.
Finding identical cells in module `\wrapper_qs_intr_5_20'.
Removed a total of 0 cells.

16.30. Executing OPT_SHARE pass.

16.31. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$2005 ($dff) from module find_max (D = \indx_3_2 [3], Q = \indx_4_1 [3], rval = 1'0).
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3073 ($sdff) from module find_max.
Setting constant 1-bit at position 4 on $auto$ff.cc:266:slice$3073 ($sdff) from module find_max.

16.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \combine_res..
Finding unused cells or wires in module \find_max..
Finding unused cells or wires in module \lp_fltr..
Finding unused cells or wires in module \lp_fltr_v1..
Finding unused cells or wires in module \lp_fltr_v2..
Finding unused cells or wires in module \lp_fltr_v4..
Finding unused cells or wires in module \my_fifo_1..
Finding unused cells or wires in module \my_fifo_179..
Finding unused cells or wires in module \my_fifo_2..
Finding unused cells or wires in module \my_fifo_316..
Finding unused cells or wires in module \my_fifo_359..
Finding unused cells or wires in module \my_fifo_496..
Finding unused cells or wires in module \my_fifo_89..
Finding unused cells or wires in module \port_bus_1to0_1..
Finding unused cells or wires in module \quadintr_10_20..
Finding unused cells or wires in module \quadintr_5_20..
Finding unused cells or wires in module \scaler..
Finding unused cells or wires in module \scl_h_fltr..
Finding unused cells or wires in module \scl_v_fltr..
Finding unused cells or wires in module \sh_reg_1..
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..
Finding unused cells or wires in module \v_fltr_316..
Finding unused cells or wires in module \v_fltr_496..
Finding unused cells or wires in module \wrapper_qs_intr_10_20..
Finding unused cells or wires in module \wrapper_qs_intr_5_20..

16.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module combine_res.
Optimizing module find_max.
Optimizing module lp_fltr.
Optimizing module lp_fltr_v1.
Optimizing module lp_fltr_v2.
Optimizing module lp_fltr_v4.
Optimizing module my_fifo_1.
Optimizing module my_fifo_179.
Optimizing module my_fifo_2.
Optimizing module my_fifo_316.
Optimizing module my_fifo_359.
Optimizing module my_fifo_496.
Optimizing module my_fifo_89.
Optimizing module port_bus_1to0_1.
Optimizing module quadintr_10_20.
Optimizing module quadintr_5_20.
Optimizing module scaler.
Optimizing module scl_h_fltr.
Optimizing module scl_v_fltr.
Optimizing module sh_reg_1.
Optimizing module sv_chip0_hierarchy_no_mem.
Optimizing module v_fltr_316.
Optimizing module v_fltr_496.
Optimizing module wrapper_qs_intr_10_20.
Optimizing module wrapper_qs_intr_5_20.

16.34. Rerunning OPT passes. (Maybe there is more to do..)

16.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \combine_res..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \find_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lp_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_179..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_316..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_359..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_89..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \port_bus_1to0_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \quadintr_10_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \quadintr_5_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scaler..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scl_h_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scl_v_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sh_reg_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sv_chip0_hierarchy_no_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \v_fltr_316..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \v_fltr_496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wrapper_qs_intr_10_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wrapper_qs_intr_5_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

16.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \combine_res.
  Optimizing cells in module \find_max.
  Optimizing cells in module \lp_fltr.
  Optimizing cells in module \lp_fltr_v1.
  Optimizing cells in module \lp_fltr_v2.
  Optimizing cells in module \lp_fltr_v4.
  Optimizing cells in module \my_fifo_1.
  Optimizing cells in module \my_fifo_179.
  Optimizing cells in module \my_fifo_2.
  Optimizing cells in module \my_fifo_316.
  Optimizing cells in module \my_fifo_359.
  Optimizing cells in module \my_fifo_496.
  Optimizing cells in module \my_fifo_89.
  Optimizing cells in module \port_bus_1to0_1.
  Optimizing cells in module \quadintr_10_20.
  Optimizing cells in module \quadintr_5_20.
  Optimizing cells in module \scaler.
  Optimizing cells in module \scl_h_fltr.
  Optimizing cells in module \scl_v_fltr.
  Optimizing cells in module \sh_reg_1.
  Optimizing cells in module \sv_chip0_hierarchy_no_mem.
  Optimizing cells in module \v_fltr_316.
  Optimizing cells in module \v_fltr_496.
  Optimizing cells in module \wrapper_qs_intr_10_20.
  Optimizing cells in module \wrapper_qs_intr_5_20.
Performed a total of 0 changes.

16.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\combine_res'.
Finding identical cells in module `\find_max'.
Finding identical cells in module `\lp_fltr'.
Finding identical cells in module `\lp_fltr_v1'.
Finding identical cells in module `\lp_fltr_v2'.
Finding identical cells in module `\lp_fltr_v4'.
Finding identical cells in module `\my_fifo_1'.
Finding identical cells in module `\my_fifo_179'.
Finding identical cells in module `\my_fifo_2'.
Finding identical cells in module `\my_fifo_316'.
Finding identical cells in module `\my_fifo_359'.
Finding identical cells in module `\my_fifo_496'.
Finding identical cells in module `\my_fifo_89'.
Finding identical cells in module `\port_bus_1to0_1'.
Finding identical cells in module `\quadintr_10_20'.
Finding identical cells in module `\quadintr_5_20'.
Finding identical cells in module `\scaler'.
Finding identical cells in module `\scl_h_fltr'.
Finding identical cells in module `\scl_v_fltr'.
Finding identical cells in module `\sh_reg_1'.
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
Finding identical cells in module `\v_fltr_316'.
Finding identical cells in module `\v_fltr_496'.
Finding identical cells in module `\wrapper_qs_intr_10_20'.
Finding identical cells in module `\wrapper_qs_intr_5_20'.
Removed a total of 0 cells.

16.38. Executing OPT_SHARE pass.

16.39. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 3 on $auto$ff.cc:266:slice$3153 ($dff) from module find_max.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3155 ($dff) from module find_max.
Setting constant 0-bit at position 3 on $procdff$2006 ($dff) from module find_max.
Setting constant 1-bit at position 4 on $procdff$2006 ($dff) from module find_max.

16.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \combine_res..
Finding unused cells or wires in module \find_max..
Finding unused cells or wires in module \lp_fltr..
Finding unused cells or wires in module \lp_fltr_v1..
Finding unused cells or wires in module \lp_fltr_v2..
Finding unused cells or wires in module \lp_fltr_v4..
Finding unused cells or wires in module \my_fifo_1..
Finding unused cells or wires in module \my_fifo_179..
Finding unused cells or wires in module \my_fifo_2..
Finding unused cells or wires in module \my_fifo_316..
Finding unused cells or wires in module \my_fifo_359..
Finding unused cells or wires in module \my_fifo_496..
Finding unused cells or wires in module \my_fifo_89..
Finding unused cells or wires in module \port_bus_1to0_1..
Finding unused cells or wires in module \quadintr_10_20..
Finding unused cells or wires in module \quadintr_5_20..
Finding unused cells or wires in module \scaler..
Finding unused cells or wires in module \scl_h_fltr..
Finding unused cells or wires in module \scl_v_fltr..
Finding unused cells or wires in module \sh_reg_1..
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..
Finding unused cells or wires in module \v_fltr_316..
Finding unused cells or wires in module \v_fltr_496..
Finding unused cells or wires in module \wrapper_qs_intr_10_20..
Finding unused cells or wires in module \wrapper_qs_intr_5_20..

16.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module combine_res.
Optimizing module find_max.
Optimizing module lp_fltr.
Optimizing module lp_fltr_v1.
Optimizing module lp_fltr_v2.
Optimizing module lp_fltr_v4.
Optimizing module my_fifo_1.
Optimizing module my_fifo_179.
Optimizing module my_fifo_2.
Optimizing module my_fifo_316.
Optimizing module my_fifo_359.
Optimizing module my_fifo_496.
Optimizing module my_fifo_89.
Optimizing module port_bus_1to0_1.
Optimizing module quadintr_10_20.
Optimizing module quadintr_5_20.
Optimizing module scaler.
Optimizing module scl_h_fltr.
Optimizing module scl_v_fltr.
Optimizing module sh_reg_1.
Optimizing module sv_chip0_hierarchy_no_mem.
Optimizing module v_fltr_316.
Optimizing module v_fltr_496.
Optimizing module wrapper_qs_intr_10_20.
Optimizing module wrapper_qs_intr_5_20.

16.42. Rerunning OPT passes. (Maybe there is more to do..)

16.43. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \combine_res..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \find_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lp_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_179..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_316..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_359..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_89..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \port_bus_1to0_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \quadintr_10_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \quadintr_5_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scaler..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scl_h_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scl_v_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sh_reg_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sv_chip0_hierarchy_no_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \v_fltr_316..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \v_fltr_496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wrapper_qs_intr_10_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wrapper_qs_intr_5_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

16.44. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \combine_res.
  Optimizing cells in module \find_max.
  Optimizing cells in module \lp_fltr.
  Optimizing cells in module \lp_fltr_v1.
  Optimizing cells in module \lp_fltr_v2.
  Optimizing cells in module \lp_fltr_v4.
  Optimizing cells in module \my_fifo_1.
  Optimizing cells in module \my_fifo_179.
  Optimizing cells in module \my_fifo_2.
  Optimizing cells in module \my_fifo_316.
  Optimizing cells in module \my_fifo_359.
  Optimizing cells in module \my_fifo_496.
  Optimizing cells in module \my_fifo_89.
  Optimizing cells in module \port_bus_1to0_1.
  Optimizing cells in module \quadintr_10_20.
  Optimizing cells in module \quadintr_5_20.
  Optimizing cells in module \scaler.
  Optimizing cells in module \scl_h_fltr.
  Optimizing cells in module \scl_v_fltr.
  Optimizing cells in module \sh_reg_1.
  Optimizing cells in module \sv_chip0_hierarchy_no_mem.
  Optimizing cells in module \v_fltr_316.
  Optimizing cells in module \v_fltr_496.
  Optimizing cells in module \wrapper_qs_intr_10_20.
  Optimizing cells in module \wrapper_qs_intr_5_20.
Performed a total of 0 changes.

16.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\combine_res'.
Finding identical cells in module `\find_max'.
Finding identical cells in module `\lp_fltr'.
Finding identical cells in module `\lp_fltr_v1'.
Finding identical cells in module `\lp_fltr_v2'.
Finding identical cells in module `\lp_fltr_v4'.
Finding identical cells in module `\my_fifo_1'.
Finding identical cells in module `\my_fifo_179'.
Finding identical cells in module `\my_fifo_2'.
Finding identical cells in module `\my_fifo_316'.
Finding identical cells in module `\my_fifo_359'.
Finding identical cells in module `\my_fifo_496'.
Finding identical cells in module `\my_fifo_89'.
Finding identical cells in module `\port_bus_1to0_1'.
Finding identical cells in module `\quadintr_10_20'.
Finding identical cells in module `\quadintr_5_20'.
Finding identical cells in module `\scaler'.
Finding identical cells in module `\scl_h_fltr'.
Finding identical cells in module `\scl_v_fltr'.
Finding identical cells in module `\sh_reg_1'.
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
Finding identical cells in module `\v_fltr_316'.
Finding identical cells in module `\v_fltr_496'.
Finding identical cells in module `\wrapper_qs_intr_10_20'.
Finding identical cells in module `\wrapper_qs_intr_5_20'.
Removed a total of 0 cells.

16.46. Executing OPT_SHARE pass.

16.47. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$2007 ($dff) from module find_max (D = \indx_4_1 [3], Q = \indx_5_1 [3], rval = 1'0).

16.48. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \combine_res..
Finding unused cells or wires in module \find_max..
Finding unused cells or wires in module \lp_fltr..
Finding unused cells or wires in module \lp_fltr_v1..
Finding unused cells or wires in module \lp_fltr_v2..
Finding unused cells or wires in module \lp_fltr_v4..
Finding unused cells or wires in module \my_fifo_1..
Finding unused cells or wires in module \my_fifo_179..
Finding unused cells or wires in module \my_fifo_2..
Finding unused cells or wires in module \my_fifo_316..
Finding unused cells or wires in module \my_fifo_359..
Finding unused cells or wires in module \my_fifo_496..
Finding unused cells or wires in module \my_fifo_89..
Finding unused cells or wires in module \port_bus_1to0_1..
Finding unused cells or wires in module \quadintr_10_20..
Finding unused cells or wires in module \quadintr_5_20..
Finding unused cells or wires in module \scaler..
Finding unused cells or wires in module \scl_h_fltr..
Finding unused cells or wires in module \scl_v_fltr..
Finding unused cells or wires in module \sh_reg_1..
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..
Finding unused cells or wires in module \v_fltr_316..
Finding unused cells or wires in module \v_fltr_496..
Finding unused cells or wires in module \wrapper_qs_intr_10_20..
Finding unused cells or wires in module \wrapper_qs_intr_5_20..

16.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module combine_res.
Optimizing module find_max.
Optimizing module lp_fltr.
Optimizing module lp_fltr_v1.
Optimizing module lp_fltr_v2.
Optimizing module lp_fltr_v4.
Optimizing module my_fifo_1.
Optimizing module my_fifo_179.
Optimizing module my_fifo_2.
Optimizing module my_fifo_316.
Optimizing module my_fifo_359.
Optimizing module my_fifo_496.
Optimizing module my_fifo_89.
Optimizing module port_bus_1to0_1.
Optimizing module quadintr_10_20.
Optimizing module quadintr_5_20.
Optimizing module scaler.
Optimizing module scl_h_fltr.
Optimizing module scl_v_fltr.
Optimizing module sh_reg_1.
Optimizing module sv_chip0_hierarchy_no_mem.
Optimizing module v_fltr_316.
Optimizing module v_fltr_496.
Optimizing module wrapper_qs_intr_10_20.
Optimizing module wrapper_qs_intr_5_20.

16.50. Rerunning OPT passes. (Maybe there is more to do..)

16.51. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \combine_res..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \find_max..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lp_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lp_fltr_v4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_179..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_316..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_359..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \my_fifo_89..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \port_bus_1to0_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \quadintr_10_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \quadintr_5_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scaler..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scl_h_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \scl_v_fltr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sh_reg_1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sv_chip0_hierarchy_no_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \v_fltr_316..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \v_fltr_496..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wrapper_qs_intr_10_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wrapper_qs_intr_5_20..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

16.52. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \combine_res.
  Optimizing cells in module \find_max.
  Optimizing cells in module \lp_fltr.
  Optimizing cells in module \lp_fltr_v1.
  Optimizing cells in module \lp_fltr_v2.
  Optimizing cells in module \lp_fltr_v4.
  Optimizing cells in module \my_fifo_1.
  Optimizing cells in module \my_fifo_179.
  Optimizing cells in module \my_fifo_2.
  Optimizing cells in module \my_fifo_316.
  Optimizing cells in module \my_fifo_359.
  Optimizing cells in module \my_fifo_496.
  Optimizing cells in module \my_fifo_89.
  Optimizing cells in module \port_bus_1to0_1.
  Optimizing cells in module \quadintr_10_20.
  Optimizing cells in module \quadintr_5_20.
  Optimizing cells in module \scaler.
  Optimizing cells in module \scl_h_fltr.
  Optimizing cells in module \scl_v_fltr.
  Optimizing cells in module \sh_reg_1.
  Optimizing cells in module \sv_chip0_hierarchy_no_mem.
  Optimizing cells in module \v_fltr_316.
  Optimizing cells in module \v_fltr_496.
  Optimizing cells in module \wrapper_qs_intr_10_20.
  Optimizing cells in module \wrapper_qs_intr_5_20.
Performed a total of 0 changes.

16.53. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\combine_res'.
Finding identical cells in module `\find_max'.
Finding identical cells in module `\lp_fltr'.
Finding identical cells in module `\lp_fltr_v1'.
Finding identical cells in module `\lp_fltr_v2'.
Finding identical cells in module `\lp_fltr_v4'.
Finding identical cells in module `\my_fifo_1'.
Finding identical cells in module `\my_fifo_179'.
Finding identical cells in module `\my_fifo_2'.
Finding identical cells in module `\my_fifo_316'.
Finding identical cells in module `\my_fifo_359'.
Finding identical cells in module `\my_fifo_496'.
Finding identical cells in module `\my_fifo_89'.
Finding identical cells in module `\port_bus_1to0_1'.
Finding identical cells in module `\quadintr_10_20'.
Finding identical cells in module `\quadintr_5_20'.
Finding identical cells in module `\scaler'.
Finding identical cells in module `\scl_h_fltr'.
Finding identical cells in module `\scl_v_fltr'.
Finding identical cells in module `\sh_reg_1'.
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
Finding identical cells in module `\v_fltr_316'.
Finding identical cells in module `\v_fltr_496'.
Finding identical cells in module `\wrapper_qs_intr_10_20'.
Finding identical cells in module `\wrapper_qs_intr_5_20'.
Removed a total of 0 cells.

16.54. Executing OPT_SHARE pass.

16.55. Executing OPT_DFF pass (perform DFF optimizations).

16.56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \combine_res..
Finding unused cells or wires in module \find_max..
Finding unused cells or wires in module \lp_fltr..
Finding unused cells or wires in module \lp_fltr_v1..
Finding unused cells or wires in module \lp_fltr_v2..
Finding unused cells or wires in module \lp_fltr_v4..
Finding unused cells or wires in module \my_fifo_1..
Finding unused cells or wires in module \my_fifo_179..
Finding unused cells or wires in module \my_fifo_2..
Finding unused cells or wires in module \my_fifo_316..
Finding unused cells or wires in module \my_fifo_359..
Finding unused cells or wires in module \my_fifo_496..
Finding unused cells or wires in module \my_fifo_89..
Finding unused cells or wires in module \port_bus_1to0_1..
Finding unused cells or wires in module \quadintr_10_20..
Finding unused cells or wires in module \quadintr_5_20..
Finding unused cells or wires in module \scaler..
Finding unused cells or wires in module \scl_h_fltr..
Finding unused cells or wires in module \scl_v_fltr..
Finding unused cells or wires in module \sh_reg_1..
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..
Finding unused cells or wires in module \v_fltr_316..
Finding unused cells or wires in module \v_fltr_496..
Finding unused cells or wires in module \wrapper_qs_intr_10_20..
Finding unused cells or wires in module \wrapper_qs_intr_5_20..

16.57. Executing OPT_EXPR pass (perform const folding).
Optimizing module combine_res.
Optimizing module find_max.
Optimizing module lp_fltr.
Optimizing module lp_fltr_v1.
Optimizing module lp_fltr_v2.
Optimizing module lp_fltr_v4.
Optimizing module my_fifo_1.
Optimizing module my_fifo_179.
Optimizing module my_fifo_2.
Optimizing module my_fifo_316.
Optimizing module my_fifo_359.
Optimizing module my_fifo_496.
Optimizing module my_fifo_89.
Optimizing module port_bus_1to0_1.
Optimizing module quadintr_10_20.
Optimizing module quadintr_5_20.
Optimizing module scaler.
Optimizing module scl_h_fltr.
Optimizing module scl_v_fltr.
Optimizing module sh_reg_1.
Optimizing module sv_chip0_hierarchy_no_mem.
Optimizing module v_fltr_316.
Optimizing module v_fltr_496.
Optimizing module wrapper_qs_intr_10_20.
Optimizing module wrapper_qs_intr_5_20.

16.58. Finished OPT passes. (There is nothing left to do.)

17. Executing MEMORY pass.

17.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

17.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

17.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

17.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

17.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

17.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \combine_res..
Finding unused cells or wires in module \find_max..
Finding unused cells or wires in module \lp_fltr..
Finding unused cells or wires in module \lp_fltr_v1..
Finding unused cells or wires in module \lp_fltr_v2..
Finding unused cells or wires in module \lp_fltr_v4..
Finding unused cells or wires in module \my_fifo_1..
Finding unused cells or wires in module \my_fifo_179..
Finding unused cells or wires in module \my_fifo_2..
Finding unused cells or wires in module \my_fifo_316..
Finding unused cells or wires in module \my_fifo_359..
Finding unused cells or wires in module \my_fifo_496..
Finding unused cells or wires in module \my_fifo_89..
Finding unused cells or wires in module \port_bus_1to0_1..
Finding unused cells or wires in module \quadintr_10_20..
Finding unused cells or wires in module \quadintr_5_20..
Finding unused cells or wires in module \scaler..
Finding unused cells or wires in module \scl_h_fltr..
Finding unused cells or wires in module \scl_v_fltr..
Finding unused cells or wires in module \sh_reg_1..
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..
Finding unused cells or wires in module \v_fltr_316..
Finding unused cells or wires in module \v_fltr_496..
Finding unused cells or wires in module \wrapper_qs_intr_10_20..
Finding unused cells or wires in module \wrapper_qs_intr_5_20..

17.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

17.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

17.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \combine_res..
Finding unused cells or wires in module \find_max..
Finding unused cells or wires in module \lp_fltr..
Finding unused cells or wires in module \lp_fltr_v1..
Finding unused cells or wires in module \lp_fltr_v2..
Finding unused cells or wires in module \lp_fltr_v4..
Finding unused cells or wires in module \my_fifo_1..
Finding unused cells or wires in module \my_fifo_179..
Finding unused cells or wires in module \my_fifo_2..
Finding unused cells or wires in module \my_fifo_316..
Finding unused cells or wires in module \my_fifo_359..
Finding unused cells or wires in module \my_fifo_496..
Finding unused cells or wires in module \my_fifo_89..
Finding unused cells or wires in module \port_bus_1to0_1..
Finding unused cells or wires in module \quadintr_10_20..
Finding unused cells or wires in module \quadintr_5_20..
Finding unused cells or wires in module \scaler..
Finding unused cells or wires in module \scl_h_fltr..
Finding unused cells or wires in module \scl_v_fltr..
Finding unused cells or wires in module \sh_reg_1..
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..
Finding unused cells or wires in module \v_fltr_316..
Finding unused cells or wires in module \v_fltr_496..
Finding unused cells or wires in module \wrapper_qs_intr_10_20..
Finding unused cells or wires in module \wrapper_qs_intr_5_20..

17.10. Executing MEMORY_COLLECT pass (generating $mem cells).

18. Executing FLATTEN pass (flatten design).
Deleting now unused module combine_res.
Deleting now unused module find_max.
Deleting now unused module lp_fltr.
Deleting now unused module lp_fltr_v1.
Deleting now unused module lp_fltr_v2.
Deleting now unused module lp_fltr_v4.
Deleting now unused module my_fifo_1.
Deleting now unused module my_fifo_179.
Deleting now unused module my_fifo_2.
Deleting now unused module my_fifo_316.
Deleting now unused module my_fifo_359.
Deleting now unused module my_fifo_496.
Deleting now unused module my_fifo_89.
Deleting now unused module port_bus_1to0_1.
Deleting now unused module quadintr_10_20.
Deleting now unused module quadintr_5_20.
Deleting now unused module scaler.
Deleting now unused module scl_h_fltr.
Deleting now unused module scl_v_fltr.
Deleting now unused module sh_reg_1.
Deleting now unused module v_fltr_316.
Deleting now unused module v_fltr_496.
Deleting now unused module wrapper_qs_intr_10_20.
Deleting now unused module wrapper_qs_intr_5_20.
<suppressed ~192 debug messages>

19. Executing OPT pass (performing simple optimizations).

19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sv_chip0_hierarchy_no_mem.

19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
<suppressed ~432 debug messages>
Removed a total of 144 cells.

19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sv_chip0_hierarchy_no_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sv_chip0_hierarchy_no_mem.
Performed a total of 0 changes.

19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
Removed a total of 0 cells.

19.6. Executing OPT_SHARE pass.

19.7. Executing OPT_DFF pass (perform DFF optimizations).
Removing always-active EN on $flatten\ints_fifo_2_gen_1_9.$auto$ff.cc:266:slice$2605 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_8.$auto$ff.cc:266:slice$2605 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_7.$auto$ff.cc:266:slice$2605 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_6.$auto$ff.cc:266:slice$2605 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_5.$auto$ff.cc:266:slice$2605 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_4.$auto$ff.cc:266:slice$2605 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_3.$auto$ff.cc:266:slice$2605 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_20.$auto$ff.cc:266:slice$2605 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_2.$auto$ff.cc:266:slice$2605 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_19.$auto$ff.cc:266:slice$2605 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_18.$auto$ff.cc:266:slice$2605 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_17.$auto$ff.cc:266:slice$2605 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_16.$auto$ff.cc:266:slice$2605 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_15.$auto$ff.cc:266:slice$2605 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_14.$auto$ff.cc:266:slice$2605 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_13.$auto$ff.cc:266:slice$2605 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_12.$auto$ff.cc:266:slice$2605 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_11.$auto$ff.cc:266:slice$2605 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_10.$auto$ff.cc:266:slice$2605 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_1.$auto$ff.cc:266:slice$2605 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_0.$auto$ff.cc:266:slice$2605 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_9.$auto$ff.cc:266:slice$2599 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_8.$auto$ff.cc:266:slice$2599 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_7.$auto$ff.cc:266:slice$2599 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_6.$auto$ff.cc:266:slice$2599 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_5.$auto$ff.cc:266:slice$2599 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_4.$auto$ff.cc:266:slice$2599 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_3.$auto$ff.cc:266:slice$2599 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_20.$auto$ff.cc:266:slice$2599 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_2.$auto$ff.cc:266:slice$2599 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_19.$auto$ff.cc:266:slice$2599 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_18.$auto$ff.cc:266:slice$2599 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_17.$auto$ff.cc:266:slice$2599 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_16.$auto$ff.cc:266:slice$2599 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_15.$auto$ff.cc:266:slice$2599 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_14.$auto$ff.cc:266:slice$2599 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_13.$auto$ff.cc:266:slice$2599 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_12.$auto$ff.cc:266:slice$2599 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_11.$auto$ff.cc:266:slice$2599 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_10.$auto$ff.cc:266:slice$2599 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_1.$auto$ff.cc:266:slice$2599 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_0.$auto$ff.cc:266:slice$2599 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_9.$auto$ff.cc:266:slice$2572 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_9.$auto$ff.cc:266:slice$2573 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_7.$auto$ff.cc:266:slice$2572 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_7.$auto$ff.cc:266:slice$2573 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_9.$auto$ff.cc:266:slice$2574 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_7.$auto$ff.cc:266:slice$2574 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_10.$auto$ff.cc:266:slice$2573 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_6.$auto$ff.cc:266:slice$2572 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_6.$auto$ff.cc:266:slice$2573 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_6.$auto$ff.cc:266:slice$2574 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_10.$auto$ff.cc:266:slice$2574 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_5.$auto$ff.cc:266:slice$2572 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_5.$auto$ff.cc:266:slice$2573 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_0.$auto$ff.cc:266:slice$2574 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_8.$auto$ff.cc:266:slice$2572 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_8.$auto$ff.cc:266:slice$2573 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_8.$auto$ff.cc:266:slice$2574 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_5.$auto$ff.cc:266:slice$2574 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_4.$auto$ff.cc:266:slice$2572 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_4.$auto$ff.cc:266:slice$2573 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_4.$auto$ff.cc:266:slice$2574 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_3.$auto$ff.cc:266:slice$2572 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_3.$auto$ff.cc:266:slice$2573 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_3.$auto$ff.cc:266:slice$2574 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_10.$auto$ff.cc:266:slice$2572 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_9.$auto$ff.cc:266:slice$2603 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_9.$auto$ff.cc:266:slice$2604 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_8.$auto$ff.cc:266:slice$2603 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_8.$auto$ff.cc:266:slice$2604 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_7.$auto$ff.cc:266:slice$2603 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_7.$auto$ff.cc:266:slice$2604 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_6.$auto$ff.cc:266:slice$2603 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_6.$auto$ff.cc:266:slice$2604 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_5.$auto$ff.cc:266:slice$2603 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_5.$auto$ff.cc:266:slice$2604 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_4.$auto$ff.cc:266:slice$2603 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_4.$auto$ff.cc:266:slice$2604 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_3.$auto$ff.cc:266:slice$2603 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_3.$auto$ff.cc:266:slice$2604 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_20.$auto$ff.cc:266:slice$2603 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_20.$auto$ff.cc:266:slice$2604 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_2.$auto$ff.cc:266:slice$2603 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_2.$auto$ff.cc:266:slice$2604 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_19.$auto$ff.cc:266:slice$2603 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_19.$auto$ff.cc:266:slice$2604 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_18.$auto$ff.cc:266:slice$2603 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_18.$auto$ff.cc:266:slice$2604 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_17.$auto$ff.cc:266:slice$2603 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_17.$auto$ff.cc:266:slice$2604 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_16.$auto$ff.cc:266:slice$2603 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_16.$auto$ff.cc:266:slice$2604 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_15.$auto$ff.cc:266:slice$2603 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_15.$auto$ff.cc:266:slice$2604 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_14.$auto$ff.cc:266:slice$2603 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_14.$auto$ff.cc:266:slice$2604 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_13.$auto$ff.cc:266:slice$2603 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_13.$auto$ff.cc:266:slice$2604 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_12.$auto$ff.cc:266:slice$2603 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_12.$auto$ff.cc:266:slice$2604 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_11.$auto$ff.cc:266:slice$2603 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_11.$auto$ff.cc:266:slice$2604 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_10.$auto$ff.cc:266:slice$2603 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_10.$auto$ff.cc:266:slice$2604 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_1.$auto$ff.cc:266:slice$2603 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_1.$auto$ff.cc:266:slice$2604 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_0.$auto$ff.cc:266:slice$2603 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_2_gen_1_0.$auto$ff.cc:266:slice$2604 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_9.$auto$ff.cc:266:slice$2597 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_9.$auto$ff.cc:266:slice$2598 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_8.$auto$ff.cc:266:slice$2597 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_8.$auto$ff.cc:266:slice$2598 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_7.$auto$ff.cc:266:slice$2597 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_7.$auto$ff.cc:266:slice$2598 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_6.$auto$ff.cc:266:slice$2597 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_6.$auto$ff.cc:266:slice$2598 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_5.$auto$ff.cc:266:slice$2597 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_5.$auto$ff.cc:266:slice$2598 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_4.$auto$ff.cc:266:slice$2597 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_4.$auto$ff.cc:266:slice$2598 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_3.$auto$ff.cc:266:slice$2597 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_3.$auto$ff.cc:266:slice$2598 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_20.$auto$ff.cc:266:slice$2597 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_20.$auto$ff.cc:266:slice$2598 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_2.$auto$ff.cc:266:slice$2597 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_2.$auto$ff.cc:266:slice$2598 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_19.$auto$ff.cc:266:slice$2597 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_19.$auto$ff.cc:266:slice$2598 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_18.$auto$ff.cc:266:slice$2597 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_18.$auto$ff.cc:266:slice$2598 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_17.$auto$ff.cc:266:slice$2597 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_17.$auto$ff.cc:266:slice$2598 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_16.$auto$ff.cc:266:slice$2597 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_16.$auto$ff.cc:266:slice$2598 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_15.$auto$ff.cc:266:slice$2597 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_15.$auto$ff.cc:266:slice$2598 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_14.$auto$ff.cc:266:slice$2597 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_14.$auto$ff.cc:266:slice$2598 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_13.$auto$ff.cc:266:slice$2597 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_13.$auto$ff.cc:266:slice$2598 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_12.$auto$ff.cc:266:slice$2597 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_12.$auto$ff.cc:266:slice$2598 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_11.$auto$ff.cc:266:slice$2597 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_11.$auto$ff.cc:266:slice$2598 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_10.$auto$ff.cc:266:slice$2597 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_10.$auto$ff.cc:266:slice$2598 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_1.$auto$ff.cc:266:slice$2597 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_1.$auto$ff.cc:266:slice$2598 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_0.$auto$ff.cc:266:slice$2597 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\ints_fifo_1_gen_1_0.$auto$ff.cc:266:slice$2598 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_20.$auto$ff.cc:266:slice$2572 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_20.$auto$ff.cc:266:slice$2573 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_20.$auto$ff.cc:266:slice$2574 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_2.$auto$ff.cc:266:slice$2572 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_2.$auto$ff.cc:266:slice$2573 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_2.$auto$ff.cc:266:slice$2574 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_1.$auto$ff.cc:266:slice$2572 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_19.$auto$ff.cc:266:slice$2572 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_19.$auto$ff.cc:266:slice$2573 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_19.$auto$ff.cc:266:slice$2574 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_1.$auto$ff.cc:266:slice$2573 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_18.$auto$ff.cc:266:slice$2572 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_18.$auto$ff.cc:266:slice$2573 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_18.$auto$ff.cc:266:slice$2574 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_1.$auto$ff.cc:266:slice$2574 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_17.$auto$ff.cc:266:slice$2572 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_17.$auto$ff.cc:266:slice$2573 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_17.$auto$ff.cc:266:slice$2574 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_16.$auto$ff.cc:266:slice$2572 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_16.$auto$ff.cc:266:slice$2573 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_16.$auto$ff.cc:266:slice$2574 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_15.$auto$ff.cc:266:slice$2572 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_15.$auto$ff.cc:266:slice$2573 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_15.$auto$ff.cc:266:slice$2574 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_14.$auto$ff.cc:266:slice$2572 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_14.$auto$ff.cc:266:slice$2573 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_14.$auto$ff.cc:266:slice$2574 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_0.$auto$ff.cc:266:slice$2571 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_13.$auto$ff.cc:266:slice$2572 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_13.$auto$ff.cc:266:slice$2573 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_13.$auto$ff.cc:266:slice$2574 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_0.$auto$ff.cc:266:slice$2572 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_12.$auto$ff.cc:266:slice$2572 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_12.$auto$ff.cc:266:slice$2573 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_12.$auto$ff.cc:266:slice$2574 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_0.$auto$ff.cc:266:slice$2573 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_11.$auto$ff.cc:266:slice$2572 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_11.$auto$ff.cc:266:slice$2573 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\combine_res_inst_11.$auto$ff.cc:266:slice$2574 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\find_max_inst.$auto$ff.cc:266:slice$2575 ($dffe) from module sv_chip0_hierarchy_no_mem.
Removing always-active EN on $flatten\find_max_inst.$auto$ff.cc:266:slice$2576 ($dffe) from module sv_chip0_hierarchy_no_mem.
Setting constant 1-bit at position 0 on $procdff$2415 ($dff) from module sv_chip0_hierarchy_no_mem.

19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..
Removed 337 unused cells and 325 unused wires.
<suppressed ~576 debug messages>

19.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module sv_chip0_hierarchy_no_mem.
<suppressed ~556 debug messages>

19.10. Rerunning OPT passes. (Maybe there is more to do..)

19.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sv_chip0_hierarchy_no_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~58 debug messages>

19.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sv_chip0_hierarchy_no_mem.
Performed a total of 0 changes.

19.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
Removed a total of 0 cells.

19.14. Executing OPT_SHARE pass.

19.15. Executing OPT_DFF pass (perform DFF optimizations).

19.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

19.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module sv_chip0_hierarchy_no_mem.

19.18. Rerunning OPT passes. (Maybe there is more to do..)

19.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sv_chip0_hierarchy_no_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~58 debug messages>

19.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sv_chip0_hierarchy_no_mem.
Performed a total of 0 changes.

19.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
Removed a total of 0 cells.

19.22. Executing OPT_SHARE pass.

19.23. Executing OPT_DFF pass (perform DFF optimizations).

19.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..

19.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module sv_chip0_hierarchy_no_mem.

19.26. Finished OPT passes. (There is nothing left to do.)

20. Executing TECHMAP pass (map to technology primitives).

20.1. Executing Verilog-2005 frontend: /home/ljw/VTR/vtr-verilog-to-routing/build/bin/../share/yosys/parmys/adff2dff.v
Parsing Verilog input from `/home/ljw/VTR/vtr-verilog-to-routing/build/bin/../share/yosys/parmys/adff2dff.v' to AST representation.
Generating RTLIL representation for module `\adff2dff'.
Successfully finished Verilog frontend.

20.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

21. Executing TECHMAP pass (map to technology primitives).

21.1. Executing Verilog-2005 frontend: /home/ljw/VTR/vtr-verilog-to-routing/build/bin/../share/yosys/parmys/adffe2dff.v
Parsing Verilog input from `/home/ljw/VTR/vtr-verilog-to-routing/build/bin/../share/yosys/parmys/adffe2dff.v' to AST representation.
Generating RTLIL representation for module `\adffe2dff'.
Successfully finished Verilog frontend.

21.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

22. Executing TECHMAP pass (map to technology primitives).

22.1. Executing Verilog-2005 frontend: /home/ljw/VTR/vtr-verilog-to-routing/build/bin/../share/yosys/parmys/aldff2dff.v
Parsing Verilog input from `/home/ljw/VTR/vtr-verilog-to-routing/build/bin/../share/yosys/parmys/aldff2dff.v' to AST representation.
Generating RTLIL representation for module `\aldff2dff'.
Successfully finished Verilog frontend.

22.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

23. Executing TECHMAP pass (map to technology primitives).

23.1. Executing Verilog-2005 frontend: /home/ljw/VTR/vtr-verilog-to-routing/build/bin/../share/yosys/parmys/aldffe2dff.v
Parsing Verilog input from `/home/ljw/VTR/vtr-verilog-to-routing/build/bin/../share/yosys/parmys/aldffe2dff.v' to AST representation.
Generating RTLIL representation for module `\aldffe2dff'.
Successfully finished Verilog frontend.

23.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

24. Executing OPT pass (performing simple optimizations).

24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sv_chip0_hierarchy_no_mem.

24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
Removed a total of 0 cells.

24.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sv_chip0_hierarchy_no_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~58 debug messages>

24.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sv_chip0_hierarchy_no_mem.
Performed a total of 0 changes.

24.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
Removed a total of 0 cells.

24.6. Executing OPT_SHARE pass.

24.7. Executing OPT_DFF pass (perform DFF optimizations).

24.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..

24.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module sv_chip0_hierarchy_no_mem.

24.10. Finished OPT passes. (There is nothing left to do.)

25. Starting parmys pass.
Reading Configuration file
Architecture: soft_fpu_arch_timing_chain.xml
Reading FPGA Architecture file
Using Lut input width of: 3
--------------------------------------------------------------------
Creating Odin-II Netlist from Design
--------------------------------------------------------------------
High-level Synthesis Begin

Elaboration Time: 2.2ms
--------------------------------------------------------------------
Successful Elaboration of the design by Odin-II
Performing Optimization on the Netlist

Optimization Time: 3.4ms
--------------------------------------------------------------------
Successful Optimization of netlist by Odin-II
Performing Partial Technology Mapping to the target device

Techmap Time: 12.5ms
--------------------------------------------------------------------
Successful Partial Technology Mapping by Odin-II

Total Synthesis Time: 18.1ms
--------------------------------------------------------------------

Hard adder Distribution
============================


Total # of chains = 0

Hard adder chain Details
============================


The Number of Hard Block adders in the Longest Chain: 0


The Total Number of Hard Block adders: 0


Geometric mean adder/subtractor chain length: 10.38

Hard MINUS Distribution
============================


Total # of chains = 11

Hard sub chain Details
============================


The Number of Hard Block subs in the Longest Chain: 15


The Total Number of Hard Block subs: 115

	==== Stats ====
Number of <INPUT_NODE> node:              169
Number of <OUTPUT_NODE> node:             197
Number of <ADD> node:                     2723
Number of <LOGICAL_NOT> node:             100
Number of <GENERIC> node:                 1718
Total estimated number of lut:            10790
Total number of node:                     4441
Longest path:                             146
Average path:                             8


--------------------------------------------------------------------
Updating the Design
--------------------------------------------------------------------
parmys pass finished.

26. Executing OPT pass (performing simple optimizations).

26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sv_chip0_hierarchy_no_mem.
<suppressed ~10 debug messages>

26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
<suppressed ~135 debug messages>
Removed a total of 45 cells.

26.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sv_chip0_hierarchy_no_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~58 debug messages>

26.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sv_chip0_hierarchy_no_mem.
Performed a total of 0 changes.

26.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
Removed a total of 0 cells.

26.6. Executing OPT_SHARE pass.

26.7. Executing OPT_DFF pass (perform DFF optimizations).

26.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..
Removed 0 unused cells and 174 unused wires.
<suppressed ~1 debug messages>

26.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module sv_chip0_hierarchy_no_mem.

26.10. Rerunning OPT passes. (Maybe there is more to do..)

26.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sv_chip0_hierarchy_no_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~58 debug messages>

26.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sv_chip0_hierarchy_no_mem.
Performed a total of 0 changes.

26.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
Removed a total of 0 cells.

26.14. Executing OPT_SHARE pass.

26.15. Executing OPT_DFF pass (perform DFF optimizations).

26.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..

26.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module sv_chip0_hierarchy_no_mem.

26.18. Finished OPT passes. (There is nothing left to do.)

27. Executing TECHMAP pass (map to technology primitives).

27.1. Executing Verilog-2005 frontend: /home/ljw/VTR/vtr-verilog-to-routing/build/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/ljw/VTR/vtr-verilog-to-routing/build/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

27.2. Continuing TECHMAP pass.
Running "alumacc" on wrapper $extern:wrap:$gt:A_SIGNED=0:A_WIDTH=11:B_SIGNED=0:B_WIDTH=11:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$gt:A_SIGNED=0:A_WIDTH=11:B_SIGNED=0:B_WIDTH=11:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$gt:A_SIGNED=0:A_WIDTH=11:B_SIGNED=0:B_WIDTH=11:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$d7387fdb214042e5ef2d69a3f74948694b4bb65e\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_or.
Running "alumacc" on wrapper $extern:wrap:$le:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$le:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$le:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=9:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$le:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=16:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$le:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=16:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$le:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=16:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $and.
Running "alumacc" on wrapper $extern:wrap:$ge:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=16:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=16:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=16:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $sdffce.
Running "alumacc" on wrapper $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=10:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=10:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$lt:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=10:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$le:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=10:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$le:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=10:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$le:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=10:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=10:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=10:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:A_SIGNED=0:A_WIDTH=10:B_SIGNED=0:B_WIDTH=10:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod$54b5b56f4359a73f4e91ebc5405f79b059a0eeaf\_90_pmux for cells of type $pmux.
Using template $paramod$b8e36f7b835737ff36411503b6ab87079f7fe688\_90_pmux for cells of type $pmux.
Using template $paramod$b76f0c7d813c9b9e201e1c450cfd00106058a636\_90_pmux for cells of type $pmux.
Running "alumacc" on wrapper $extern:wrap:$ge:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=7:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=7:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:A_SIGNED=0:A_WIDTH=9:B_SIGNED=0:B_WIDTH=7:Y_WIDTH=1:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $or.
Using template $paramod$ec32b97001540459632a2df9accd677d3703ea0f\_90_alu for cells of type $alu.
Using template $paramod$49641a5ace7a8dbedd31c417f5a1b54fcecf6c7d\_90_alu for cells of type $alu.
Using template $paramod$10afb0bd3bc8b3b1c0bbb9286f33a7305ba386cf\_90_alu for cells of type $alu.
Using template $paramod$484d51534650924b7ed4c69e46eed3a56904771f\_90_alu for cells of type $alu.
Using template $paramod$ea139abf5d9f33c5a8f110be2ae0a1d01adc5fd6\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001011 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
No more expansions possible.
<suppressed ~4282 debug messages>

28. Executing OPT pass (performing simple optimizations).

28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sv_chip0_hierarchy_no_mem.
<suppressed ~2034 debug messages>

28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
<suppressed ~2643 debug messages>
Removed a total of 881 cells.

28.3. Executing OPT_DFF pass (perform DFF optimizations).

28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..
Removed 886 unused cells and 3801 unused wires.
<suppressed ~887 debug messages>

28.5. Finished fast OPT passes.

29. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

30. Executing OPT pass (performing simple optimizations).

30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sv_chip0_hierarchy_no_mem.
<suppressed ~4 debug messages>

30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sv_chip0_hierarchy_no_mem'.
Removed a total of 0 cells.

30.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sv_chip0_hierarchy_no_mem..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

30.4. Finished fast OPT passes.

31. Printing statistics.

31. Printing statistics.

=== sv_chip0_hierarchy_no_mem ===

   Number of wires:              24590
   Number of wire bits:          27640
   Number of public wires:         466
   Number of public wire bits:     466
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              24271
     $_AND_                       1273
     $_DFF_P_                    11737
     $_MUX_                       7104
     $_NOT_                        435
     $_OR_                         745
     $_XOR_                        254
     adder                        2723


=== sv_chip0_hierarchy_no_mem ===

   Number of wires:              24590
   Number of wire bits:          27640
   Number of public wires:         466
   Number of public wire bits:     466
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              24271
     $_AND_                       1273
     $_DFF_P_                    11737
     $_MUX_                       7104
     $_NOT_                        435
     $_OR_                         745
     $_XOR_                        254
     adder                        2723

32. Executing HIERARCHY pass (managing design hierarchy).

32.1. Finding top of design hierarchy..
root of   1 design levels: sv_chip0_hierarchy_no_mem
Automatically selected sv_chip0_hierarchy_no_mem as design top module.

32.2. Analyzing design hierarchy..
Top module:  \sv_chip0_hierarchy_no_mem

32.3. Analyzing design hierarchy..
Top module:  \sv_chip0_hierarchy_no_mem
Removed 0 unused modules.

33. Executing BLIF backend.

Warnings: 23 unique messages, 69 total
End of script. Logfile hash: 37603ce392, CPU: user 4.63s system 0.07s, MEM: 99.42 MB peak
Yosys 0.26 (git sha1 7a967625680, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 25% 29x opt_clean (1 sec), 22% 36x opt_expr (1 sec), ...
	Command being timed: "/home/ljw/VTR/vtr-verilog-to-routing/build/bin/yosys -c synthesis.tcl"
	User time (seconds): 4.65
	System time (seconds): 0.07
	Percent of CPU this job got: 99%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:04.74
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 101808
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 25794
	Voluntary context switches: 1
	Involuntary context switches: 579
	Swaps: 0
	File system inputs: 0
	File system outputs: 5192
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
